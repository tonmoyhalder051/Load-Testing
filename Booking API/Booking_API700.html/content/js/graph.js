/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 279.0, "minX": 0.0, "maxY": 11639.0, "series": [{"data": [[0.0, 798.0], [0.1, 798.0], [0.2, 800.0], [0.3, 801.0], [0.4, 801.0], [0.5, 802.0], [0.6, 802.0], [0.7, 802.0], [0.8, 804.0], [0.9, 814.0], [1.0, 819.0], [1.1, 819.0], [1.2, 826.0], [1.3, 834.0], [1.4, 834.0], [1.5, 896.0], [1.6, 952.0], [1.7, 952.0], [1.8, 1517.0], [1.9, 1545.0], [2.0, 1546.0], [2.1, 1546.0], [2.2, 1549.0], [2.3, 1549.0], [2.4, 1549.0], [2.5, 1550.0], [2.6, 1552.0], [2.7, 1552.0], [2.8, 1553.0], [2.9, 1554.0], [3.0, 1555.0], [3.1, 1555.0], [3.2, 1556.0], [3.3, 1557.0], [3.4, 1557.0], [3.5, 1557.0], [3.6, 1557.0], [3.7, 1557.0], [3.8, 1557.0], [3.9, 1558.0], [4.0, 1558.0], [4.1, 1558.0], [4.2, 1560.0], [4.3, 1560.0], [4.4, 1560.0], [4.5, 1561.0], [4.6, 1564.0], [4.7, 1564.0], [4.8, 1564.0], [4.9, 1564.0], [5.0, 1565.0], [5.1, 1565.0], [5.2, 1565.0], [5.3, 1565.0], [5.4, 1565.0], [5.5, 1565.0], [5.6, 1566.0], [5.7, 1566.0], [5.8, 1566.0], [5.9, 1566.0], [6.0, 1567.0], [6.1, 1567.0], [6.2, 1567.0], [6.3, 1567.0], [6.4, 1567.0], [6.5, 1567.0], [6.6, 1567.0], [6.7, 1567.0], [6.8, 1567.0], [6.9, 1568.0], [7.0, 1568.0], [7.1, 1568.0], [7.2, 1569.0], [7.3, 1569.0], [7.4, 1569.0], [7.5, 1569.0], [7.6, 1569.0], [7.7, 1569.0], [7.8, 1569.0], [7.9, 1569.0], [8.0, 1569.0], [8.1, 1569.0], [8.2, 1569.0], [8.3, 1570.0], [8.4, 1570.0], [8.5, 1570.0], [8.6, 1570.0], [8.7, 1570.0], [8.8, 1570.0], [8.9, 1571.0], [9.0, 1571.0], [9.1, 1571.0], [9.2, 1571.0], [9.3, 1571.0], [9.4, 1571.0], [9.5, 1571.0], [9.6, 1571.0], [9.7, 1571.0], [9.8, 1572.0], [9.9, 1572.0], [10.0, 1572.0], [10.1, 1572.0], [10.2, 1572.0], [10.3, 1573.0], [10.4, 1573.0], [10.5, 1573.0], [10.6, 1573.0], [10.7, 1573.0], [10.8, 1573.0], [10.9, 1573.0], [11.0, 1573.0], [11.1, 1573.0], [11.2, 1574.0], [11.3, 1575.0], [11.4, 1575.0], [11.5, 1575.0], [11.6, 1576.0], [11.7, 1576.0], [11.8, 1577.0], [11.9, 1578.0], [12.0, 1579.0], [12.1, 1579.0], [12.2, 1580.0], [12.3, 1581.0], [12.4, 1581.0], [12.5, 1581.0], [12.6, 1597.0], [12.7, 1597.0], [12.8, 1597.0], [12.9, 1598.0], [13.0, 1600.0], [13.1, 1600.0], [13.2, 1600.0], [13.3, 1601.0], [13.4, 1601.0], [13.5, 1602.0], [13.6, 1603.0], [13.7, 1603.0], [13.8, 1604.0], [13.9, 1605.0], [14.0, 1605.0], [14.1, 1605.0], [14.2, 1605.0], [14.3, 1605.0], [14.4, 1605.0], [14.5, 1605.0], [14.6, 1610.0], [14.7, 1610.0], [14.8, 1616.0], [14.9, 1623.0], [15.0, 1624.0], [15.1, 1624.0], [15.2, 1625.0], [15.3, 1628.0], [15.4, 1628.0], [15.5, 1629.0], [15.6, 1636.0], [15.7, 1636.0], [15.8, 1638.0], [15.9, 1652.0], [16.0, 2469.0], [16.1, 2469.0], [16.2, 2480.0], [16.3, 2485.0], [16.4, 2485.0], [16.5, 2489.0], [16.6, 2490.0], [16.7, 2490.0], [16.8, 2491.0], [16.9, 2491.0], [17.0, 2492.0], [17.1, 2492.0], [17.2, 2495.0], [17.3, 2498.0], [17.4, 2498.0], [17.5, 2502.0], [17.6, 2505.0], [17.7, 2505.0], [17.8, 2508.0], [17.9, 2508.0], [18.0, 2509.0], [18.1, 2509.0], [18.2, 2510.0], [18.3, 2511.0], [18.4, 2511.0], [18.5, 2512.0], [18.6, 2513.0], [18.7, 2513.0], [18.8, 2514.0], [18.9, 2514.0], [19.0, 2515.0], [19.1, 2515.0], [19.2, 2516.0], [19.3, 2517.0], [19.4, 2517.0], [19.5, 2517.0], [19.6, 2518.0], [19.7, 2518.0], [19.8, 2519.0], [19.9, 2519.0], [20.0, 2519.0], [20.1, 2519.0], [20.2, 2520.0], [20.3, 2520.0], [20.4, 2520.0], [20.5, 2521.0], [20.6, 2521.0], [20.7, 2521.0], [20.8, 2521.0], [20.9, 2521.0], [21.0, 2522.0], [21.1, 2522.0], [21.2, 2522.0], [21.3, 2522.0], [21.4, 2522.0], [21.5, 2523.0], [21.6, 2525.0], [21.7, 2525.0], [21.8, 2528.0], [21.9, 2528.0], [22.0, 2528.0], [22.1, 2528.0], [22.2, 2529.0], [22.3, 2536.0], [22.4, 2536.0], [22.5, 2537.0], [22.6, 2539.0], [22.7, 2539.0], [22.8, 2541.0], [22.9, 2541.0], [23.0, 2542.0], [23.1, 2542.0], [23.2, 2542.0], [23.3, 2544.0], [23.4, 2544.0], [23.5, 2544.0], [23.6, 2550.0], [23.7, 2550.0], [23.8, 2550.0], [23.9, 2551.0], [24.0, 2552.0], [24.1, 2552.0], [24.2, 2552.0], [24.3, 2552.0], [24.4, 2552.0], [24.5, 2553.0], [24.6, 2553.0], [24.7, 2553.0], [24.8, 2553.0], [24.9, 2553.0], [25.0, 2553.0], [25.1, 2553.0], [25.2, 2554.0], [25.3, 2554.0], [25.4, 2554.0], [25.5, 2554.0], [25.6, 2554.0], [25.7, 2554.0], [25.8, 2556.0], [25.9, 2556.0], [26.0, 2556.0], [26.1, 2556.0], [26.2, 2556.0], [26.3, 2557.0], [26.4, 2557.0], [26.5, 2557.0], [26.6, 2558.0], [26.7, 2558.0], [26.8, 2558.0], [26.9, 2559.0], [27.0, 2559.0], [27.1, 2559.0], [27.2, 2560.0], [27.3, 2561.0], [27.4, 2561.0], [27.5, 2561.0], [27.6, 2562.0], [27.7, 2562.0], [27.8, 2562.0], [27.9, 2562.0], [28.0, 2563.0], [28.1, 2563.0], [28.2, 2565.0], [28.3, 2566.0], [28.4, 2566.0], [28.5, 2566.0], [28.6, 2567.0], [28.7, 2567.0], [28.8, 2568.0], [28.9, 2568.0], [29.0, 2569.0], [29.1, 2569.0], [29.2, 2569.0], [29.3, 2571.0], [29.4, 2571.0], [29.5, 2572.0], [29.6, 2573.0], [29.7, 2573.0], [29.8, 2575.0], [29.9, 2577.0], [30.0, 2578.0], [30.1, 2578.0], [30.2, 2578.0], [30.3, 2579.0], [30.4, 2579.0], [30.5, 2579.0], [30.6, 2580.0], [30.7, 2580.0], [30.8, 2582.0], [30.9, 2582.0], [31.0, 2584.0], [31.1, 2584.0], [31.2, 2585.0], [31.3, 2586.0], [31.4, 2586.0], [31.5, 2589.0], [31.6, 2589.0], [31.7, 2589.0], [31.8, 2591.0], [31.9, 2592.0], [32.0, 2592.0], [32.1, 2592.0], [32.2, 2596.0], [32.3, 2597.0], [32.4, 2597.0], [32.5, 2598.0], [32.6, 2598.0], [32.7, 2598.0], [32.8, 2599.0], [32.9, 2601.0], [33.0, 2601.0], [33.1, 2601.0], [33.2, 2601.0], [33.3, 2602.0], [33.4, 2602.0], [33.5, 2603.0], [33.6, 2604.0], [33.7, 2604.0], [33.8, 2606.0], [33.9, 2606.0], [34.0, 2607.0], [34.1, 2607.0], [34.2, 2608.0], [34.3, 2609.0], [34.4, 2609.0], [34.5, 2611.0], [34.6, 2611.0], [34.7, 2611.0], [34.8, 2612.0], [34.9, 2613.0], [35.0, 2613.0], [35.1, 2613.0], [35.2, 2614.0], [35.3, 2614.0], [35.4, 2614.0], [35.5, 2614.0], [35.6, 2614.0], [35.7, 2614.0], [35.8, 2622.0], [35.9, 2622.0], [36.0, 2622.0], [36.1, 2622.0], [36.2, 2622.0], [36.3, 2623.0], [36.4, 2623.0], [36.5, 2623.0], [36.6, 2624.0], [36.7, 2624.0], [36.8, 2626.0], [36.9, 2626.0], [37.0, 2627.0], [37.1, 2627.0], [37.2, 2627.0], [37.3, 2628.0], [37.4, 2628.0], [37.5, 2628.0], [37.6, 2628.0], [37.7, 2628.0], [37.8, 2628.0], [37.9, 2629.0], [38.0, 2630.0], [38.1, 2630.0], [38.2, 2630.0], [38.3, 2632.0], [38.4, 2632.0], [38.5, 2633.0], [38.6, 2635.0], [38.7, 2635.0], [38.8, 2635.0], [38.9, 2637.0], [39.0, 2638.0], [39.1, 2638.0], [39.2, 2639.0], [39.3, 2641.0], [39.4, 2641.0], [39.5, 2644.0], [39.6, 2645.0], [39.7, 2645.0], [39.8, 2646.0], [39.9, 2652.0], [40.0, 2652.0], [40.1, 3132.0], [40.2, 3193.0], [40.3, 3309.0], [40.4, 3309.0], [40.5, 3312.0], [40.6, 3312.0], [40.7, 3312.0], [40.8, 3312.0], [40.9, 3314.0], [41.0, 3314.0], [41.1, 3315.0], [41.2, 3315.0], [41.3, 3317.0], [41.4, 3317.0], [41.5, 3317.0], [41.6, 3317.0], [41.7, 3317.0], [41.8, 3318.0], [41.9, 3318.0], [42.0, 3318.0], [42.1, 3318.0], [42.2, 3319.0], [42.3, 3321.0], [42.4, 3321.0], [42.5, 3322.0], [42.6, 3322.0], [42.7, 3322.0], [42.8, 3323.0], [42.9, 3323.0], [43.0, 3323.0], [43.1, 3323.0], [43.2, 3325.0], [43.3, 3325.0], [43.4, 3325.0], [43.5, 3327.0], [43.6, 3327.0], [43.7, 3327.0], [43.8, 3328.0], [43.9, 3329.0], [44.0, 3329.0], [44.1, 3329.0], [44.2, 3330.0], [44.3, 3330.0], [44.4, 3330.0], [44.5, 3330.0], [44.6, 3331.0], [44.7, 3331.0], [44.8, 3332.0], [44.9, 3333.0], [45.0, 3333.0], [45.1, 3334.0], [45.2, 3335.0], [45.3, 3337.0], [45.4, 3337.0], [45.5, 3337.0], [45.6, 3338.0], [45.7, 3338.0], [45.8, 3338.0], [45.9, 3339.0], [46.0, 3339.0], [46.1, 3341.0], [46.2, 3342.0], [46.3, 3343.0], [46.4, 3343.0], [46.5, 3343.0], [46.6, 3344.0], [46.7, 3344.0], [46.8, 3344.0], [46.9, 3344.0], [47.0, 3344.0], [47.1, 3345.0], [47.2, 3346.0], [47.3, 3346.0], [47.4, 3346.0], [47.5, 3346.0], [47.6, 3348.0], [47.7, 3348.0], [47.8, 3349.0], [47.9, 3349.0], [48.0, 3349.0], [48.1, 3350.0], [48.2, 3351.0], [48.3, 3352.0], [48.4, 3352.0], [48.5, 3353.0], [48.6, 3372.0], [48.7, 3372.0], [48.8, 3408.0], [48.9, 3426.0], [49.0, 3426.0], [49.1, 3428.0], [49.2, 3431.0], [49.3, 3431.0], [49.4, 3431.0], [49.5, 3436.0], [49.6, 3438.0], [49.7, 3438.0], [49.8, 3441.0], [49.9, 3449.0], [50.0, 3449.0], [50.1, 3453.0], [50.2, 3456.0], [50.3, 3459.0], [50.4, 3459.0], [50.5, 3459.0], [50.6, 3460.0], [50.7, 3460.0], [50.8, 3461.0], [50.9, 3462.0], [51.0, 3462.0], [51.1, 3463.0], [51.2, 3465.0], [51.3, 3466.0], [51.4, 3466.0], [51.5, 3467.0], [51.6, 3470.0], [51.7, 3470.0], [51.8, 3642.0], [51.9, 3649.0], [52.0, 3649.0], [52.1, 3651.0], [52.2, 3655.0], [52.3, 3656.0], [52.4, 3656.0], [52.5, 3657.0], [52.6, 3659.0], [52.7, 3659.0], [52.8, 3662.0], [52.9, 3664.0], [53.0, 3664.0], [53.1, 3665.0], [53.2, 3665.0], [53.3, 3667.0], [53.4, 3667.0], [53.5, 3667.0], [53.6, 3668.0], [53.7, 3668.0], [53.8, 3668.0], [53.9, 3668.0], [54.0, 3668.0], [54.1, 3669.0], [54.2, 3669.0], [54.3, 3670.0], [54.4, 3670.0], [54.5, 3671.0], [54.6, 3671.0], [54.7, 3671.0], [54.8, 3672.0], [54.9, 3676.0], [55.0, 3676.0], [55.1, 3678.0], [55.2, 3681.0], [55.3, 3683.0], [55.4, 3683.0], [55.5, 3683.0], [55.6, 3684.0], [55.7, 3684.0], [55.8, 3684.0], [55.9, 3686.0], [56.0, 3686.0], [56.1, 3687.0], [56.2, 3687.0], [56.3, 3688.0], [56.4, 3688.0], [56.5, 4060.0], [56.6, 4060.0], [56.7, 4060.0], [56.8, 4061.0], [56.9, 4062.0], [57.0, 4062.0], [57.1, 4062.0], [57.2, 4064.0], [57.3, 4064.0], [57.4, 4064.0], [57.5, 4065.0], [57.6, 4067.0], [57.7, 4067.0], [57.8, 4069.0], [57.9, 4069.0], [58.0, 4069.0], [58.1, 4069.0], [58.2, 4071.0], [58.3, 4073.0], [58.4, 4073.0], [58.5, 4075.0], [58.6, 4075.0], [58.7, 4075.0], [58.8, 4077.0], [58.9, 4077.0], [59.0, 4077.0], [59.1, 4077.0], [59.2, 4077.0], [59.3, 4079.0], [59.4, 4079.0], [59.5, 4079.0], [59.6, 4080.0], [59.7, 4080.0], [59.8, 4083.0], [59.9, 4083.0], [60.0, 4083.0], [60.1, 4084.0], [60.2, 4084.0], [60.3, 4084.0], [60.4, 4084.0], [60.5, 4085.0], [60.6, 4085.0], [60.7, 4085.0], [60.8, 4087.0], [60.9, 4087.0], [61.0, 4087.0], [61.1, 4089.0], [61.2, 4089.0], [61.3, 4089.0], [61.4, 4089.0], [61.5, 4091.0], [61.6, 4091.0], [61.7, 4091.0], [61.8, 4092.0], [61.9, 4094.0], [62.0, 4094.0], [62.1, 4094.0], [62.2, 4095.0], [62.3, 4096.0], [62.4, 4096.0], [62.5, 4097.0], [62.6, 4099.0], [62.7, 4099.0], [62.8, 4101.0], [62.9, 4103.0], [63.0, 4103.0], [63.1, 4104.0], [63.2, 4104.0], [63.3, 4107.0], [63.4, 4107.0], [63.5, 4108.0], [63.6, 4110.0], [63.7, 4110.0], [63.8, 4111.0], [63.9, 4112.0], [64.0, 4112.0], [64.1, 4112.0], [64.2, 4112.0], [64.3, 4114.0], [64.4, 4114.0], [64.5, 4116.0], [64.6, 4117.0], [64.7, 4117.0], [64.8, 4122.0], [64.9, 4132.0], [65.0, 4132.0], [65.1, 4133.0], [65.2, 4138.0], [65.3, 4139.0], [65.4, 4139.0], [65.5, 4140.0], [65.6, 4141.0], [65.7, 4141.0], [65.8, 4141.0], [65.9, 4142.0], [66.0, 4142.0], [66.1, 4143.0], [66.2, 4144.0], [66.3, 4144.0], [66.4, 4144.0], [66.5, 4144.0], [66.6, 4146.0], [66.7, 4146.0], [66.8, 4146.0], [66.9, 4147.0], [67.0, 4147.0], [67.1, 4149.0], [67.2, 4150.0], [67.3, 4150.0], [67.4, 4150.0], [67.5, 4150.0], [67.6, 4150.0], [67.7, 4150.0], [67.8, 4150.0], [67.9, 4151.0], [68.0, 4151.0], [68.1, 4152.0], [68.2, 4152.0], [68.3, 4152.0], [68.4, 4152.0], [68.5, 4153.0], [68.6, 4153.0], [68.7, 4153.0], [68.8, 4154.0], [68.9, 4154.0], [69.0, 4154.0], [69.1, 4154.0], [69.2, 4155.0], [69.3, 4157.0], [69.4, 4157.0], [69.5, 4158.0], [69.6, 4158.0], [69.7, 4158.0], [69.8, 4159.0], [69.9, 4159.0], [70.0, 4159.0], [70.1, 4160.0], [70.2, 4356.0], [70.3, 4363.0], [70.4, 4363.0], [70.5, 4365.0], [70.6, 4370.0], [70.7, 4370.0], [70.8, 4379.0], [70.9, 4382.0], [71.0, 4382.0], [71.1, 4383.0], [71.2, 4385.0], [71.3, 4386.0], [71.4, 4386.0], [71.5, 4388.0], [71.6, 4397.0], [71.7, 4397.0], [71.8, 4401.0], [71.9, 4402.0], [72.0, 4402.0], [72.1, 4411.0], [72.2, 4414.0], [72.3, 4416.0], [72.4, 4416.0], [72.5, 4422.0], [72.6, 4425.0], [72.7, 4425.0], [72.8, 4426.0], [72.9, 4428.0], [73.0, 4428.0], [73.1, 4429.0], [73.2, 4434.0], [73.3, 4435.0], [73.4, 4435.0], [73.5, 4436.0], [73.6, 4438.0], [73.7, 4438.0], [73.8, 4439.0], [73.9, 4441.0], [74.0, 4441.0], [74.1, 4441.0], [74.2, 4442.0], [74.3, 4442.0], [74.4, 4442.0], [74.5, 4445.0], [74.6, 4445.0], [74.7, 4445.0], [74.8, 4445.0], [74.9, 4445.0], [75.0, 4445.0], [75.1, 4446.0], [75.2, 4447.0], [75.3, 4449.0], [75.4, 4449.0], [75.5, 4449.0], [75.6, 4451.0], [75.7, 4451.0], [75.8, 4451.0], [75.9, 4452.0], [76.0, 4452.0], [76.1, 4452.0], [76.2, 4452.0], [76.3, 4452.0], [76.4, 4452.0], [76.5, 4516.0], [76.6, 4516.0], [76.7, 4516.0], [76.8, 4517.0], [76.9, 4517.0], [77.0, 4517.0], [77.1, 4520.0], [77.2, 4521.0], [77.3, 4521.0], [77.4, 4521.0], [77.5, 4524.0], [77.6, 4525.0], [77.7, 4525.0], [77.8, 4526.0], [77.9, 4527.0], [78.0, 4527.0], [78.1, 4528.0], [78.2, 4529.0], [78.3, 4531.0], [78.4, 4531.0], [78.5, 4531.0], [78.6, 4532.0], [78.7, 4532.0], [78.8, 4532.0], [78.9, 4533.0], [79.0, 4533.0], [79.1, 4535.0], [79.2, 4535.0], [79.3, 4536.0], [79.4, 4536.0], [79.5, 4536.0], [79.6, 4537.0], [79.7, 4537.0], [79.8, 4537.0], [79.9, 4537.0], [80.0, 4537.0], [80.1, 4538.0], [80.2, 4540.0], [80.3, 4540.0], [80.4, 4540.0], [80.5, 4540.0], [80.6, 4540.0], [80.7, 4540.0], [80.8, 4542.0], [80.9, 4542.0], [81.0, 4542.0], [81.1, 4542.0], [81.2, 4542.0], [81.3, 4543.0], [81.4, 4543.0], [81.5, 4544.0], [81.6, 4547.0], [81.7, 4547.0], [81.8, 4549.0], [81.9, 4550.0], [82.0, 4550.0], [82.1, 4550.0], [82.2, 4550.0], [82.3, 4550.0], [82.4, 4550.0], [82.5, 4551.0], [82.6, 4555.0], [82.7, 4555.0], [82.8, 4555.0], [82.9, 4555.0], [83.0, 4555.0], [83.1, 4556.0], [83.2, 4556.0], [83.3, 4557.0], [83.4, 4557.0], [83.5, 4557.0], [83.6, 4559.0], [83.7, 4559.0], [83.8, 4560.0], [83.9, 4561.0], [84.0, 4561.0], [84.1, 4564.0], [84.2, 4594.0], [84.3, 4610.0], [84.4, 4610.0], [84.5, 4641.0], [84.6, 4813.0], [84.7, 4813.0], [84.8, 4907.0], [84.9, 4939.0], [85.0, 4939.0], [85.1, 4957.0], [85.2, 4959.0], [85.3, 4961.0], [85.4, 4961.0], [85.5, 4962.0], [85.6, 4973.0], [85.7, 4973.0], [85.8, 4973.0], [85.9, 4974.0], [86.0, 4974.0], [86.1, 4978.0], [86.2, 4979.0], [86.3, 4979.0], [86.4, 4979.0], [86.5, 4980.0], [86.6, 4980.0], [86.7, 4980.0], [86.8, 4982.0], [86.9, 4982.0], [87.0, 4982.0], [87.1, 4982.0], [87.2, 4982.0], [87.3, 4983.0], [87.4, 4983.0], [87.5, 4984.0], [87.6, 4985.0], [87.7, 4985.0], [87.8, 4985.0], [87.9, 4986.0], [88.0, 4986.0], [88.1, 4987.0], [88.2, 4987.0], [88.3, 4987.0], [88.4, 4987.0], [88.5, 4988.0], [88.6, 4988.0], [88.7, 4988.0], [88.8, 4989.0], [88.9, 4989.0], [89.0, 4989.0], [89.1, 4989.0], [89.2, 4989.0], [89.3, 4990.0], [89.4, 4990.0], [89.5, 4990.0], [89.6, 4990.0], [89.7, 4990.0], [89.8, 4991.0], [89.9, 4991.0], [90.0, 4991.0], [90.1, 4991.0], [90.2, 4991.0], [90.3, 4993.0], [90.4, 4993.0], [90.5, 4995.0], [90.6, 4995.0], [90.7, 4995.0], [90.8, 4995.0], [90.9, 4995.0], [91.0, 4995.0], [91.1, 4996.0], [91.2, 4997.0], [91.3, 4997.0], [91.4, 4997.0], [91.5, 4997.0], [91.6, 4997.0], [91.7, 4997.0], [91.8, 4998.0], [91.9, 4998.0], [92.0, 4998.0], [92.1, 4999.0], [92.2, 4999.0], [92.3, 4999.0], [92.4, 4999.0], [92.5, 5000.0], [92.6, 5000.0], [92.7, 5000.0], [92.8, 5002.0], [92.9, 5002.0], [93.0, 5002.0], [93.1, 5002.0], [93.2, 5003.0], [93.3, 5003.0], [93.4, 5003.0], [93.5, 5003.0], [93.6, 5004.0], [93.7, 5004.0], [93.8, 5004.0], [93.9, 5005.0], [94.0, 5005.0], [94.1, 5005.0], [94.2, 5007.0], [94.3, 5007.0], [94.4, 5007.0], [94.5, 5009.0], [94.6, 5010.0], [94.7, 5010.0], [94.8, 5012.0], [94.9, 5037.0], [95.0, 5037.0], [95.1, 5040.0], [95.2, 5040.0], [95.3, 5040.0], [95.4, 5040.0], [95.5, 5041.0], [95.6, 5042.0], [95.7, 5042.0], [95.8, 5043.0], [95.9, 5044.0], [96.0, 5044.0], [96.1, 5044.0], [96.2, 5045.0], [96.3, 5045.0], [96.4, 5045.0], [96.5, 5047.0], [96.6, 5047.0], [96.7, 5047.0], [96.8, 5048.0], [96.9, 5049.0], [97.0, 5049.0], [97.1, 5049.0], [97.2, 5050.0], [97.3, 5051.0], [97.4, 5051.0], [97.5, 5052.0], [97.6, 5053.0], [97.7, 5053.0], [97.8, 5054.0], [97.9, 5054.0], [98.0, 5054.0], [98.1, 5057.0], [98.2, 5063.0], [98.3, 5581.0], [98.4, 5581.0], [98.5, 5588.0], [98.6, 5590.0], [98.7, 5590.0], [98.8, 5590.0], [98.9, 5591.0], [99.0, 5591.0], [99.1, 5592.0], [99.2, 5592.0], [99.3, 5593.0], [99.4, 5593.0], [99.5, 5596.0], [99.6, 5596.0], [99.7, 5596.0], [99.8, 5597.0], [99.9, 5601.0], [100.0, 5601.0]], "isOverall": false, "label": "Delete", "isController": false}, {"data": [[0.0, 1838.0], [0.1, 1838.0], [0.2, 2578.0], [0.3, 3124.0], [0.4, 3124.0], [0.5, 3279.0], [0.6, 3288.0], [0.7, 3288.0], [0.8, 3347.0], [0.9, 3439.0], [1.0, 3463.0], [1.1, 3463.0], [1.2, 3464.0], [1.3, 3466.0], [1.4, 3466.0], [1.5, 3468.0], [1.6, 3493.0], [1.7, 3493.0], [1.8, 3494.0], [1.9, 3495.0], [2.0, 3495.0], [2.1, 3495.0], [2.2, 3500.0], [2.3, 3503.0], [2.4, 3503.0], [2.5, 3505.0], [2.6, 3513.0], [2.7, 3513.0], [2.8, 3519.0], [2.9, 3520.0], [3.0, 3524.0], [3.1, 3524.0], [3.2, 3527.0], [3.3, 3531.0], [3.4, 3531.0], [3.5, 3534.0], [3.6, 3537.0], [3.7, 3537.0], [3.8, 3541.0], [3.9, 3543.0], [4.0, 3548.0], [4.1, 3548.0], [4.2, 3555.0], [4.3, 3560.0], [4.4, 3560.0], [4.5, 3562.0], [4.6, 3562.0], [4.7, 3562.0], [4.8, 3568.0], [4.9, 3569.0], [5.0, 3579.0], [5.1, 3579.0], [5.2, 3580.0], [5.3, 3585.0], [5.4, 3585.0], [5.5, 3591.0], [5.6, 3598.0], [5.7, 3598.0], [5.8, 3599.0], [5.9, 3617.0], [6.0, 3617.0], [6.1, 3649.0], [6.2, 3726.0], [6.3, 3888.0], [6.4, 3888.0], [6.5, 3914.0], [6.6, 3945.0], [6.7, 3945.0], [6.8, 3949.0], [6.9, 3951.0], [7.0, 3951.0], [7.1, 3952.0], [7.2, 3980.0], [7.3, 3989.0], [7.4, 3989.0], [7.5, 3990.0], [7.6, 3992.0], [7.7, 3992.0], [7.8, 4014.0], [7.9, 4017.0], [8.0, 4017.0], [8.1, 4026.0], [8.2, 4026.0], [8.3, 4026.0], [8.4, 4026.0], [8.5, 4041.0], [8.6, 4060.0], [8.7, 4060.0], [8.8, 4065.0], [8.9, 4065.0], [9.0, 4065.0], [9.1, 4065.0], [9.2, 4065.0], [9.3, 4067.0], [9.4, 4067.0], [9.5, 4069.0], [9.6, 4069.0], [9.7, 4069.0], [9.8, 4069.0], [9.9, 4071.0], [10.0, 4071.0], [10.1, 4074.0], [10.2, 4075.0], [10.3, 4077.0], [10.4, 4077.0], [10.5, 4078.0], [10.6, 4085.0], [10.7, 4085.0], [10.8, 4089.0], [10.9, 4089.0], [11.0, 4089.0], [11.1, 4090.0], [11.2, 4093.0], [11.3, 4094.0], [11.4, 4094.0], [11.5, 4097.0], [11.6, 4100.0], [11.7, 4100.0], [11.8, 4102.0], [11.9, 4103.0], [12.0, 4107.0], [12.1, 4107.0], [12.2, 4111.0], [12.3, 4115.0], [12.4, 4115.0], [12.5, 4115.0], [12.6, 4120.0], [12.7, 4120.0], [12.8, 4129.0], [12.9, 4129.0], [13.0, 4142.0], [13.1, 4142.0], [13.2, 4158.0], [13.3, 4162.0], [13.4, 4162.0], [13.5, 4164.0], [13.6, 4168.0], [13.7, 4168.0], [13.8, 4177.0], [13.9, 4178.0], [14.0, 4190.0], [14.1, 4190.0], [14.2, 4204.0], [14.3, 4239.0], [14.4, 4239.0], [14.5, 4252.0], [14.6, 4253.0], [14.7, 4253.0], [14.8, 4274.0], [14.9, 4307.0], [15.0, 4323.0], [15.1, 4323.0], [15.2, 4333.0], [15.3, 4338.0], [15.4, 4338.0], [15.5, 4340.0], [15.6, 4340.0], [15.7, 4340.0], [15.8, 4341.0], [15.9, 4348.0], [16.0, 4357.0], [16.1, 4357.0], [16.2, 4379.0], [16.3, 4380.0], [16.4, 4380.0], [16.5, 4419.0], [16.6, 4428.0], [16.7, 4428.0], [16.8, 4430.0], [16.9, 4451.0], [17.0, 4453.0], [17.1, 4453.0], [17.2, 4458.0], [17.3, 4464.0], [17.4, 4464.0], [17.5, 4468.0], [17.6, 4546.0], [17.7, 4546.0], [17.8, 4551.0], [17.9, 4553.0], [18.0, 4555.0], [18.1, 4555.0], [18.2, 4574.0], [18.3, 4579.0], [18.4, 4579.0], [18.5, 4586.0], [18.6, 4589.0], [18.7, 4589.0], [18.8, 4589.0], [18.9, 4591.0], [19.0, 4594.0], [19.1, 4594.0], [19.2, 4601.0], [19.3, 4607.0], [19.4, 4607.0], [19.5, 4620.0], [19.6, 4628.0], [19.7, 4628.0], [19.8, 4662.0], [19.9, 4664.0], [20.0, 4665.0], [20.1, 4665.0], [20.2, 4666.0], [20.3, 4667.0], [20.4, 4667.0], [20.5, 4670.0], [20.6, 4676.0], [20.7, 4676.0], [20.8, 4680.0], [20.9, 4681.0], [21.0, 4682.0], [21.1, 4682.0], [21.2, 4689.0], [21.3, 4689.0], [21.4, 4689.0], [21.5, 4693.0], [21.6, 4714.0], [21.7, 4714.0], [21.8, 4716.0], [21.9, 4717.0], [22.0, 4721.0], [22.1, 4721.0], [22.2, 4733.0], [22.3, 4774.0], [22.4, 4774.0], [22.5, 4778.0], [22.6, 4782.0], [22.7, 4782.0], [22.8, 4790.0], [22.9, 4796.0], [23.0, 4843.0], [23.1, 4843.0], [23.2, 4854.0], [23.3, 4858.0], [23.4, 4858.0], [23.5, 4870.0], [23.6, 4878.0], [23.7, 4878.0], [23.8, 4885.0], [23.9, 4891.0], [24.0, 4892.0], [24.1, 4892.0], [24.2, 4895.0], [24.3, 4910.0], [24.4, 4910.0], [24.5, 4918.0], [24.6, 4920.0], [24.7, 4920.0], [24.8, 4927.0], [24.9, 4942.0], [25.0, 4948.0], [25.1, 4948.0], [25.2, 4959.0], [25.3, 4961.0], [25.4, 4961.0], [25.5, 4961.0], [25.6, 4963.0], [25.7, 4963.0], [25.8, 4968.0], [25.9, 4971.0], [26.0, 5013.0], [26.1, 5013.0], [26.2, 5014.0], [26.3, 5025.0], [26.4, 5025.0], [26.5, 5026.0], [26.6, 5028.0], [26.7, 5028.0], [26.8, 5031.0], [26.9, 5036.0], [27.0, 5038.0], [27.1, 5038.0], [27.2, 5039.0], [27.3, 5039.0], [27.4, 5039.0], [27.5, 5050.0], [27.6, 5059.0], [27.7, 5059.0], [27.8, 5065.0], [27.9, 5066.0], [28.0, 5075.0], [28.1, 5075.0], [28.2, 5076.0], [28.3, 5079.0], [28.4, 5079.0], [28.5, 5084.0], [28.6, 5087.0], [28.7, 5087.0], [28.8, 5087.0], [28.9, 5093.0], [29.0, 5109.0], [29.1, 5109.0], [29.2, 5110.0], [29.3, 5130.0], [29.4, 5130.0], [29.5, 5130.0], [29.6, 5189.0], [29.7, 5189.0], [29.8, 5190.0], [29.9, 5198.0], [30.0, 5205.0], [30.1, 5205.0], [30.2, 5214.0], [30.3, 5223.0], [30.4, 5223.0], [30.5, 5232.0], [30.6, 5247.0], [30.7, 5247.0], [30.8, 5267.0], [30.9, 5275.0], [31.0, 5276.0], [31.1, 5276.0], [31.2, 5279.0], [31.3, 5299.0], [31.4, 5299.0], [31.5, 5299.0], [31.6, 5302.0], [31.7, 5302.0], [31.8, 5312.0], [31.9, 5344.0], [32.0, 5348.0], [32.1, 5348.0], [32.2, 5348.0], [32.3, 5353.0], [32.4, 5353.0], [32.5, 5364.0], [32.6, 5369.0], [32.7, 5369.0], [32.8, 5371.0], [32.9, 5381.0], [33.0, 5381.0], [33.1, 5381.0], [33.2, 5391.0], [33.3, 5397.0], [33.4, 5397.0], [33.5, 5427.0], [33.6, 5430.0], [33.7, 5430.0], [33.8, 5436.0], [33.9, 5449.0], [34.0, 5449.0], [34.1, 5449.0], [34.2, 5458.0], [34.3, 5467.0], [34.4, 5467.0], [34.5, 5474.0], [34.6, 5475.0], [34.7, 5475.0], [34.8, 5480.0], [34.9, 5481.0], [35.0, 5486.0], [35.1, 5486.0], [35.2, 5489.0], [35.3, 5489.0], [35.4, 5489.0], [35.5, 5489.0], [35.6, 5490.0], [35.7, 5490.0], [35.8, 5495.0], [35.9, 5495.0], [36.0, 5495.0], [36.1, 5495.0], [36.2, 5497.0], [36.3, 5503.0], [36.4, 5503.0], [36.5, 5506.0], [36.6, 5507.0], [36.7, 5507.0], [36.8, 5507.0], [36.9, 5508.0], [37.0, 5515.0], [37.1, 5515.0], [37.2, 5516.0], [37.3, 5537.0], [37.4, 5537.0], [37.5, 5537.0], [37.6, 5539.0], [37.7, 5539.0], [37.8, 5545.0], [37.9, 5545.0], [38.0, 5545.0], [38.1, 5548.0], [38.2, 5558.0], [38.3, 5561.0], [38.4, 5561.0], [38.5, 5563.0], [38.6, 5567.0], [38.7, 5567.0], [38.8, 5579.0], [38.9, 5586.0], [39.0, 5586.0], [39.1, 5586.0], [39.2, 5593.0], [39.3, 5593.0], [39.4, 5593.0], [39.5, 5595.0], [39.6, 5596.0], [39.7, 5596.0], [39.8, 5600.0], [39.9, 5603.0], [40.0, 5603.0], [40.1, 5610.0], [40.2, 5630.0], [40.3, 5630.0], [40.4, 5630.0], [40.5, 5637.0], [40.6, 5656.0], [40.7, 5656.0], [40.8, 5672.0], [40.9, 5672.0], [41.0, 5672.0], [41.1, 5673.0], [41.2, 5703.0], [41.3, 5733.0], [41.4, 5733.0], [41.5, 5736.0], [41.6, 5743.0], [41.7, 5743.0], [41.8, 5757.0], [41.9, 5760.0], [42.0, 5760.0], [42.1, 5769.0], [42.2, 5773.0], [42.3, 5775.0], [42.4, 5775.0], [42.5, 5777.0], [42.6, 5777.0], [42.7, 5777.0], [42.8, 5777.0], [42.9, 5777.0], [43.0, 5777.0], [43.1, 5785.0], [43.2, 5785.0], [43.3, 5786.0], [43.4, 5786.0], [43.5, 5789.0], [43.6, 5789.0], [43.7, 5789.0], [43.8, 5791.0], [43.9, 5798.0], [44.0, 5798.0], [44.1, 5801.0], [44.2, 5803.0], [44.3, 5804.0], [44.4, 5804.0], [44.5, 5825.0], [44.6, 5833.0], [44.7, 5833.0], [44.8, 5835.0], [44.9, 5853.0], [45.0, 5853.0], [45.1, 5891.0], [45.2, 5897.0], [45.3, 5908.0], [45.4, 5908.0], [45.5, 5911.0], [45.6, 5913.0], [45.7, 5913.0], [45.8, 5915.0], [45.9, 5918.0], [46.0, 5918.0], [46.1, 5920.0], [46.2, 5920.0], [46.3, 5935.0], [46.4, 5935.0], [46.5, 5935.0], [46.6, 5977.0], [46.7, 5977.0], [46.8, 5996.0], [46.9, 5999.0], [47.0, 5999.0], [47.1, 5999.0], [47.2, 6001.0], [47.3, 6003.0], [47.4, 6003.0], [47.5, 6003.0], [47.6, 6005.0], [47.7, 6005.0], [47.8, 6009.0], [47.9, 6019.0], [48.0, 6019.0], [48.1, 6033.0], [48.2, 6041.0], [48.3, 6050.0], [48.4, 6050.0], [48.5, 6055.0], [48.6, 6059.0], [48.7, 6059.0], [48.8, 6080.0], [48.9, 6083.0], [49.0, 6083.0], [49.1, 6089.0], [49.2, 6090.0], [49.3, 6091.0], [49.4, 6091.0], [49.5, 6104.0], [49.6, 6109.0], [49.7, 6109.0], [49.8, 6111.0], [49.9, 6112.0], [50.0, 6112.0], [50.1, 6113.0], [50.2, 6113.0], [50.3, 6113.0], [50.4, 6113.0], [50.5, 6114.0], [50.6, 6114.0], [50.7, 6114.0], [50.8, 6115.0], [50.9, 6118.0], [51.0, 6118.0], [51.1, 6118.0], [51.2, 6119.0], [51.3, 6119.0], [51.4, 6119.0], [51.5, 6121.0], [51.6, 6121.0], [51.7, 6121.0], [51.8, 6121.0], [51.9, 6122.0], [52.0, 6122.0], [52.1, 6123.0], [52.2, 6124.0], [52.3, 6130.0], [52.4, 6130.0], [52.5, 6131.0], [52.6, 6131.0], [52.7, 6131.0], [52.8, 6131.0], [52.9, 6133.0], [53.0, 6133.0], [53.1, 6134.0], [53.2, 6134.0], [53.3, 6135.0], [53.4, 6135.0], [53.5, 6135.0], [53.6, 6136.0], [53.7, 6136.0], [53.8, 6139.0], [53.9, 6139.0], [54.0, 6139.0], [54.1, 6140.0], [54.2, 6141.0], [54.3, 6145.0], [54.4, 6145.0], [54.5, 6150.0], [54.6, 6150.0], [54.7, 6150.0], [54.8, 6159.0], [54.9, 6160.0], [55.0, 6160.0], [55.1, 6168.0], [55.2, 6173.0], [55.3, 6175.0], [55.4, 6175.0], [55.5, 6182.0], [55.6, 6183.0], [55.7, 6183.0], [55.8, 6184.0], [55.9, 6184.0], [56.0, 6184.0], [56.1, 6185.0], [56.2, 6187.0], [56.3, 6187.0], [56.4, 6187.0], [56.5, 6187.0], [56.6, 6190.0], [56.7, 6190.0], [56.8, 6190.0], [56.9, 6193.0], [57.0, 6193.0], [57.1, 6194.0], [57.2, 6195.0], [57.3, 6196.0], [57.4, 6196.0], [57.5, 6197.0], [57.6, 6197.0], [57.7, 6197.0], [57.8, 6197.0], [57.9, 6200.0], [58.0, 6200.0], [58.1, 6200.0], [58.2, 6201.0], [58.3, 6203.0], [58.4, 6203.0], [58.5, 6204.0], [58.6, 6204.0], [58.7, 6204.0], [58.8, 6205.0], [58.9, 6206.0], [59.0, 6206.0], [59.1, 6206.0], [59.2, 6207.0], [59.3, 6208.0], [59.4, 6208.0], [59.5, 6210.0], [59.6, 6210.0], [59.7, 6210.0], [59.8, 6212.0], [59.9, 6214.0], [60.0, 6214.0], [60.1, 6217.0], [60.2, 6222.0], [60.3, 6226.0], [60.4, 6226.0], [60.5, 6231.0], [60.6, 6235.0], [60.7, 6235.0], [60.8, 6236.0], [60.9, 6241.0], [61.0, 6241.0], [61.1, 6241.0], [61.2, 6241.0], [61.3, 6244.0], [61.4, 6244.0], [61.5, 6249.0], [61.6, 6254.0], [61.7, 6254.0], [61.8, 6263.0], [61.9, 6266.0], [62.0, 6266.0], [62.1, 6267.0], [62.2, 6268.0], [62.3, 6288.0], [62.4, 6288.0], [62.5, 6293.0], [62.6, 6300.0], [62.7, 6300.0], [62.8, 6301.0], [62.9, 6304.0], [63.0, 6304.0], [63.1, 6305.0], [63.2, 6330.0], [63.3, 6336.0], [63.4, 6336.0], [63.5, 6343.0], [63.6, 6347.0], [63.7, 6347.0], [63.8, 6354.0], [63.9, 6364.0], [64.0, 6364.0], [64.1, 6380.0], [64.2, 6388.0], [64.3, 6390.0], [64.4, 6390.0], [64.5, 6392.0], [64.6, 6399.0], [64.7, 6399.0], [64.8, 6406.0], [64.9, 6409.0], [65.0, 6409.0], [65.1, 6410.0], [65.2, 6414.0], [65.3, 6427.0], [65.4, 6427.0], [65.5, 6428.0], [65.6, 6437.0], [65.7, 6437.0], [65.8, 6445.0], [65.9, 6454.0], [66.0, 6454.0], [66.1, 6454.0], [66.2, 6479.0], [66.3, 6491.0], [66.4, 6491.0], [66.5, 6499.0], [66.6, 6502.0], [66.7, 6502.0], [66.8, 6519.0], [66.9, 6520.0], [67.0, 6520.0], [67.1, 6527.0], [67.2, 6528.0], [67.3, 6537.0], [67.4, 6537.0], [67.5, 6541.0], [67.6, 6550.0], [67.7, 6550.0], [67.8, 6550.0], [67.9, 6556.0], [68.0, 6556.0], [68.1, 6563.0], [68.2, 6583.0], [68.3, 6585.0], [68.4, 6585.0], [68.5, 6588.0], [68.6, 6596.0], [68.7, 6596.0], [68.8, 6603.0], [68.9, 6608.0], [69.0, 6608.0], [69.1, 6609.0], [69.2, 6617.0], [69.3, 6617.0], [69.4, 6617.0], [69.5, 6624.0], [69.6, 6625.0], [69.7, 6625.0], [69.8, 6627.0], [69.9, 6633.0], [70.0, 6633.0], [70.1, 6638.0], [70.2, 6639.0], [70.3, 6642.0], [70.4, 6642.0], [70.5, 6643.0], [70.6, 6649.0], [70.7, 6649.0], [70.8, 6665.0], [70.9, 6669.0], [71.0, 6669.0], [71.1, 6673.0], [71.2, 6678.0], [71.3, 6693.0], [71.4, 6693.0], [71.5, 6695.0], [71.6, 6714.0], [71.7, 6714.0], [71.8, 6717.0], [71.9, 6721.0], [72.0, 6721.0], [72.1, 6728.0], [72.2, 6729.0], [72.3, 6731.0], [72.4, 6731.0], [72.5, 6733.0], [72.6, 6736.0], [72.7, 6736.0], [72.8, 6738.0], [72.9, 6738.0], [73.0, 6738.0], [73.1, 6738.0], [73.2, 6738.0], [73.3, 6740.0], [73.4, 6740.0], [73.5, 6743.0], [73.6, 6747.0], [73.7, 6747.0], [73.8, 6749.0], [73.9, 6749.0], [74.0, 6749.0], [74.1, 6749.0], [74.2, 6750.0], [74.3, 6751.0], [74.4, 6751.0], [74.5, 6762.0], [74.6, 6764.0], [74.7, 6764.0], [74.8, 6783.0], [74.9, 6786.0], [75.0, 6786.0], [75.1, 6794.0], [75.2, 6798.0], [75.3, 6802.0], [75.4, 6802.0], [75.5, 6803.0], [75.6, 6805.0], [75.7, 6805.0], [75.8, 6805.0], [75.9, 6805.0], [76.0, 6805.0], [76.1, 6808.0], [76.2, 6809.0], [76.3, 6809.0], [76.4, 6809.0], [76.5, 6812.0], [76.6, 6817.0], [76.7, 6817.0], [76.8, 6817.0], [76.9, 6819.0], [77.0, 6819.0], [77.1, 6819.0], [77.2, 6820.0], [77.3, 6821.0], [77.4, 6821.0], [77.5, 6821.0], [77.6, 6822.0], [77.7, 6822.0], [77.8, 6823.0], [77.9, 6824.0], [78.0, 6824.0], [78.1, 6824.0], [78.2, 6825.0], [78.3, 6826.0], [78.4, 6826.0], [78.5, 6826.0], [78.6, 6826.0], [78.7, 6826.0], [78.8, 6826.0], [78.9, 6827.0], [79.0, 6827.0], [79.1, 6828.0], [79.2, 6828.0], [79.3, 6832.0], [79.4, 6832.0], [79.5, 6835.0], [79.6, 6835.0], [79.7, 6835.0], [79.8, 6838.0], [79.9, 6838.0], [80.0, 6838.0], [80.1, 6839.0], [80.2, 6840.0], [80.3, 6842.0], [80.4, 6842.0], [80.5, 6850.0], [80.6, 6852.0], [80.7, 6852.0], [80.8, 6855.0], [80.9, 6856.0], [81.0, 6856.0], [81.1, 6860.0], [81.2, 6862.0], [81.3, 6863.0], [81.4, 6863.0], [81.5, 6864.0], [81.6, 6866.0], [81.7, 6866.0], [81.8, 6870.0], [81.9, 6870.0], [82.0, 6870.0], [82.1, 6871.0], [82.2, 6877.0], [82.3, 6878.0], [82.4, 6878.0], [82.5, 6880.0], [82.6, 6881.0], [82.7, 6881.0], [82.8, 6882.0], [82.9, 6884.0], [83.0, 6884.0], [83.1, 6885.0], [83.2, 6887.0], [83.3, 6887.0], [83.4, 6887.0], [83.5, 6889.0], [83.6, 6891.0], [83.7, 6891.0], [83.8, 6893.0], [83.9, 6893.0], [84.0, 6893.0], [84.1, 6897.0], [84.2, 6898.0], [84.3, 6898.0], [84.4, 6898.0], [84.5, 6899.0], [84.6, 6899.0], [84.7, 6899.0], [84.8, 6901.0], [84.9, 6902.0], [85.0, 6902.0], [85.1, 6903.0], [85.2, 6905.0], [85.3, 6905.0], [85.4, 6905.0], [85.5, 6913.0], [85.6, 6914.0], [85.7, 6914.0], [85.8, 6916.0], [85.9, 6917.0], [86.0, 6917.0], [86.1, 6920.0], [86.2, 6924.0], [86.3, 6930.0], [86.4, 6930.0], [86.5, 6934.0], [86.6, 6934.0], [86.7, 6934.0], [86.8, 6935.0], [86.9, 6941.0], [87.0, 6942.0], [87.1, 6942.0], [87.2, 6952.0], [87.3, 6958.0], [87.4, 6958.0], [87.5, 6960.0], [87.6, 6961.0], [87.7, 6961.0], [87.8, 6966.0], [87.9, 6968.0], [88.0, 6969.0], [88.1, 6969.0], [88.2, 6974.0], [88.3, 6977.0], [88.4, 6977.0], [88.5, 6977.0], [88.6, 6978.0], [88.7, 6978.0], [88.8, 6980.0], [88.9, 6991.0], [89.0, 6991.0], [89.1, 6991.0], [89.2, 6994.0], [89.3, 6994.0], [89.4, 6994.0], [89.5, 7003.0], [89.6, 7003.0], [89.7, 7003.0], [89.8, 7003.0], [89.9, 7005.0], [90.0, 7006.0], [90.1, 7006.0], [90.2, 7018.0], [90.3, 7030.0], [90.4, 7030.0], [90.5, 7031.0], [90.6, 7035.0], [90.7, 7035.0], [90.8, 7038.0], [90.9, 7051.0], [91.0, 7054.0], [91.1, 7054.0], [91.2, 7063.0], [91.3, 7065.0], [91.4, 7065.0], [91.5, 7084.0], [91.6, 7094.0], [91.7, 7094.0], [91.8, 7105.0], [91.9, 7105.0], [92.0, 7115.0], [92.1, 7115.0], [92.2, 7116.0], [92.3, 7123.0], [92.4, 7123.0], [92.5, 7129.0], [92.6, 7138.0], [92.7, 7138.0], [92.8, 7139.0], [92.9, 7154.0], [93.0, 7205.0], [93.1, 7205.0], [93.2, 7258.0], [93.3, 7264.0], [93.4, 7264.0], [93.5, 7591.0], [93.6, 7599.0], [93.7, 7599.0], [93.8, 7714.0], [93.9, 7727.0], [94.0, 7731.0], [94.1, 7731.0], [94.2, 7785.0], [94.3, 7865.0], [94.4, 7865.0], [94.5, 7907.0], [94.6, 7921.0], [94.7, 7921.0], [94.8, 7925.0], [94.9, 7998.0], [95.0, 8089.0], [95.1, 8089.0], [95.2, 8092.0], [95.3, 8096.0], [95.4, 8096.0], [95.5, 8137.0], [95.6, 8176.0], [95.7, 8176.0], [95.8, 8195.0], [95.9, 8209.0], [96.0, 8219.0], [96.1, 8219.0], [96.2, 8226.0], [96.3, 8273.0], [96.4, 8273.0], [96.5, 8381.0], [96.6, 8644.0], [96.7, 8644.0], [96.8, 8647.0], [96.9, 8793.0], [97.0, 8796.0], [97.1, 8796.0], [97.2, 8804.0], [97.3, 8813.0], [97.4, 8813.0], [97.5, 8819.0], [97.6, 8820.0], [97.7, 8820.0], [97.8, 8822.0], [97.9, 8822.0], [98.0, 8846.0], [98.1, 8846.0], [98.2, 8849.0], [98.3, 8849.0], [98.4, 8849.0], [98.5, 8865.0], [98.6, 8895.0], [98.7, 8895.0], [98.8, 8905.0], [98.9, 8909.0], [99.0, 8958.0], [99.1, 8958.0], [99.2, 9079.0], [99.3, 9109.0], [99.4, 9109.0], [99.5, 9192.0], [99.6, 9230.0], [99.7, 9230.0], [99.8, 9925.0], [99.9, 9955.0]], "isOverall": false, "label": "Create", "isController": false}, {"data": [[0.0, 3025.0], [0.1, 3025.0], [0.2, 3035.0], [0.3, 3077.0], [0.4, 3077.0], [0.5, 3083.0], [0.6, 3095.0], [0.7, 3095.0], [0.8, 3116.0], [0.9, 3124.0], [1.0, 3138.0], [1.1, 3138.0], [1.2, 3142.0], [1.3, 3145.0], [1.4, 3145.0], [1.5, 3155.0], [1.6, 3161.0], [1.7, 3161.0], [1.8, 3161.0], [1.9, 3161.0], [2.0, 3164.0], [2.1, 3164.0], [2.2, 3169.0], [2.3, 3172.0], [2.4, 3172.0], [2.5, 3215.0], [2.6, 3224.0], [2.7, 3224.0], [2.8, 3276.0], [2.9, 3876.0], [3.0, 4145.0], [3.1, 4145.0], [3.2, 4146.0], [3.3, 4147.0], [3.4, 4147.0], [3.5, 4148.0], [3.6, 4149.0], [3.7, 4149.0], [3.8, 4149.0], [3.9, 4150.0], [4.0, 4150.0], [4.1, 4150.0], [4.2, 4150.0], [4.3, 4150.0], [4.4, 4150.0], [4.5, 4150.0], [4.6, 4150.0], [4.7, 4150.0], [4.8, 4152.0], [4.9, 4152.0], [5.0, 4153.0], [5.1, 4153.0], [5.2, 4154.0], [5.3, 4154.0], [5.4, 4154.0], [5.5, 4155.0], [5.6, 4155.0], [5.7, 4155.0], [5.8, 4155.0], [5.9, 4155.0], [6.0, 4156.0], [6.1, 4156.0], [6.2, 4157.0], [6.3, 4157.0], [6.4, 4157.0], [6.5, 4158.0], [6.6, 4159.0], [6.7, 4159.0], [6.8, 4159.0], [6.9, 4159.0], [7.0, 4159.0], [7.1, 4159.0], [7.2, 4159.0], [7.3, 4160.0], [7.4, 4160.0], [7.5, 4160.0], [7.6, 4161.0], [7.7, 4161.0], [7.8, 4162.0], [7.9, 4162.0], [8.0, 4163.0], [8.1, 4163.0], [8.2, 4163.0], [8.3, 4163.0], [8.4, 4163.0], [8.5, 4166.0], [8.6, 4166.0], [8.7, 4166.0], [8.8, 4167.0], [8.9, 4167.0], [9.0, 4167.0], [9.1, 4167.0], [9.2, 4168.0], [9.3, 4169.0], [9.4, 4169.0], [9.5, 4169.0], [9.6, 4169.0], [9.7, 4169.0], [9.8, 4169.0], [9.9, 4169.0], [10.0, 4170.0], [10.1, 4170.0], [10.2, 4170.0], [10.3, 4172.0], [10.4, 4172.0], [10.5, 4172.0], [10.6, 4173.0], [10.7, 4173.0], [10.8, 4173.0], [10.9, 4174.0], [11.0, 4174.0], [11.1, 4174.0], [11.2, 4174.0], [11.3, 4175.0], [11.4, 4175.0], [11.5, 4175.0], [11.6, 4176.0], [11.7, 4176.0], [11.8, 4176.0], [11.9, 4177.0], [12.0, 4177.0], [12.1, 4177.0], [12.2, 4177.0], [12.3, 4177.0], [12.4, 4177.0], [12.5, 4178.0], [12.6, 4178.0], [12.7, 4178.0], [12.8, 4178.0], [12.9, 4178.0], [13.0, 4178.0], [13.1, 4179.0], [13.2, 4179.0], [13.3, 4179.0], [13.4, 4179.0], [13.5, 4179.0], [13.6, 4180.0], [13.7, 4180.0], [13.8, 4180.0], [13.9, 4180.0], [14.0, 4180.0], [14.1, 4180.0], [14.2, 4180.0], [14.3, 4180.0], [14.4, 4180.0], [14.5, 4180.0], [14.6, 4180.0], [14.7, 4180.0], [14.8, 4180.0], [14.9, 4181.0], [15.0, 4181.0], [15.1, 4181.0], [15.2, 4181.0], [15.3, 4181.0], [15.4, 4181.0], [15.5, 4182.0], [15.6, 4182.0], [15.7, 4182.0], [15.8, 4182.0], [15.9, 4183.0], [16.0, 4183.0], [16.1, 4184.0], [16.2, 4184.0], [16.3, 4184.0], [16.4, 4184.0], [16.5, 4184.0], [16.6, 4185.0], [16.7, 4185.0], [16.8, 4185.0], [16.9, 4185.0], [17.0, 4185.0], [17.1, 4189.0], [17.2, 4191.0], [17.3, 4191.0], [17.4, 4191.0], [17.5, 4192.0], [17.6, 4192.0], [17.7, 4192.0], [17.8, 4193.0], [17.9, 4194.0], [18.0, 4196.0], [18.1, 4196.0], [18.2, 4196.0], [18.3, 4197.0], [18.4, 4197.0], [18.5, 4198.0], [18.6, 4199.0], [18.7, 4199.0], [18.8, 4200.0], [18.9, 4201.0], [19.0, 4201.0], [19.1, 4201.0], [19.2, 4201.0], [19.3, 4202.0], [19.4, 4202.0], [19.5, 4202.0], [19.6, 4203.0], [19.7, 4203.0], [19.8, 4204.0], [19.9, 4205.0], [20.0, 4213.0], [20.1, 4213.0], [20.2, 4220.0], [20.3, 4246.0], [20.4, 4246.0], [20.5, 4280.0], [20.6, 4287.0], [20.7, 4287.0], [20.8, 4297.0], [20.9, 4302.0], [21.0, 4307.0], [21.1, 4307.0], [21.2, 4308.0], [21.3, 4308.0], [21.4, 4308.0], [21.5, 4309.0], [21.6, 4309.0], [21.7, 4309.0], [21.8, 4310.0], [21.9, 4310.0], [22.0, 4311.0], [22.1, 4311.0], [22.2, 4311.0], [22.3, 4314.0], [22.4, 4314.0], [22.5, 4315.0], [22.6, 4316.0], [22.7, 4316.0], [22.8, 4316.0], [22.9, 4318.0], [23.0, 4325.0], [23.1, 4325.0], [23.2, 4365.0], [23.3, 4413.0], [23.4, 4413.0], [23.5, 4419.0], [23.6, 4423.0], [23.7, 4423.0], [23.8, 4426.0], [23.9, 4431.0], [24.0, 4431.0], [24.1, 4431.0], [24.2, 4432.0], [24.3, 4434.0], [24.4, 4434.0], [24.5, 4437.0], [24.6, 4440.0], [24.7, 4440.0], [24.8, 4447.0], [24.9, 4450.0], [25.0, 4458.0], [25.1, 4458.0], [25.2, 4465.0], [25.3, 4473.0], [25.4, 4473.0], [25.5, 4478.0], [25.6, 4478.0], [25.7, 4478.0], [25.8, 4478.0], [25.9, 4479.0], [26.0, 4480.0], [26.1, 4480.0], [26.2, 4480.0], [26.3, 4481.0], [26.4, 4481.0], [26.5, 4482.0], [26.6, 4484.0], [26.7, 4484.0], [26.8, 4484.0], [26.9, 4484.0], [27.0, 4484.0], [27.1, 4484.0], [27.2, 4485.0], [27.3, 4485.0], [27.4, 4485.0], [27.5, 4485.0], [27.6, 4485.0], [27.7, 4485.0], [27.8, 4485.0], [27.9, 4486.0], [28.0, 4486.0], [28.1, 4486.0], [28.2, 4486.0], [28.3, 4487.0], [28.4, 4487.0], [28.5, 4487.0], [28.6, 4487.0], [28.7, 4487.0], [28.8, 4487.0], [28.9, 4488.0], [29.0, 4489.0], [29.1, 4489.0], [29.2, 4490.0], [29.3, 4490.0], [29.4, 4490.0], [29.5, 4490.0], [29.6, 4491.0], [29.7, 4491.0], [29.8, 4491.0], [29.9, 4492.0], [30.0, 4492.0], [30.1, 4492.0], [30.2, 4492.0], [30.3, 4492.0], [30.4, 4492.0], [30.5, 4493.0], [30.6, 4494.0], [30.7, 4494.0], [30.8, 4494.0], [30.9, 4494.0], [31.0, 4494.0], [31.1, 4494.0], [31.2, 4494.0], [31.3, 4494.0], [31.4, 4494.0], [31.5, 4495.0], [31.6, 4495.0], [31.7, 4495.0], [31.8, 4495.0], [31.9, 4495.0], [32.0, 4496.0], [32.1, 4496.0], [32.2, 4496.0], [32.3, 4496.0], [32.4, 4496.0], [32.5, 4496.0], [32.6, 4496.0], [32.7, 4496.0], [32.8, 4496.0], [32.9, 4496.0], [33.0, 4497.0], [33.1, 4497.0], [33.2, 4497.0], [33.3, 4497.0], [33.4, 4497.0], [33.5, 4497.0], [33.6, 4498.0], [33.7, 4498.0], [33.8, 4498.0], [33.9, 4501.0], [34.0, 4505.0], [34.1, 4505.0], [34.2, 4506.0], [34.3, 4507.0], [34.4, 4507.0], [34.5, 4509.0], [34.6, 4511.0], [34.7, 4511.0], [34.8, 4511.0], [34.9, 4512.0], [35.0, 4512.0], [35.1, 4512.0], [35.2, 4515.0], [35.3, 4519.0], [35.4, 4519.0], [35.5, 4519.0], [35.6, 4521.0], [35.7, 4521.0], [35.8, 4523.0], [35.9, 4525.0], [36.0, 4527.0], [36.1, 4527.0], [36.2, 4527.0], [36.3, 4528.0], [36.4, 4528.0], [36.5, 4528.0], [36.6, 4530.0], [36.7, 4530.0], [36.8, 4531.0], [36.9, 4536.0], [37.0, 4542.0], [37.1, 4542.0], [37.2, 4546.0], [37.3, 4548.0], [37.4, 4548.0], [37.5, 4554.0], [37.6, 4556.0], [37.7, 4556.0], [37.8, 4558.0], [37.9, 4558.0], [38.0, 4558.0], [38.1, 4558.0], [38.2, 4559.0], [38.3, 4560.0], [38.4, 4560.0], [38.5, 4560.0], [38.6, 4561.0], [38.7, 4561.0], [38.8, 4562.0], [38.9, 4564.0], [39.0, 4564.0], [39.1, 4564.0], [39.2, 4564.0], [39.3, 4564.0], [39.4, 4564.0], [39.5, 4566.0], [39.6, 4566.0], [39.7, 4566.0], [39.8, 4567.0], [39.9, 4567.0], [40.0, 4567.0], [40.1, 4567.0], [40.2, 4567.0], [40.3, 4568.0], [40.4, 4568.0], [40.5, 4568.0], [40.6, 4571.0], [40.7, 4571.0], [40.8, 4571.0], [40.9, 4572.0], [41.0, 4572.0], [41.1, 4572.0], [41.2, 4573.0], [41.3, 4573.0], [41.4, 4573.0], [41.5, 4574.0], [41.6, 4575.0], [41.7, 4575.0], [41.8, 4575.0], [41.9, 4575.0], [42.0, 4575.0], [42.1, 4577.0], [42.2, 4580.0], [42.3, 4580.0], [42.4, 4580.0], [42.5, 4581.0], [42.6, 4582.0], [42.7, 4582.0], [42.8, 4582.0], [42.9, 4583.0], [43.0, 4583.0], [43.1, 4583.0], [43.2, 4583.0], [43.3, 4584.0], [43.4, 4584.0], [43.5, 4584.0], [43.6, 4585.0], [43.7, 4585.0], [43.8, 4585.0], [43.9, 4586.0], [44.0, 4586.0], [44.1, 4587.0], [44.2, 4588.0], [44.3, 4588.0], [44.4, 4588.0], [44.5, 4589.0], [44.6, 4589.0], [44.7, 4589.0], [44.8, 4589.0], [44.9, 4594.0], [45.0, 4594.0], [45.1, 4601.0], [45.2, 4601.0], [45.3, 4602.0], [45.4, 4602.0], [45.5, 4605.0], [45.6, 4607.0], [45.7, 4607.0], [45.8, 4613.0], [45.9, 4628.0], [46.0, 4628.0], [46.1, 4644.0], [46.2, 4663.0], [46.3, 4728.0], [46.4, 4728.0], [46.5, 4752.0], [46.6, 4803.0], [46.7, 4803.0], [46.8, 4873.0], [46.9, 4889.0], [47.0, 4889.0], [47.1, 4890.0], [47.2, 4891.0], [47.3, 4894.0], [47.4, 4894.0], [47.5, 5031.0], [47.6, 5100.0], [47.7, 5100.0], [47.8, 5231.0], [47.9, 5231.0], [48.0, 5231.0], [48.1, 5242.0], [48.2, 5242.0], [48.3, 5244.0], [48.4, 5244.0], [48.5, 5245.0], [48.6, 5246.0], [48.7, 5246.0], [48.8, 5247.0], [48.9, 5248.0], [49.0, 5248.0], [49.1, 5248.0], [49.2, 5248.0], [49.3, 5248.0], [49.4, 5248.0], [49.5, 5249.0], [49.6, 5249.0], [49.7, 5249.0], [49.8, 5249.0], [49.9, 5250.0], [50.0, 5250.0], [50.1, 5250.0], [50.2, 5250.0], [50.3, 5250.0], [50.4, 5250.0], [50.5, 5251.0], [50.6, 5251.0], [50.7, 5251.0], [50.8, 5251.0], [50.9, 5251.0], [51.0, 5251.0], [51.1, 5252.0], [51.2, 5252.0], [51.3, 5253.0], [51.4, 5253.0], [51.5, 5253.0], [51.6, 5254.0], [51.7, 5254.0], [51.8, 5255.0], [51.9, 5256.0], [52.0, 5256.0], [52.1, 5258.0], [52.2, 5258.0], [52.3, 5259.0], [52.4, 5259.0], [52.5, 5259.0], [52.6, 5261.0], [52.7, 5261.0], [52.8, 5266.0], [52.9, 5273.0], [53.0, 5273.0], [53.1, 5279.0], [53.2, 5291.0], [53.3, 5301.0], [53.4, 5301.0], [53.5, 5317.0], [53.6, 5332.0], [53.7, 5332.0], [53.8, 5334.0], [53.9, 5337.0], [54.0, 5337.0], [54.1, 5338.0], [54.2, 5347.0], [54.3, 5355.0], [54.4, 5355.0], [54.5, 5364.0], [54.6, 5368.0], [54.7, 5368.0], [54.8, 5369.0], [54.9, 5369.0], [55.0, 5369.0], [55.1, 5370.0], [55.2, 5370.0], [55.3, 5373.0], [55.4, 5373.0], [55.5, 5374.0], [55.6, 5375.0], [55.7, 5375.0], [55.8, 5375.0], [55.9, 5379.0], [56.0, 5379.0], [56.1, 5385.0], [56.2, 5389.0], [56.3, 5390.0], [56.4, 5390.0], [56.5, 5392.0], [56.6, 5395.0], [56.7, 5395.0], [56.8, 5396.0], [56.9, 5402.0], [57.0, 5402.0], [57.1, 5423.0], [57.2, 5490.0], [57.3, 5540.0], [57.4, 5540.0], [57.5, 5541.0], [57.6, 5595.0], [57.7, 5595.0], [57.8, 5627.0], [57.9, 5665.0], [58.0, 5665.0], [58.1, 5720.0], [58.2, 5767.0], [58.3, 5780.0], [58.4, 5780.0], [58.5, 5863.0], [58.6, 5919.0], [58.7, 5919.0], [58.8, 5920.0], [58.9, 5930.0], [59.0, 5930.0], [59.1, 5933.0], [59.2, 5942.0], [59.3, 5946.0], [59.4, 5946.0], [59.5, 5957.0], [59.6, 5959.0], [59.7, 5959.0], [59.8, 5965.0], [59.9, 5966.0], [60.0, 5966.0], [60.1, 5966.0], [60.2, 5967.0], [60.3, 5969.0], [60.4, 5969.0], [60.5, 5970.0], [60.6, 5971.0], [60.7, 5971.0], [60.8, 5980.0], [60.9, 5985.0], [61.0, 5985.0], [61.1, 5987.0], [61.2, 5994.0], [61.3, 5997.0], [61.4, 5997.0], [61.5, 5999.0], [61.6, 5999.0], [61.7, 5999.0], [61.8, 6001.0], [61.9, 6002.0], [62.0, 6002.0], [62.1, 6003.0], [62.2, 6003.0], [62.3, 6004.0], [62.4, 6004.0], [62.5, 6004.0], [62.6, 6005.0], [62.7, 6005.0], [62.8, 6006.0], [62.9, 6006.0], [63.0, 6006.0], [63.1, 6006.0], [63.2, 6008.0], [63.3, 6008.0], [63.4, 6008.0], [63.5, 6008.0], [63.6, 6009.0], [63.7, 6009.0], [63.8, 6011.0], [63.9, 6012.0], [64.0, 6012.0], [64.1, 6012.0], [64.2, 6013.0], [64.3, 6014.0], [64.4, 6014.0], [64.5, 6014.0], [64.6, 6015.0], [64.7, 6015.0], [64.8, 6015.0], [64.9, 6017.0], [65.0, 6017.0], [65.1, 6017.0], [65.2, 6017.0], [65.3, 6018.0], [65.4, 6018.0], [65.5, 6018.0], [65.6, 6018.0], [65.7, 6018.0], [65.8, 6019.0], [65.9, 6019.0], [66.0, 6019.0], [66.1, 6019.0], [66.2, 6020.0], [66.3, 6020.0], [66.4, 6020.0], [66.5, 6020.0], [66.6, 6020.0], [66.7, 6020.0], [66.8, 6021.0], [66.9, 6021.0], [67.0, 6021.0], [67.1, 6021.0], [67.2, 6021.0], [67.3, 6022.0], [67.4, 6022.0], [67.5, 6022.0], [67.6, 6022.0], [67.7, 6022.0], [67.8, 6023.0], [67.9, 6023.0], [68.0, 6023.0], [68.1, 6024.0], [68.2, 6024.0], [68.3, 6024.0], [68.4, 6024.0], [68.5, 6025.0], [68.6, 6025.0], [68.7, 6025.0], [68.8, 6025.0], [68.9, 6026.0], [69.0, 6026.0], [69.1, 6026.0], [69.2, 6026.0], [69.3, 6026.0], [69.4, 6026.0], [69.5, 6026.0], [69.6, 6026.0], [69.7, 6026.0], [69.8, 6026.0], [69.9, 6027.0], [70.0, 6027.0], [70.1, 6027.0], [70.2, 6028.0], [70.3, 6029.0], [70.4, 6029.0], [70.5, 6029.0], [70.6, 6030.0], [70.7, 6030.0], [70.8, 6030.0], [70.9, 6030.0], [71.0, 6030.0], [71.1, 6031.0], [71.2, 6033.0], [71.3, 6035.0], [71.4, 6035.0], [71.5, 6035.0], [71.6, 6036.0], [71.7, 6036.0], [71.8, 6038.0], [71.9, 6040.0], [72.0, 6040.0], [72.1, 6041.0], [72.2, 6042.0], [72.3, 6044.0], [72.4, 6044.0], [72.5, 6046.0], [72.6, 6055.0], [72.7, 6055.0], [72.8, 6056.0], [72.9, 6059.0], [73.0, 6059.0], [73.1, 6063.0], [73.2, 6064.0], [73.3, 6064.0], [73.4, 6064.0], [73.5, 6064.0], [73.6, 6065.0], [73.7, 6065.0], [73.8, 6065.0], [73.9, 6065.0], [74.0, 6065.0], [74.1, 6066.0], [74.2, 6066.0], [74.3, 6066.0], [74.4, 6066.0], [74.5, 6067.0], [74.6, 6067.0], [74.7, 6067.0], [74.8, 6067.0], [74.9, 6067.0], [75.0, 6067.0], [75.1, 6068.0], [75.2, 6068.0], [75.3, 6068.0], [75.4, 6068.0], [75.5, 6068.0], [75.6, 6068.0], [75.7, 6068.0], [75.8, 6069.0], [75.9, 6069.0], [76.0, 6069.0], [76.1, 6070.0], [76.2, 6070.0], [76.3, 6070.0], [76.4, 6070.0], [76.5, 6070.0], [76.6, 6072.0], [76.7, 6072.0], [76.8, 6072.0], [76.9, 6073.0], [77.0, 6073.0], [77.1, 6073.0], [77.2, 6073.0], [77.3, 6074.0], [77.4, 6074.0], [77.5, 6074.0], [77.6, 6074.0], [77.7, 6074.0], [77.8, 6074.0], [77.9, 6074.0], [78.0, 6074.0], [78.1, 6075.0], [78.2, 6076.0], [78.3, 6076.0], [78.4, 6076.0], [78.5, 6077.0], [78.6, 6078.0], [78.7, 6078.0], [78.8, 6078.0], [78.9, 6079.0], [79.0, 6079.0], [79.1, 6080.0], [79.2, 6080.0], [79.3, 6081.0], [79.4, 6081.0], [79.5, 6081.0], [79.6, 6082.0], [79.7, 6082.0], [79.8, 6082.0], [79.9, 6083.0], [80.0, 6083.0], [80.1, 6084.0], [80.2, 6084.0], [80.3, 6085.0], [80.4, 6085.0], [80.5, 6086.0], [80.6, 6086.0], [80.7, 6086.0], [80.8, 6086.0], [80.9, 6087.0], [81.0, 6087.0], [81.1, 6094.0], [81.2, 6101.0], [81.3, 6102.0], [81.4, 6102.0], [81.5, 6102.0], [81.6, 6104.0], [81.7, 6104.0], [81.8, 6106.0], [81.9, 6112.0], [82.0, 6112.0], [82.1, 6113.0], [82.2, 6113.0], [82.3, 6114.0], [82.4, 6114.0], [82.5, 6118.0], [82.6, 6118.0], [82.7, 6118.0], [82.8, 6118.0], [82.9, 6119.0], [83.0, 6119.0], [83.1, 6121.0], [83.2, 6123.0], [83.3, 6123.0], [83.4, 6123.0], [83.5, 6126.0], [83.6, 6126.0], [83.7, 6126.0], [83.8, 6126.0], [83.9, 6127.0], [84.0, 6127.0], [84.1, 6127.0], [84.2, 6128.0], [84.3, 6128.0], [84.4, 6128.0], [84.5, 6131.0], [84.6, 6131.0], [84.7, 6131.0], [84.8, 6133.0], [84.9, 6133.0], [85.0, 6133.0], [85.1, 6135.0], [85.2, 6137.0], [85.3, 6137.0], [85.4, 6137.0], [85.5, 6137.0], [85.6, 6139.0], [85.7, 6139.0], [85.8, 6140.0], [85.9, 6142.0], [86.0, 6142.0], [86.1, 6143.0], [86.2, 6144.0], [86.3, 6144.0], [86.4, 6144.0], [86.5, 6145.0], [86.6, 6146.0], [86.7, 6146.0], [86.8, 6146.0], [86.9, 6146.0], [87.0, 6146.0], [87.1, 6147.0], [87.2, 6149.0], [87.3, 6150.0], [87.4, 6150.0], [87.5, 6152.0], [87.6, 6153.0], [87.7, 6153.0], [87.8, 6154.0], [87.9, 6154.0], [88.0, 6154.0], [88.1, 6154.0], [88.2, 6155.0], [88.3, 6156.0], [88.4, 6156.0], [88.5, 6157.0], [88.6, 6157.0], [88.7, 6157.0], [88.8, 6158.0], [88.9, 6158.0], [89.0, 6158.0], [89.1, 6158.0], [89.2, 6160.0], [89.3, 6160.0], [89.4, 6160.0], [89.5, 6161.0], [89.6, 6165.0], [89.7, 6165.0], [89.8, 6167.0], [89.9, 6168.0], [90.0, 6168.0], [90.1, 6172.0], [90.2, 6172.0], [90.3, 6173.0], [90.4, 6173.0], [90.5, 6173.0], [90.6, 6175.0], [90.7, 6175.0], [90.8, 6175.0], [90.9, 6180.0], [91.0, 6180.0], [91.1, 6181.0], [91.2, 6182.0], [91.3, 6182.0], [91.4, 6182.0], [91.5, 6191.0], [91.6, 6197.0], [91.7, 6197.0], [91.8, 6207.0], [91.9, 6218.0], [92.0, 6218.0], [92.1, 6228.0], [92.2, 6232.0], [92.3, 6239.0], [92.4, 6239.0], [92.5, 6240.0], [92.6, 6241.0], [92.7, 6241.0], [92.8, 6243.0], [92.9, 6284.0], [93.0, 6284.0], [93.1, 6300.0], [93.2, 6301.0], [93.3, 6303.0], [93.4, 6303.0], [93.5, 6305.0], [93.6, 6306.0], [93.7, 6306.0], [93.8, 6306.0], [93.9, 6308.0], [94.0, 6308.0], [94.1, 6308.0], [94.2, 6310.0], [94.3, 6313.0], [94.4, 6313.0], [94.5, 6314.0], [94.6, 6314.0], [94.7, 6314.0], [94.8, 6315.0], [94.9, 6315.0], [95.0, 6315.0], [95.1, 6316.0], [95.2, 6316.0], [95.3, 6317.0], [95.4, 6317.0], [95.5, 6319.0], [95.6, 6319.0], [95.7, 6319.0], [95.8, 6320.0], [95.9, 6320.0], [96.0, 6320.0], [96.1, 6320.0], [96.2, 6321.0], [96.3, 6321.0], [96.4, 6321.0], [96.5, 6321.0], [96.6, 6322.0], [96.7, 6322.0], [96.8, 6322.0], [96.9, 6323.0], [97.0, 6323.0], [97.1, 6323.0], [97.2, 6323.0], [97.3, 6324.0], [97.4, 6324.0], [97.5, 6324.0], [97.6, 6327.0], [97.7, 6327.0], [97.8, 6328.0], [97.9, 6329.0], [98.0, 6329.0], [98.1, 6329.0], [98.2, 6330.0], [98.3, 6333.0], [98.4, 6333.0], [98.5, 6333.0], [98.6, 6463.0], [98.7, 6463.0], [98.8, 6833.0], [98.9, 6940.0], [99.0, 6940.0], [99.1, 7012.0], [99.2, 7080.0], [99.3, 7121.0], [99.4, 7121.0], [99.5, 7140.0], [99.6, 7174.0], [99.7, 7174.0], [99.8, 7188.0], [99.9, 7190.0], [100.0, 7190.0]], "isOverall": false, "label": "Get", "isController": false}, {"data": [[0.0, 279.0], [0.1, 279.0], [0.2, 281.0], [0.3, 281.0], [0.4, 281.0], [0.5, 282.0], [0.6, 283.0], [0.7, 283.0], [0.8, 283.0], [0.9, 284.0], [1.0, 284.0], [1.1, 284.0], [1.2, 285.0], [1.3, 285.0], [1.4, 285.0], [1.5, 285.0], [1.6, 285.0], [1.7, 285.0], [1.8, 285.0], [1.9, 285.0], [2.0, 286.0], [2.1, 286.0], [2.2, 286.0], [2.3, 287.0], [2.4, 287.0], [2.5, 287.0], [2.6, 287.0], [2.7, 287.0], [2.8, 288.0], [2.9, 289.0], [3.0, 289.0], [3.1, 289.0], [3.2, 290.0], [3.3, 290.0], [3.4, 290.0], [3.5, 290.0], [3.6, 290.0], [3.7, 290.0], [3.8, 290.0], [3.9, 291.0], [4.0, 291.0], [4.1, 291.0], [4.2, 291.0], [4.3, 291.0], [4.4, 291.0], [4.5, 291.0], [4.6, 292.0], [4.7, 292.0], [4.8, 292.0], [4.9, 292.0], [5.0, 293.0], [5.1, 293.0], [5.2, 293.0], [5.3, 293.0], [5.4, 293.0], [5.5, 293.0], [5.6, 293.0], [5.7, 293.0], [5.8, 294.0], [5.9, 294.0], [6.0, 295.0], [6.1, 295.0], [6.2, 295.0], [6.3, 295.0], [6.4, 295.0], [6.5, 296.0], [6.6, 296.0], [6.7, 296.0], [6.8, 296.0], [6.9, 296.0], [7.0, 297.0], [7.1, 297.0], [7.2, 297.0], [7.3, 297.0], [7.4, 297.0], [7.5, 298.0], [7.6, 298.0], [7.7, 298.0], [7.8, 299.0], [7.9, 299.0], [8.0, 299.0], [8.1, 299.0], [8.2, 300.0], [8.3, 300.0], [8.4, 300.0], [8.5, 300.0], [8.6, 300.0], [8.7, 300.0], [8.8, 301.0], [8.9, 301.0], [9.0, 302.0], [9.1, 302.0], [9.2, 302.0], [9.3, 302.0], [9.4, 302.0], [9.5, 303.0], [9.6, 303.0], [9.7, 303.0], [9.8, 303.0], [9.9, 303.0], [10.0, 303.0], [10.1, 303.0], [10.2, 303.0], [10.3, 303.0], [10.4, 303.0], [10.5, 304.0], [10.6, 304.0], [10.7, 304.0], [10.8, 304.0], [10.9, 304.0], [11.0, 304.0], [11.1, 304.0], [11.2, 305.0], [11.3, 305.0], [11.4, 305.0], [11.5, 305.0], [11.6, 305.0], [11.7, 305.0], [11.8, 305.0], [11.9, 305.0], [12.0, 306.0], [12.1, 306.0], [12.2, 306.0], [12.3, 306.0], [12.4, 306.0], [12.5, 306.0], [12.6, 306.0], [12.7, 306.0], [12.8, 306.0], [12.9, 307.0], [13.0, 307.0], [13.1, 307.0], [13.2, 307.0], [13.3, 308.0], [13.4, 308.0], [13.5, 308.0], [13.6, 308.0], [13.7, 308.0], [13.8, 308.0], [13.9, 309.0], [14.0, 309.0], [14.1, 309.0], [14.2, 309.0], [14.3, 309.0], [14.4, 309.0], [14.5, 309.0], [14.6, 310.0], [14.7, 310.0], [14.8, 310.0], [14.9, 310.0], [15.0, 310.0], [15.1, 310.0], [15.2, 310.0], [15.3, 310.0], [15.4, 310.0], [15.5, 310.0], [15.6, 310.0], [15.7, 310.0], [15.8, 310.0], [15.9, 310.0], [16.0, 311.0], [16.1, 311.0], [16.2, 311.0], [16.3, 311.0], [16.4, 311.0], [16.5, 311.0], [16.6, 312.0], [16.7, 312.0], [16.8, 312.0], [16.9, 312.0], [17.0, 312.0], [17.1, 312.0], [17.2, 312.0], [17.3, 312.0], [17.4, 312.0], [17.5, 312.0], [17.6, 312.0], [17.7, 312.0], [17.8, 313.0], [17.9, 313.0], [18.0, 313.0], [18.1, 313.0], [18.2, 314.0], [18.3, 314.0], [18.4, 314.0], [18.5, 314.0], [18.6, 315.0], [18.7, 315.0], [18.8, 315.0], [18.9, 315.0], [19.0, 315.0], [19.1, 315.0], [19.2, 315.0], [19.3, 315.0], [19.4, 315.0], [19.5, 315.0], [19.6, 316.0], [19.7, 316.0], [19.8, 316.0], [19.9, 316.0], [20.0, 316.0], [20.1, 316.0], [20.2, 317.0], [20.3, 317.0], [20.4, 317.0], [20.5, 317.0], [20.6, 317.0], [20.7, 317.0], [20.8, 317.0], [20.9, 317.0], [21.0, 318.0], [21.1, 318.0], [21.2, 318.0], [21.3, 318.0], [21.4, 318.0], [21.5, 318.0], [21.6, 318.0], [21.7, 318.0], [21.8, 318.0], [21.9, 319.0], [22.0, 319.0], [22.1, 319.0], [22.2, 319.0], [22.3, 319.0], [22.4, 319.0], [22.5, 319.0], [22.6, 319.0], [22.7, 319.0], [22.8, 319.0], [22.9, 320.0], [23.0, 320.0], [23.1, 320.0], [23.2, 320.0], [23.3, 321.0], [23.4, 321.0], [23.5, 321.0], [23.6, 321.0], [23.7, 321.0], [23.8, 321.0], [23.9, 321.0], [24.0, 322.0], [24.1, 322.0], [24.2, 322.0], [24.3, 322.0], [24.4, 322.0], [24.5, 322.0], [24.6, 323.0], [24.7, 323.0], [24.8, 324.0], [24.9, 324.0], [25.0, 324.0], [25.1, 324.0], [25.2, 324.0], [25.3, 324.0], [25.4, 324.0], [25.5, 324.0], [25.6, 325.0], [25.7, 325.0], [25.8, 325.0], [25.9, 325.0], [26.0, 326.0], [26.1, 326.0], [26.2, 326.0], [26.3, 326.0], [26.4, 326.0], [26.5, 326.0], [26.6, 326.0], [26.7, 326.0], [26.8, 327.0], [26.9, 328.0], [27.0, 329.0], [27.1, 329.0], [27.2, 329.0], [27.3, 329.0], [27.4, 329.0], [27.5, 329.0], [27.6, 329.0], [27.7, 329.0], [27.8, 331.0], [27.9, 331.0], [28.0, 332.0], [28.1, 332.0], [28.2, 334.0], [28.3, 334.0], [28.4, 334.0], [28.5, 335.0], [28.6, 335.0], [28.7, 335.0], [28.8, 335.0], [28.9, 336.0], [29.0, 336.0], [29.1, 336.0], [29.2, 337.0], [29.3, 337.0], [29.4, 337.0], [29.5, 338.0], [29.6, 338.0], [29.7, 338.0], [29.8, 338.0], [29.9, 339.0], [30.0, 343.0], [30.1, 343.0], [30.2, 344.0], [30.3, 345.0], [30.4, 345.0], [30.5, 346.0], [30.6, 346.0], [30.7, 346.0], [30.8, 347.0], [30.9, 348.0], [31.0, 348.0], [31.1, 348.0], [31.2, 349.0], [31.3, 350.0], [31.4, 350.0], [31.5, 351.0], [31.6, 352.0], [31.7, 352.0], [31.8, 352.0], [31.9, 352.0], [32.0, 354.0], [32.1, 354.0], [32.2, 354.0], [32.3, 354.0], [32.4, 354.0], [32.5, 356.0], [32.6, 361.0], [32.7, 361.0], [32.8, 365.0], [32.9, 366.0], [33.0, 367.0], [33.1, 367.0], [33.2, 368.0], [33.3, 368.0], [33.4, 368.0], [33.5, 370.0], [33.6, 370.0], [33.7, 370.0], [33.8, 371.0], [33.9, 372.0], [34.0, 372.0], [34.1, 373.0], [34.2, 374.0], [34.3, 375.0], [34.4, 375.0], [34.5, 375.0], [34.6, 375.0], [34.7, 375.0], [34.8, 375.0], [34.9, 375.0], [35.0, 375.0], [35.1, 375.0], [35.2, 376.0], [35.3, 376.0], [35.4, 376.0], [35.5, 376.0], [35.6, 376.0], [35.7, 376.0], [35.8, 376.0], [35.9, 377.0], [36.0, 377.0], [36.1, 377.0], [36.2, 377.0], [36.3, 378.0], [36.4, 378.0], [36.5, 378.0], [36.6, 378.0], [36.7, 378.0], [36.8, 378.0], [36.9, 378.0], [37.0, 378.0], [37.1, 379.0], [37.2, 379.0], [37.3, 379.0], [37.4, 379.0], [37.5, 380.0], [37.6, 380.0], [37.7, 380.0], [37.8, 380.0], [37.9, 380.0], [38.0, 380.0], [38.1, 380.0], [38.2, 380.0], [38.3, 380.0], [38.4, 380.0], [38.5, 381.0], [38.6, 381.0], [38.7, 381.0], [38.8, 381.0], [38.9, 381.0], [39.0, 381.0], [39.1, 381.0], [39.2, 381.0], [39.3, 382.0], [39.4, 382.0], [39.5, 382.0], [39.6, 382.0], [39.7, 382.0], [39.8, 382.0], [39.9, 382.0], [40.0, 382.0], [40.1, 382.0], [40.2, 382.0], [40.3, 382.0], [40.4, 382.0], [40.5, 383.0], [40.6, 383.0], [40.7, 383.0], [40.8, 383.0], [40.9, 383.0], [41.0, 383.0], [41.1, 383.0], [41.2, 383.0], [41.3, 384.0], [41.4, 384.0], [41.5, 385.0], [41.6, 385.0], [41.7, 385.0], [41.8, 386.0], [41.9, 386.0], [42.0, 386.0], [42.1, 387.0], [42.2, 388.0], [42.3, 389.0], [42.4, 389.0], [42.5, 389.0], [42.6, 391.0], [42.7, 391.0], [42.8, 392.0], [42.9, 392.0], [43.0, 392.0], [43.1, 392.0], [43.2, 394.0], [43.3, 398.0], [43.4, 398.0], [43.5, 398.0], [43.6, 398.0], [43.7, 398.0], [43.8, 399.0], [43.9, 399.0], [44.0, 399.0], [44.1, 400.0], [44.2, 400.0], [44.3, 402.0], [44.4, 402.0], [44.5, 403.0], [44.6, 405.0], [44.7, 405.0], [44.8, 406.0], [44.9, 406.0], [45.0, 406.0], [45.1, 412.0], [45.2, 413.0], [45.3, 415.0], [45.4, 415.0], [45.5, 416.0], [45.6, 418.0], [45.7, 418.0], [45.8, 419.0], [45.9, 420.0], [46.0, 420.0], [46.1, 421.0], [46.2, 421.0], [46.3, 421.0], [46.4, 421.0], [46.5, 422.0], [46.6, 423.0], [46.7, 423.0], [46.8, 423.0], [46.9, 424.0], [47.0, 424.0], [47.1, 425.0], [47.2, 425.0], [47.3, 428.0], [47.4, 428.0], [47.5, 428.0], [47.6, 428.0], [47.7, 428.0], [47.8, 428.0], [47.9, 429.0], [48.0, 429.0], [48.1, 429.0], [48.2, 429.0], [48.3, 431.0], [48.4, 431.0], [48.5, 431.0], [48.6, 432.0], [48.7, 432.0], [48.8, 433.0], [48.9, 433.0], [49.0, 433.0], [49.1, 433.0], [49.2, 434.0], [49.3, 435.0], [49.4, 435.0], [49.5, 435.0], [49.6, 437.0], [49.7, 437.0], [49.8, 440.0], [49.9, 440.0], [50.0, 440.0], [50.1, 441.0], [50.2, 441.0], [50.3, 441.0], [50.4, 441.0], [50.5, 444.0], [50.6, 444.0], [50.7, 444.0], [50.8, 444.0], [50.9, 444.0], [51.0, 444.0], [51.1, 445.0], [51.2, 446.0], [51.3, 446.0], [51.4, 446.0], [51.5, 446.0], [51.6, 446.0], [51.7, 446.0], [51.8, 446.0], [51.9, 446.0], [52.0, 446.0], [52.1, 446.0], [52.2, 446.0], [52.3, 446.0], [52.4, 446.0], [52.5, 447.0], [52.6, 447.0], [52.7, 447.0], [52.8, 448.0], [52.9, 448.0], [53.0, 448.0], [53.1, 448.0], [53.2, 448.0], [53.3, 448.0], [53.4, 448.0], [53.5, 449.0], [53.6, 449.0], [53.7, 449.0], [53.8, 449.0], [53.9, 449.0], [54.0, 449.0], [54.1, 449.0], [54.2, 449.0], [54.3, 449.0], [54.4, 449.0], [54.5, 449.0], [54.6, 450.0], [54.7, 450.0], [54.8, 450.0], [54.9, 450.0], [55.0, 450.0], [55.1, 451.0], [55.2, 451.0], [55.3, 451.0], [55.4, 451.0], [55.5, 451.0], [55.6, 451.0], [55.7, 451.0], [55.8, 452.0], [55.9, 452.0], [56.0, 452.0], [56.1, 452.0], [56.2, 452.0], [56.3, 453.0], [56.4, 453.0], [56.5, 453.0], [56.6, 453.0], [56.7, 453.0], [56.8, 453.0], [56.9, 454.0], [57.0, 454.0], [57.1, 454.0], [57.2, 454.0], [57.3, 454.0], [57.4, 454.0], [57.5, 455.0], [57.6, 455.0], [57.7, 455.0], [57.8, 456.0], [57.9, 456.0], [58.0, 456.0], [58.1, 456.0], [58.2, 456.0], [58.3, 456.0], [58.4, 456.0], [58.5, 457.0], [58.6, 457.0], [58.7, 457.0], [58.8, 457.0], [58.9, 458.0], [59.0, 458.0], [59.1, 458.0], [59.2, 459.0], [59.3, 459.0], [59.4, 459.0], [59.5, 459.0], [59.6, 459.0], [59.7, 459.0], [59.8, 460.0], [59.9, 461.0], [60.0, 461.0], [60.1, 462.0], [60.2, 462.0], [60.3, 463.0], [60.4, 463.0], [60.5, 463.0], [60.6, 463.0], [60.7, 463.0], [60.8, 463.0], [60.9, 464.0], [61.0, 464.0], [61.1, 464.0], [61.2, 464.0], [61.3, 464.0], [61.4, 464.0], [61.5, 465.0], [61.6, 465.0], [61.7, 465.0], [61.8, 466.0], [61.9, 466.0], [62.0, 466.0], [62.1, 472.0], [62.2, 472.0], [62.3, 474.0], [62.4, 474.0], [62.5, 475.0], [62.6, 476.0], [62.7, 476.0], [62.8, 476.0], [62.9, 477.0], [63.0, 477.0], [63.1, 477.0], [63.2, 478.0], [63.3, 478.0], [63.4, 478.0], [63.5, 478.0], [63.6, 479.0], [63.7, 479.0], [63.8, 480.0], [63.9, 480.0], [64.0, 480.0], [64.1, 480.0], [64.2, 480.0], [64.3, 480.0], [64.4, 480.0], [64.5, 481.0], [64.6, 482.0], [64.7, 482.0], [64.8, 482.0], [64.9, 483.0], [65.0, 483.0], [65.1, 483.0], [65.2, 484.0], [65.3, 484.0], [65.4, 484.0], [65.5, 484.0], [65.6, 484.0], [65.7, 484.0], [65.8, 484.0], [65.9, 485.0], [66.0, 485.0], [66.1, 485.0], [66.2, 485.0], [66.3, 485.0], [66.4, 485.0], [66.5, 485.0], [66.6, 485.0], [66.7, 485.0], [66.8, 485.0], [66.9, 486.0], [67.0, 486.0], [67.1, 486.0], [67.2, 486.0], [67.3, 486.0], [67.4, 486.0], [67.5, 486.0], [67.6, 486.0], [67.7, 486.0], [67.8, 487.0], [67.9, 487.0], [68.0, 487.0], [68.1, 487.0], [68.2, 487.0], [68.3, 487.0], [68.4, 487.0], [68.5, 488.0], [68.6, 488.0], [68.7, 488.0], [68.8, 488.0], [68.9, 489.0], [69.0, 489.0], [69.1, 489.0], [69.2, 490.0], [69.3, 490.0], [69.4, 490.0], [69.5, 494.0], [69.6, 495.0], [69.7, 495.0], [69.8, 495.0], [69.9, 498.0], [70.0, 498.0], [70.1, 498.0], [70.2, 498.0], [70.3, 499.0], [70.4, 499.0], [70.5, 499.0], [70.6, 499.0], [70.7, 499.0], [70.8, 500.0], [70.9, 500.0], [71.0, 500.0], [71.1, 500.0], [71.2, 501.0], [71.3, 501.0], [71.4, 501.0], [71.5, 501.0], [71.6, 502.0], [71.7, 502.0], [71.8, 502.0], [71.9, 502.0], [72.0, 502.0], [72.1, 502.0], [72.2, 502.0], [72.3, 503.0], [72.4, 503.0], [72.5, 503.0], [72.6, 503.0], [72.7, 503.0], [72.8, 503.0], [72.9, 503.0], [73.0, 503.0], [73.1, 503.0], [73.2, 504.0], [73.3, 505.0], [73.4, 505.0], [73.5, 505.0], [73.6, 506.0], [73.7, 506.0], [73.8, 506.0], [73.9, 506.0], [74.0, 506.0], [74.1, 506.0], [74.2, 507.0], [74.3, 507.0], [74.4, 507.0], [74.5, 507.0], [74.6, 507.0], [74.7, 507.0], [74.8, 507.0], [74.9, 508.0], [75.0, 508.0], [75.1, 508.0], [75.2, 508.0], [75.3, 508.0], [75.4, 508.0], [75.5, 508.0], [75.6, 508.0], [75.7, 508.0], [75.8, 510.0], [75.9, 513.0], [76.0, 513.0], [76.1, 513.0], [76.2, 513.0], [76.3, 513.0], [76.4, 513.0], [76.5, 513.0], [76.6, 515.0], [76.7, 515.0], [76.8, 516.0], [76.9, 519.0], [77.0, 519.0], [77.1, 520.0], [77.2, 522.0], [77.3, 523.0], [77.4, 523.0], [77.5, 524.0], [77.6, 525.0], [77.7, 525.0], [77.8, 530.0], [77.9, 533.0], [78.0, 533.0], [78.1, 547.0], [78.2, 547.0], [78.3, 548.0], [78.4, 548.0], [78.5, 548.0], [78.6, 548.0], [78.7, 548.0], [78.8, 548.0], [78.9, 548.0], [79.0, 548.0], [79.1, 549.0], [79.2, 549.0], [79.3, 550.0], [79.4, 550.0], [79.5, 551.0], [79.6, 552.0], [79.7, 552.0], [79.8, 553.0], [79.9, 553.0], [80.0, 553.0], [80.1, 556.0], [80.2, 557.0], [80.3, 558.0], [80.4, 558.0], [80.5, 559.0], [80.6, 561.0], [80.7, 561.0], [80.8, 561.0], [80.9, 561.0], [81.0, 561.0], [81.1, 562.0], [81.2, 563.0], [81.3, 563.0], [81.4, 563.0], [81.5, 564.0], [81.6, 564.0], [81.7, 564.0], [81.8, 567.0], [81.9, 568.0], [82.0, 568.0], [82.1, 572.0], [82.2, 573.0], [82.3, 574.0], [82.4, 574.0], [82.5, 574.0], [82.6, 575.0], [82.7, 575.0], [82.8, 575.0], [82.9, 576.0], [83.0, 576.0], [83.1, 576.0], [83.2, 576.0], [83.3, 577.0], [83.4, 577.0], [83.5, 578.0], [83.6, 579.0], [83.7, 579.0], [83.8, 579.0], [83.9, 580.0], [84.0, 580.0], [84.1, 581.0], [84.2, 581.0], [84.3, 582.0], [84.4, 582.0], [84.5, 584.0], [84.6, 588.0], [84.7, 588.0], [84.8, 589.0], [84.9, 589.0], [85.0, 589.0], [85.1, 592.0], [85.2, 594.0], [85.3, 594.0], [85.4, 594.0], [85.5, 598.0], [85.6, 599.0], [85.7, 599.0], [85.8, 605.0], [85.9, 606.0], [86.0, 606.0], [86.1, 607.0], [86.2, 611.0], [86.3, 611.0], [86.4, 611.0], [86.5, 612.0], [86.6, 612.0], [86.7, 612.0], [86.8, 612.0], [86.9, 613.0], [87.0, 613.0], [87.1, 614.0], [87.2, 615.0], [87.3, 618.0], [87.4, 618.0], [87.5, 627.0], [87.6, 634.0], [87.7, 634.0], [87.8, 641.0], [87.9, 643.0], [88.0, 649.0], [88.1, 649.0], [88.2, 658.0], [88.3, 660.0], [88.4, 660.0], [88.5, 662.0], [88.6, 662.0], [88.7, 662.0], [88.8, 662.0], [88.9, 663.0], [89.0, 665.0], [89.1, 665.0], [89.2, 665.0], [89.3, 665.0], [89.4, 665.0], [89.5, 665.0], [89.6, 666.0], [89.7, 666.0], [89.8, 667.0], [89.9, 668.0], [90.0, 668.0], [90.1, 668.0], [90.2, 668.0], [90.3, 668.0], [90.4, 668.0], [90.5, 668.0], [90.6, 669.0], [90.7, 669.0], [90.8, 669.0], [90.9, 669.0], [91.0, 670.0], [91.1, 670.0], [91.2, 670.0], [91.3, 670.0], [91.4, 670.0], [91.5, 670.0], [91.6, 670.0], [91.7, 670.0], [91.8, 671.0], [91.9, 671.0], [92.0, 671.0], [92.1, 671.0], [92.2, 671.0], [92.3, 671.0], [92.4, 671.0], [92.5, 673.0], [92.6, 673.0], [92.7, 673.0], [92.8, 673.0], [92.9, 674.0], [93.0, 675.0], [93.1, 675.0], [93.2, 675.0], [93.3, 675.0], [93.4, 675.0], [93.5, 676.0], [93.6, 677.0], [93.7, 677.0], [93.8, 677.0], [93.9, 678.0], [94.0, 678.0], [94.1, 678.0], [94.2, 679.0], [94.3, 680.0], [94.4, 680.0], [94.5, 680.0], [94.6, 681.0], [94.7, 681.0], [94.8, 681.0], [94.9, 681.0], [95.0, 682.0], [95.1, 682.0], [95.2, 682.0], [95.3, 682.0], [95.4, 682.0], [95.5, 683.0], [95.6, 683.0], [95.7, 683.0], [95.8, 683.0], [95.9, 685.0], [96.0, 688.0], [96.1, 688.0], [96.2, 688.0], [96.3, 691.0], [96.4, 691.0], [96.5, 716.0], [96.6, 746.0], [96.7, 746.0], [96.8, 751.0], [96.9, 767.0], [97.0, 768.0], [97.1, 768.0], [97.2, 769.0], [97.3, 773.0], [97.4, 773.0], [97.5, 778.0], [97.6, 779.0], [97.7, 779.0], [97.8, 782.0], [97.9, 786.0], [98.0, 787.0], [98.1, 787.0], [98.2, 788.0], [98.3, 792.0], [98.4, 792.0], [98.5, 793.0], [98.6, 795.0], [98.7, 795.0], [98.8, 797.0], [98.9, 800.0], [99.0, 805.0], [99.1, 805.0], [99.2, 880.0], [99.3, 902.0], [99.4, 902.0], [99.5, 906.0], [99.6, 910.0], [99.7, 910.0], [99.8, 910.0], [99.9, 917.0]], "isOverall": false, "label": "Auth", "isController": false}, {"data": [[0.0, 4542.0], [0.1, 4542.0], [0.2, 4604.0], [0.3, 4605.0], [0.4, 4605.0], [0.5, 4608.0], [0.6, 4644.0], [0.7, 4644.0], [0.8, 4836.0], [0.9, 4961.0], [1.0, 4993.0], [1.1, 4993.0], [1.2, 5000.0], [1.3, 5025.0], [1.4, 5025.0], [1.5, 5026.0], [1.6, 5026.0], [1.7, 5026.0], [1.8, 5028.0], [1.9, 5043.0], [2.0, 5047.0], [2.1, 5047.0], [2.2, 5053.0], [2.3, 5055.0], [2.4, 5055.0], [2.5, 5055.0], [2.6, 5070.0], [2.7, 5070.0], [2.8, 5073.0], [2.9, 5074.0], [3.0, 5078.0], [3.1, 5078.0], [3.2, 5079.0], [3.3, 5080.0], [3.4, 5080.0], [3.5, 5081.0], [3.6, 5083.0], [3.7, 5083.0], [3.8, 5083.0], [3.9, 5083.0], [4.0, 5086.0], [4.1, 5086.0], [4.2, 5093.0], [4.3, 5097.0], [4.4, 5097.0], [4.5, 5101.0], [4.6, 5107.0], [4.7, 5107.0], [4.8, 5110.0], [4.9, 5113.0], [5.0, 5113.0], [5.1, 5114.0], [5.2, 5115.0], [5.3, 5116.0], [5.4, 5116.0], [5.5, 5116.0], [5.6, 5117.0], [5.7, 5117.0], [5.8, 5119.0], [5.9, 5119.0], [6.0, 5119.0], [6.1, 5120.0], [6.2, 5121.0], [6.3, 5121.0], [6.4, 5121.0], [6.5, 5121.0], [6.6, 5122.0], [6.7, 5122.0], [6.8, 5122.0], [6.9, 5122.0], [7.0, 5122.0], [7.1, 5122.0], [7.2, 5122.0], [7.3, 5123.0], [7.4, 5123.0], [7.5, 5123.0], [7.6, 5123.0], [7.7, 5123.0], [7.8, 5126.0], [7.9, 5126.0], [8.0, 5126.0], [8.1, 5126.0], [8.2, 5127.0], [8.3, 5127.0], [8.4, 5127.0], [8.5, 5128.0], [8.6, 5129.0], [8.7, 5129.0], [8.8, 5131.0], [8.9, 5152.0], [9.0, 5152.0], [9.1, 5161.0], [9.2, 5271.0], [9.3, 5272.0], [9.4, 5272.0], [9.5, 5275.0], [9.6, 5275.0], [9.7, 5275.0], [9.8, 5276.0], [9.9, 5276.0], [10.0, 5276.0], [10.1, 5276.0], [10.2, 5277.0], [10.3, 5278.0], [10.4, 5278.0], [10.5, 5278.0], [10.6, 5278.0], [10.7, 5278.0], [10.8, 5280.0], [10.9, 5282.0], [11.0, 5286.0], [11.1, 5286.0], [11.2, 5329.0], [11.3, 5346.0], [11.4, 5346.0], [11.5, 5355.0], [11.6, 5360.0], [11.7, 5360.0], [11.8, 5360.0], [11.9, 5367.0], [12.0, 5367.0], [12.1, 5367.0], [12.2, 5376.0], [12.3, 5378.0], [12.4, 5378.0], [12.5, 5395.0], [12.6, 5523.0], [12.7, 5523.0], [12.8, 5524.0], [12.9, 5525.0], [13.0, 5525.0], [13.1, 5525.0], [13.2, 5527.0], [13.3, 5529.0], [13.4, 5529.0], [13.5, 5530.0], [13.6, 5533.0], [13.7, 5533.0], [13.8, 5533.0], [13.9, 5534.0], [14.0, 5534.0], [14.1, 5534.0], [14.2, 5539.0], [14.3, 5548.0], [14.4, 5548.0], [14.5, 5549.0], [14.6, 5549.0], [14.7, 5549.0], [14.8, 5551.0], [14.9, 5560.0], [15.0, 5560.0], [15.1, 5560.0], [15.2, 5561.0], [15.3, 5562.0], [15.4, 5562.0], [15.5, 5565.0], [15.6, 5566.0], [15.7, 5566.0], [15.8, 5567.0], [15.9, 5570.0], [16.0, 5570.0], [16.1, 5570.0], [16.2, 5570.0], [16.3, 5573.0], [16.4, 5573.0], [16.5, 5583.0], [16.6, 5586.0], [16.7, 5586.0], [16.8, 5586.0], [16.9, 5587.0], [17.0, 5588.0], [17.1, 5588.0], [17.2, 5590.0], [17.3, 5593.0], [17.4, 5593.0], [17.5, 5594.0], [17.6, 5597.0], [17.7, 5597.0], [17.8, 5597.0], [17.9, 5600.0], [18.0, 5600.0], [18.1, 5600.0], [18.2, 5607.0], [18.3, 5613.0], [18.4, 5613.0], [18.5, 5616.0], [18.6, 5619.0], [18.7, 5619.0], [18.8, 5693.0], [18.9, 5969.0], [19.0, 6233.0], [19.1, 6233.0], [19.2, 6242.0], [19.3, 6243.0], [19.4, 6243.0], [19.5, 6260.0], [19.6, 6261.0], [19.7, 6261.0], [19.8, 6264.0], [19.9, 6265.0], [20.0, 6275.0], [20.1, 6275.0], [20.2, 6283.0], [20.3, 6339.0], [20.4, 6339.0], [20.5, 6340.0], [20.6, 6341.0], [20.7, 6341.0], [20.8, 6344.0], [20.9, 6344.0], [21.0, 6346.0], [21.1, 6346.0], [21.2, 6347.0], [21.3, 6349.0], [21.4, 6349.0], [21.5, 6351.0], [21.6, 6352.0], [21.7, 6352.0], [21.8, 6358.0], [21.9, 6367.0], [22.0, 6368.0], [22.1, 6368.0], [22.2, 6376.0], [22.3, 6377.0], [22.4, 6377.0], [22.5, 6528.0], [22.6, 6676.0], [22.7, 6676.0], [22.8, 6678.0], [22.9, 6682.0], [23.0, 6683.0], [23.1, 6683.0], [23.2, 6683.0], [23.3, 6685.0], [23.4, 6685.0], [23.5, 6687.0], [23.6, 6690.0], [23.7, 6690.0], [23.8, 6695.0], [23.9, 6705.0], [24.0, 6708.0], [24.1, 6708.0], [24.2, 6710.0], [24.3, 6710.0], [24.4, 6710.0], [24.5, 6712.0], [24.6, 6716.0], [24.7, 6716.0], [24.8, 6717.0], [24.9, 6718.0], [25.0, 6718.0], [25.1, 6718.0], [25.2, 6721.0], [25.3, 6777.0], [25.4, 6777.0], [25.5, 6779.0], [25.6, 6779.0], [25.7, 6779.0], [25.8, 6780.0], [25.9, 6783.0], [26.0, 6784.0], [26.1, 6784.0], [26.2, 6784.0], [26.3, 6789.0], [26.4, 6789.0], [26.5, 6791.0], [26.6, 6791.0], [26.7, 6791.0], [26.8, 6793.0], [26.9, 6797.0], [27.0, 6797.0], [27.1, 6797.0], [27.2, 6797.0], [27.3, 6799.0], [27.4, 6799.0], [27.5, 6799.0], [27.6, 6800.0], [27.7, 6800.0], [27.8, 6802.0], [27.9, 6802.0], [28.0, 6805.0], [28.1, 6805.0], [28.2, 6805.0], [28.3, 6809.0], [28.4, 6809.0], [28.5, 6811.0], [28.6, 6817.0], [28.7, 6817.0], [28.8, 6873.0], [28.9, 6914.0], [29.0, 6947.0], [29.1, 6947.0], [29.2, 6950.0], [29.3, 6952.0], [29.4, 6952.0], [29.5, 6953.0], [29.6, 6953.0], [29.7, 6953.0], [29.8, 6954.0], [29.9, 6955.0], [30.0, 6956.0], [30.1, 6956.0], [30.2, 6956.0], [30.3, 6957.0], [30.4, 6957.0], [30.5, 6957.0], [30.6, 6959.0], [30.7, 6959.0], [30.8, 6959.0], [30.9, 6962.0], [31.0, 6964.0], [31.1, 6964.0], [31.2, 7019.0], [31.3, 7023.0], [31.4, 7023.0], [31.5, 7027.0], [31.6, 7029.0], [31.7, 7029.0], [31.8, 7035.0], [31.9, 7119.0], [32.0, 7119.0], [32.1, 7119.0], [32.2, 7121.0], [32.3, 7124.0], [32.4, 7124.0], [32.5, 7124.0], [32.6, 7124.0], [32.7, 7124.0], [32.8, 7125.0], [32.9, 7126.0], [33.0, 7126.0], [33.1, 7126.0], [33.2, 7126.0], [33.3, 7130.0], [33.4, 7130.0], [33.5, 7229.0], [33.6, 7230.0], [33.7, 7230.0], [33.8, 7230.0], [33.9, 7230.0], [34.0, 7232.0], [34.1, 7232.0], [34.2, 7232.0], [34.3, 7233.0], [34.4, 7233.0], [34.5, 7233.0], [34.6, 7238.0], [34.7, 7238.0], [34.8, 7242.0], [34.9, 7242.0], [35.0, 7242.0], [35.1, 7242.0], [35.2, 7243.0], [35.3, 7243.0], [35.4, 7243.0], [35.5, 7243.0], [35.6, 7243.0], [35.7, 7243.0], [35.8, 7244.0], [35.9, 7244.0], [36.0, 7245.0], [36.1, 7245.0], [36.2, 7245.0], [36.3, 7246.0], [36.4, 7246.0], [36.5, 7246.0], [36.6, 7246.0], [36.7, 7246.0], [36.8, 7246.0], [36.9, 7248.0], [37.0, 7249.0], [37.1, 7249.0], [37.2, 7249.0], [37.3, 7251.0], [37.4, 7251.0], [37.5, 7251.0], [37.6, 7252.0], [37.7, 7252.0], [37.8, 7252.0], [37.9, 7253.0], [38.0, 7254.0], [38.1, 7254.0], [38.2, 7255.0], [38.3, 7257.0], [38.4, 7257.0], [38.5, 7269.0], [38.6, 7270.0], [38.7, 7270.0], [38.8, 7273.0], [38.9, 7274.0], [39.0, 7276.0], [39.1, 7276.0], [39.2, 7277.0], [39.3, 7280.0], [39.4, 7280.0], [39.5, 7282.0], [39.6, 7283.0], [39.7, 7283.0], [39.8, 7283.0], [39.9, 7283.0], [40.0, 7284.0], [40.1, 7284.0], [40.2, 7284.0], [40.3, 7286.0], [40.4, 7286.0], [40.5, 7293.0], [40.6, 7308.0], [40.7, 7308.0], [40.8, 7310.0], [40.9, 7310.0], [41.0, 7313.0], [41.1, 7313.0], [41.2, 7317.0], [41.3, 7318.0], [41.4, 7318.0], [41.5, 7319.0], [41.6, 7319.0], [41.7, 7319.0], [41.8, 7319.0], [41.9, 7319.0], [42.0, 7319.0], [42.1, 7320.0], [42.2, 7321.0], [42.3, 7321.0], [42.4, 7321.0], [42.5, 7321.0], [42.6, 7321.0], [42.7, 7321.0], [42.8, 7322.0], [42.9, 7324.0], [43.0, 7324.0], [43.1, 7324.0], [43.2, 7326.0], [43.3, 7326.0], [43.4, 7326.0], [43.5, 7327.0], [43.6, 7328.0], [43.7, 7328.0], [43.8, 7328.0], [43.9, 7329.0], [44.0, 7329.0], [44.1, 7332.0], [44.2, 7333.0], [44.3, 7337.0], [44.4, 7337.0], [44.5, 7339.0], [44.6, 7340.0], [44.7, 7340.0], [44.8, 7344.0], [44.9, 7349.0], [45.0, 7349.0], [45.1, 7351.0], [45.2, 7356.0], [45.3, 7362.0], [45.4, 7362.0], [45.5, 7369.0], [45.6, 7370.0], [45.7, 7370.0], [45.8, 7375.0], [45.9, 7378.0], [46.0, 7378.0], [46.1, 7380.0], [46.2, 7384.0], [46.3, 7579.0], [46.4, 7579.0], [46.5, 7584.0], [46.6, 7585.0], [46.7, 7585.0], [46.8, 7587.0], [46.9, 7589.0], [47.0, 7589.0], [47.1, 7592.0], [47.2, 7593.0], [47.3, 7593.0], [47.4, 7593.0], [47.5, 7596.0], [47.6, 7596.0], [47.7, 7596.0], [47.8, 7598.0], [47.9, 7599.0], [48.0, 7599.0], [48.1, 7606.0], [48.2, 7607.0], [48.3, 7607.0], [48.4, 7607.0], [48.5, 7611.0], [48.6, 7618.0], [48.7, 7618.0], [48.8, 7655.0], [48.9, 7656.0], [49.0, 7656.0], [49.1, 7657.0], [49.2, 7657.0], [49.3, 7659.0], [49.4, 7659.0], [49.5, 7659.0], [49.6, 7660.0], [49.7, 7660.0], [49.8, 7660.0], [49.9, 7663.0], [50.0, 7663.0], [50.1, 7663.0], [50.2, 7664.0], [50.3, 7665.0], [50.4, 7665.0], [50.5, 7665.0], [50.6, 7666.0], [50.7, 7666.0], [50.8, 7667.0], [50.9, 7668.0], [51.0, 7668.0], [51.1, 7668.0], [51.2, 7671.0], [51.3, 7672.0], [51.4, 7672.0], [51.5, 7674.0], [51.6, 7674.0], [51.7, 7674.0], [51.8, 7676.0], [51.9, 7681.0], [52.0, 7681.0], [52.1, 7684.0], [52.2, 7686.0], [52.3, 7687.0], [52.4, 7687.0], [52.5, 7691.0], [52.6, 7698.0], [52.7, 7698.0], [52.8, 7702.0], [52.9, 7708.0], [53.0, 7708.0], [53.1, 7709.0], [53.2, 7741.0], [53.3, 7940.0], [53.4, 7940.0], [53.5, 7942.0], [53.6, 7944.0], [53.7, 7944.0], [53.8, 7944.0], [53.9, 7945.0], [54.0, 7945.0], [54.1, 7950.0], [54.2, 7954.0], [54.3, 7957.0], [54.4, 7957.0], [54.5, 7957.0], [54.6, 7957.0], [54.7, 7957.0], [54.8, 7957.0], [54.9, 7959.0], [55.0, 7959.0], [55.1, 7960.0], [55.2, 7960.0], [55.3, 7960.0], [55.4, 7960.0], [55.5, 7961.0], [55.6, 7961.0], [55.7, 7961.0], [55.8, 7961.0], [55.9, 7962.0], [56.0, 7962.0], [56.1, 7963.0], [56.2, 7963.0], [56.3, 7964.0], [56.4, 7964.0], [56.5, 7964.0], [56.6, 7965.0], [56.7, 7965.0], [56.8, 7965.0], [56.9, 7966.0], [57.0, 7966.0], [57.1, 7969.0], [57.2, 7969.0], [57.3, 7971.0], [57.4, 7971.0], [57.5, 7973.0], [57.6, 7973.0], [57.7, 7973.0], [57.8, 7975.0], [57.9, 7975.0], [58.0, 7975.0], [58.1, 7976.0], [58.2, 7977.0], [58.3, 7977.0], [58.4, 7977.0], [58.5, 7978.0], [58.6, 7980.0], [58.7, 7980.0], [58.8, 7984.0], [58.9, 7986.0], [59.0, 7986.0], [59.1, 7986.0], [59.2, 7987.0], [59.3, 7988.0], [59.4, 7988.0], [59.5, 7993.0], [59.6, 7999.0], [59.7, 7999.0], [59.8, 7999.0], [59.9, 8006.0], [60.0, 8006.0], [60.1, 8006.0], [60.2, 8011.0], [60.3, 8013.0], [60.4, 8013.0], [60.5, 8018.0], [60.6, 8026.0], [60.7, 8026.0], [60.8, 8029.0], [60.9, 8045.0], [61.0, 8045.0], [61.1, 8058.0], [61.2, 8082.0], [61.3, 8105.0], [61.4, 8105.0], [61.5, 8115.0], [61.6, 8122.0], [61.7, 8122.0], [61.8, 8129.0], [61.9, 8132.0], [62.0, 8132.0], [62.1, 8132.0], [62.2, 8133.0], [62.3, 8134.0], [62.4, 8134.0], [62.5, 8135.0], [62.6, 8135.0], [62.7, 8135.0], [62.8, 8135.0], [62.9, 8136.0], [63.0, 8136.0], [63.1, 8136.0], [63.2, 8137.0], [63.3, 8138.0], [63.4, 8138.0], [63.5, 8143.0], [63.6, 8961.0], [63.7, 8961.0], [63.8, 8961.0], [63.9, 8962.0], [64.0, 8962.0], [64.1, 8969.0], [64.2, 8970.0], [64.3, 8970.0], [64.4, 8970.0], [64.5, 8971.0], [64.6, 8971.0], [64.7, 8971.0], [64.8, 9107.0], [64.9, 9107.0], [65.0, 9107.0], [65.1, 9109.0], [65.2, 9113.0], [65.3, 9113.0], [65.4, 9113.0], [65.5, 9114.0], [65.6, 9114.0], [65.7, 9114.0], [65.8, 9114.0], [65.9, 9114.0], [66.0, 9114.0], [66.1, 9115.0], [66.2, 9115.0], [66.3, 9116.0], [66.4, 9116.0], [66.5, 9118.0], [66.6, 9118.0], [66.7, 9118.0], [66.8, 9123.0], [66.9, 9124.0], [67.0, 9124.0], [67.1, 9282.0], [67.2, 9296.0], [67.3, 9299.0], [67.4, 9299.0], [67.5, 9300.0], [67.6, 9305.0], [67.7, 9305.0], [67.8, 9310.0], [67.9, 9310.0], [68.0, 9310.0], [68.1, 9310.0], [68.2, 9313.0], [68.3, 9313.0], [68.4, 9313.0], [68.5, 9316.0], [68.6, 9316.0], [68.7, 9316.0], [68.8, 9317.0], [68.9, 9317.0], [69.0, 9317.0], [69.1, 9319.0], [69.2, 9323.0], [69.3, 9324.0], [69.4, 9324.0], [69.5, 9327.0], [69.6, 9328.0], [69.7, 9328.0], [69.8, 9328.0], [69.9, 9329.0], [70.0, 9329.0], [70.1, 9330.0], [70.2, 9330.0], [70.3, 9332.0], [70.4, 9332.0], [70.5, 9337.0], [70.6, 9339.0], [70.7, 9339.0], [70.8, 9340.0], [70.9, 9340.0], [71.0, 9340.0], [71.1, 9341.0], [71.2, 9345.0], [71.3, 9347.0], [71.4, 9347.0], [71.5, 9348.0], [71.6, 9349.0], [71.7, 9349.0], [71.8, 9350.0], [71.9, 9356.0], [72.0, 9356.0], [72.1, 9358.0], [72.2, 9362.0], [72.3, 9371.0], [72.4, 9371.0], [72.5, 9374.0], [72.6, 9374.0], [72.7, 9374.0], [72.8, 9376.0], [72.9, 9381.0], [73.0, 9381.0], [73.1, 9384.0], [73.2, 9403.0], [73.3, 9452.0], [73.4, 9452.0], [73.5, 9489.0], [73.6, 9498.0], [73.7, 9498.0], [73.8, 9507.0], [73.9, 9545.0], [74.0, 9545.0], [74.1, 9548.0], [74.2, 9577.0], [74.3, 9590.0], [74.4, 9590.0], [74.5, 9594.0], [74.6, 9602.0], [74.7, 9602.0], [74.8, 9609.0], [74.9, 9610.0], [75.0, 9610.0], [75.1, 9613.0], [75.2, 9614.0], [75.3, 9614.0], [75.4, 9614.0], [75.5, 9646.0], [75.6, 9650.0], [75.7, 9650.0], [75.8, 9650.0], [75.9, 9651.0], [76.0, 9651.0], [76.1, 9651.0], [76.2, 9653.0], [76.3, 9655.0], [76.4, 9655.0], [76.5, 9655.0], [76.6, 9658.0], [76.7, 9658.0], [76.8, 9659.0], [76.9, 9800.0], [77.0, 9800.0], [77.1, 9971.0], [77.2, 9977.0], [77.3, 9982.0], [77.4, 9982.0], [77.5, 9985.0], [77.6, 10067.0], [77.7, 10067.0], [77.8, 10072.0], [77.9, 10076.0], [78.0, 10076.0], [78.1, 10076.0], [78.2, 10077.0], [78.3, 10078.0], [78.4, 10078.0], [78.5, 10082.0], [78.6, 10084.0], [78.7, 10084.0], [78.8, 10086.0], [78.9, 10086.0], [79.0, 10086.0], [79.1, 10086.0], [79.2, 10087.0], [79.3, 10087.0], [79.4, 10087.0], [79.5, 10089.0], [79.6, 10091.0], [79.7, 10091.0], [79.8, 10094.0], [79.9, 10094.0], [80.0, 10094.0], [80.1, 10094.0], [80.2, 10095.0], [80.3, 10097.0], [80.4, 10097.0], [80.5, 10097.0], [80.6, 10098.0], [80.7, 10098.0], [80.8, 10099.0], [80.9, 10099.0], [81.0, 10099.0], [81.1, 10100.0], [81.2, 10100.0], [81.3, 10101.0], [81.4, 10101.0], [81.5, 10101.0], [81.6, 10103.0], [81.7, 10103.0], [81.8, 10105.0], [81.9, 10107.0], [82.0, 10107.0], [82.1, 10108.0], [82.2, 10115.0], [82.3, 10116.0], [82.4, 10116.0], [82.5, 10117.0], [82.6, 10117.0], [82.7, 10117.0], [82.8, 10119.0], [82.9, 10121.0], [83.0, 10121.0], [83.1, 10121.0], [83.2, 10122.0], [83.3, 10122.0], [83.4, 10122.0], [83.5, 10126.0], [83.6, 10130.0], [83.7, 10130.0], [83.8, 10130.0], [83.9, 10142.0], [84.0, 10142.0], [84.1, 10146.0], [84.2, 10188.0], [84.3, 10188.0], [84.4, 10188.0], [84.5, 10190.0], [84.6, 10191.0], [84.7, 10191.0], [84.8, 10191.0], [84.9, 10191.0], [85.0, 10191.0], [85.1, 10193.0], [85.2, 10194.0], [85.3, 10194.0], [85.4, 10194.0], [85.5, 10195.0], [85.6, 10196.0], [85.7, 10196.0], [85.8, 10196.0], [85.9, 10196.0], [86.0, 10196.0], [86.1, 10198.0], [86.2, 10199.0], [86.3, 10199.0], [86.4, 10199.0], [86.5, 10203.0], [86.6, 10204.0], [86.7, 10204.0], [86.8, 10206.0], [86.9, 10247.0], [87.0, 10247.0], [87.1, 10247.0], [87.2, 10251.0], [87.3, 10252.0], [87.4, 10252.0], [87.5, 10257.0], [87.6, 10263.0], [87.7, 10263.0], [87.8, 10264.0], [87.9, 10267.0], [88.0, 10267.0], [88.1, 10269.0], [88.2, 10269.0], [88.3, 10272.0], [88.4, 10272.0], [88.5, 10272.0], [88.6, 10272.0], [88.7, 10272.0], [88.8, 10272.0], [88.9, 10272.0], [89.0, 10272.0], [89.1, 10272.0], [89.2, 10273.0], [89.3, 10273.0], [89.4, 10273.0], [89.5, 10273.0], [89.6, 10274.0], [89.7, 10274.0], [89.8, 10274.0], [89.9, 10274.0], [90.0, 10274.0], [90.1, 10274.0], [90.2, 10275.0], [90.3, 10275.0], [90.4, 10275.0], [90.5, 10276.0], [90.6, 10276.0], [90.7, 10276.0], [90.8, 10277.0], [90.9, 10277.0], [91.0, 10277.0], [91.1, 10278.0], [91.2, 10278.0], [91.3, 10279.0], [91.4, 10279.0], [91.5, 10279.0], [91.6, 10280.0], [91.7, 10280.0], [91.8, 10280.0], [91.9, 10281.0], [92.0, 10281.0], [92.1, 10281.0], [92.2, 10281.0], [92.3, 10281.0], [92.4, 10281.0], [92.5, 10282.0], [92.6, 10283.0], [92.7, 10283.0], [92.8, 10283.0], [92.9, 10283.0], [93.0, 10283.0], [93.1, 10286.0], [93.2, 10286.0], [93.3, 10287.0], [93.4, 10287.0], [93.5, 10291.0], [93.6, 10344.0], [93.7, 10344.0], [93.8, 10347.0], [93.9, 10349.0], [94.0, 10349.0], [94.1, 10352.0], [94.2, 10358.0], [94.3, 10360.0], [94.4, 10360.0], [94.5, 10361.0], [94.6, 10397.0], [94.7, 10397.0], [94.8, 10398.0], [94.9, 10398.0], [95.0, 10398.0], [95.1, 10399.0], [95.2, 10401.0], [95.3, 10401.0], [95.4, 10401.0], [95.5, 10403.0], [95.6, 10404.0], [95.7, 10404.0], [95.8, 10405.0], [95.9, 10405.0], [96.0, 10405.0], [96.1, 10410.0], [96.2, 10417.0], [96.3, 10419.0], [96.4, 10419.0], [96.5, 10425.0], [96.6, 10433.0], [96.7, 10433.0], [96.8, 10452.0], [96.9, 10523.0], [97.0, 10523.0], [97.1, 10662.0], [97.2, 10712.0], [97.3, 10716.0], [97.4, 10716.0], [97.5, 10724.0], [97.6, 10725.0], [97.7, 10725.0], [97.8, 10727.0], [97.9, 10730.0], [98.0, 10730.0], [98.1, 10808.0], [98.2, 10822.0], [98.3, 10849.0], [98.4, 10849.0], [98.5, 10850.0], [98.6, 10855.0], [98.7, 10855.0], [98.8, 10856.0], [98.9, 11441.0], [99.0, 11442.0], [99.1, 11442.0], [99.2, 11481.0], [99.3, 11571.0], [99.4, 11571.0], [99.5, 11576.0], [99.6, 11619.0], [99.7, 11619.0], [99.8, 11633.0], [99.9, 11639.0]], "isOverall": false, "label": "Update", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 251.0, "series": [{"data": [[2400.0, 10.0], [2500.0, 108.0], [2600.0, 50.0], [700.0, 1.0], [3100.0, 2.0], [3300.0, 59.0], [800.0, 10.0], [3400.0, 21.0], [3600.0, 33.0], [900.0, 1.0], [4000.0, 44.0], [4300.0, 11.0], [4100.0, 52.0], [4500.0, 55.0], [4600.0, 2.0], [4400.0, 33.0], [4800.0, 1.0], [4900.0, 54.0], [5000.0, 41.0], [5500.0, 11.0], [5600.0, 1.0], [1500.0, 79.0], [1600.0, 21.0]], "isOverall": false, "label": "Delete", "isController": false}, {"data": [[1800.0, 1.0], [2500.0, 1.0], [3100.0, 1.0], [3200.0, 2.0], [3300.0, 1.0], [3400.0, 9.0], [3500.0, 26.0], [3600.0, 2.0], [3700.0, 1.0], [3800.0, 1.0], [3900.0, 9.0], [4000.0, 27.0], [4300.0, 11.0], [4200.0, 5.0], [4100.0, 18.0], [4600.0, 17.0], [4400.0, 8.0], [4500.0, 11.0], [4700.0, 10.0], [4800.0, 9.0], [5000.0, 21.0], [5100.0, 7.0], [4900.0, 12.0], [5300.0, 13.0], [5200.0, 11.0], [5600.0, 10.0], [5500.0, 24.0], [5400.0, 20.0], [5800.0, 9.0], [5700.0, 20.0], [6100.0, 59.0], [5900.0, 13.0], [6000.0, 16.0], [6300.0, 15.0], [6200.0, 33.0], [6600.0, 20.0], [6500.0, 15.0], [6400.0, 13.0], [6700.0, 26.0], [6800.0, 66.0], [6900.0, 33.0], [7000.0, 16.0], [7100.0, 9.0], [7200.0, 3.0], [7500.0, 2.0], [7900.0, 4.0], [7700.0, 4.0], [7800.0, 1.0], [8100.0, 3.0], [8000.0, 3.0], [8600.0, 2.0], [8200.0, 4.0], [8300.0, 1.0], [8700.0, 2.0], [8800.0, 11.0], [9000.0, 1.0], [9100.0, 2.0], [9200.0, 1.0], [8900.0, 3.0], [9900.0, 2.0]], "isOverall": false, "label": "Create", "isController": false}, {"data": [[3000.0, 5.0], [3100.0, 12.0], [3200.0, 3.0], [3800.0, 1.0], [4100.0, 110.0], [4200.0, 15.0], [4300.0, 17.0], [4400.0, 74.0], [4500.0, 78.0], [4600.0, 9.0], [4700.0, 2.0], [4800.0, 6.0], [5100.0, 1.0], [5000.0, 1.0], [5200.0, 39.0], [5300.0, 25.0], [5500.0, 3.0], [5600.0, 2.0], [5400.0, 3.0], [5700.0, 3.0], [5800.0, 1.0], [5900.0, 22.0], [6100.0, 74.0], [6000.0, 136.0], [6200.0, 9.0], [6300.0, 39.0], [6400.0, 1.0], [6800.0, 1.0], [6900.0, 1.0], [7100.0, 5.0], [7000.0, 2.0]], "isOverall": false, "label": "Get", "isController": false}, {"data": [[300.0, 251.0], [600.0, 75.0], [700.0, 17.0], [400.0, 187.0], [200.0, 57.0], [800.0, 3.0], [900.0, 5.0], [500.0, 105.0]], "isOverall": false, "label": "Auth", "isController": false}, {"data": [[4600.0, 4.0], [4500.0, 1.0], [4800.0, 1.0], [5100.0, 33.0], [5000.0, 23.0], [4900.0, 2.0], [5300.0, 10.0], [5200.0, 14.0], [5600.0, 7.0], [5500.0, 37.0], [5900.0, 1.0], [6300.0, 15.0], [6200.0, 9.0], [6600.0, 9.0], [6500.0, 1.0], [6800.0, 9.0], [6700.0, 26.0], [6900.0, 16.0], [7100.0, 11.0], [7000.0, 5.0], [7300.0, 40.0], [7200.0, 50.0], [7600.0, 33.0], [7500.0, 12.0], [7700.0, 4.0], [7900.0, 46.0], [8000.0, 10.0], [8100.0, 16.0], [8900.0, 8.0], [9200.0, 3.0], [9100.0, 16.0], [9400.0, 4.0], [9300.0, 40.0], [9500.0, 6.0], [9600.0, 16.0], [10200.0, 50.0], [10100.0, 38.0], [10000.0, 24.0], [9900.0, 4.0], [9800.0, 1.0], [10700.0, 6.0], [10600.0, 1.0], [10500.0, 1.0], [10400.0, 12.0], [10300.0, 11.0], [10800.0, 6.0], [11600.0, 3.0], [11400.0, 3.0], [11500.0, 2.0]], "isOverall": false, "label": "Update", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 11600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 214.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2788.0, "series": [{"data": [[0.0, 498.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 214.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2788.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 579.6783625730985, "minX": 1.64797356E12, "maxY": 663.9868784530382, "series": [{"data": [[1.64797356E12, 663.9868784530382], [1.64797362E12, 579.6783625730985]], "isOverall": false, "label": "Booking_API", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64797362E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 447.76285714285746, "minX": 1.0, "maxY": 8895.0, "series": [{"data": [[2.0, 800.0], [4.0, 801.0], [5.0, 802.0], [6.0, 804.0], [7.0, 819.0], [9.0, 1555.0], [12.0, 834.0], [13.0, 1254.5], [14.0, 1187.0], [15.0, 826.0], [16.0, 1557.0], [17.0, 1557.0], [19.0, 1517.0], [20.0, 1551.5], [21.0, 1558.0], [22.0, 1554.0], [25.0, 1335.6666666666667], [27.0, 1552.5], [30.0, 1556.6666666666667], [31.0, 1581.0], [33.0, 1573.0], [32.0, 1550.0], [34.0, 1564.0], [37.0, 1570.0], [36.0, 1567.5], [39.0, 1569.0], [38.0, 1568.0], [40.0, 1565.0], [43.0, 1568.6666666666667], [45.0, 1571.0], [44.0, 1568.0], [47.0, 1570.0], [46.0, 1570.0], [49.0, 1569.0], [51.0, 1572.0], [52.0, 1569.0], [54.0, 1566.5], [56.0, 1570.0], [59.0, 1571.0], [60.0, 1558.0], [63.0, 1569.3333333333333], [66.0, 1575.0], [64.0, 1565.0], [71.0, 1578.0], [69.0, 1574.0], [68.0, 1571.0], [75.0, 1578.0], [74.0, 1572.0], [72.0, 1570.0], [79.0, 1569.0], [78.0, 1566.5], [76.0, 1572.0], [83.0, 1570.0], [80.0, 1572.0], [87.0, 1587.0], [84.0, 1600.0], [91.0, 1564.0], [90.0, 1601.0], [95.0, 1602.5], [93.0, 1568.0], [97.0, 1604.0], [96.0, 1610.0], [103.0, 1608.5], [102.0, 1608.6666666666667], [106.0, 1636.0], [105.0, 1605.0], [104.0, 1621.5], [110.0, 2480.0], [109.0, 1625.0], [108.0, 1605.0], [115.0, 2482.0], [113.0, 1623.0], [112.0, 2054.5], [119.0, 2071.5], [117.0, 2514.0], [123.0, 2491.0], [121.0, 2502.0], [127.0, 2489.0], [126.0, 2505.0], [124.0, 2505.0], [134.0, 2515.0], [133.0, 2520.5], [131.0, 2502.0], [130.0, 2505.6666666666665], [129.0, 2510.0], [142.0, 2513.0], [140.0, 2517.0], [139.0, 2519.5], [138.0, 2518.0], [136.0, 2517.0], [150.0, 2531.0], [148.0, 2526.0], [146.0, 2522.0], [144.0, 2520.3333333333335], [159.0, 2535.3333333333335], [156.0, 2523.0], [155.0, 2533.6666666666665], [152.0, 2541.0], [166.0, 2542.0], [164.0, 2540.0], [163.0, 2528.0], [162.0, 2524.5], [175.0, 2552.0], [172.0, 2551.5], [171.0, 2556.0], [169.0, 2516.0], [168.0, 2552.6666666666665], [183.0, 2554.5], [180.0, 2556.0], [179.0, 2556.0], [178.0, 2554.0], [177.0, 2550.0], [176.0, 2561.0], [190.0, 2561.25], [186.0, 2553.0], [185.0, 2550.0], [184.0, 2557.0], [199.0, 2567.5], [197.0, 2556.0], [196.0, 2562.0], [195.0, 2562.0], [194.0, 2557.0], [192.0, 2560.0], [205.0, 2569.5], [203.0, 2572.0], [202.0, 2579.0], [201.0, 2566.0], [214.0, 2582.0], [213.0, 2589.5], [211.0, 2568.0], [208.0, 2579.3333333333335], [223.0, 2579.0], [221.0, 2587.0], [219.0, 2598.0], [217.0, 2578.0], [216.0, 2572.5], [230.0, 2604.0], [229.0, 2586.0], [228.0, 2586.0], [227.0, 2607.0], [225.0, 2596.0], [238.0, 2606.0], [237.0, 2609.0], [235.0, 2600.6666666666665], [232.0, 2609.5], [246.0, 2612.5], [244.0, 2601.5], [242.0, 2614.0], [241.0, 2605.25], [254.0, 2626.0], [253.0, 2619.0], [251.0, 2622.0], [250.0, 2612.0], [248.0, 2618.0], [264.0, 2622.0], [270.0, 2632.6666666666665], [267.0, 2637.0], [266.0, 2629.6666666666665], [265.0, 2638.0], [263.0, 2622.0], [262.0, 2635.0], [259.0, 2629.0], [257.0, 2622.0], [256.0, 2619.5], [287.0, 3318.0], [286.0, 3091.6666666666665], [283.0, 3025.3333333333335], [280.0, 3323.0], [279.0, 2919.5], [277.0, 2646.5], [275.0, 2630.0], [274.0, 2632.5], [302.0, 3319.5], [303.0, 3323.0], [300.0, 3325.0], [299.0, 3329.0], [297.0, 3323.0], [296.0, 3319.6666666666665], [293.0, 3324.25], [289.0, 3314.0], [288.0, 3312.0], [319.0, 3342.0], [317.0, 3353.0], [316.0, 3328.0], [315.0, 3319.0], [313.0, 3329.25], [310.0, 3330.0], [304.0, 3318.0], [332.0, 3344.6666666666665], [334.0, 3335.0], [335.0, 3334.0], [333.0, 3346.0], [329.0, 3346.0], [328.0, 3343.5], [324.0, 3352.0], [321.0, 3339.5], [323.0, 3350.0], [322.0, 3343.0], [339.0, 3332.0], [350.0, 3441.0], [349.0, 3438.3333333333335], [346.0, 3436.0], [345.0, 3432.0], [343.0, 3428.0], [342.0, 3408.0], [341.0, 3359.0], [338.0, 3338.0], [337.0, 3341.0], [355.0, 3642.0], [366.0, 3459.0], [364.0, 3649.0], [363.0, 3598.0], [360.0, 3466.5], [358.0, 3462.0], [357.0, 3459.5], [354.0, 3456.0], [353.0, 3461.0], [352.0, 3457.0], [371.0, 3663.0], [382.0, 3672.0], [383.0, 3668.0], [381.0, 3667.5], [379.0, 3670.5], [377.0, 3661.0], [374.0, 3670.5], [373.0, 3669.0], [369.0, 3668.0], [368.0, 3596.6666666666665], [396.0, 3683.0], [395.0, 3684.0], [394.0, 3918.0], [393.0, 3684.0], [391.0, 4150.0], [390.0, 3688.0], [389.0, 3678.0], [388.0, 3687.0], [387.0, 3659.0], [386.0, 3675.0], [413.0, 4154.0], [415.0, 4147.5], [412.0, 4139.0], [411.0, 4151.0], [410.0, 4142.0], [409.0, 4147.0], [408.0, 4158.666666666667], [405.0, 4157.0], [400.0, 4154.25], [403.0, 3997.0], [430.0, 4141.0], [431.0, 4132.0], [428.0, 4150.0], [427.0, 4138.0], [425.0, 4152.0], [424.0, 4150.0], [423.0, 4144.666666666667], [420.0, 4141.0], [419.0, 4148.666666666667], [416.0, 4154.0], [444.0, 4109.0], [447.0, 4104.0], [446.0, 4099.0], [445.0, 4107.0], [441.0, 4104.0], [439.0, 4106.5], [437.0, 4111.0], [435.0, 4116.666666666667], [432.0, 4117.0], [451.0, 4094.0], [461.0, 4091.0], [462.0, 4084.0], [460.0, 4086.0], [458.0, 4080.0], [457.0, 4087.0], [455.0, 4087.0], [454.0, 4089.0], [453.0, 4089.5], [450.0, 4092.0], [449.0, 4101.0], [448.0, 4097.0], [477.0, 4071.0], [478.0, 4069.0], [476.0, 4075.0], [467.0, 4084.0], [466.0, 4095.0], [465.0, 4089.0], [464.0, 4085.5], [475.0, 4077.0], [474.0, 4075.0], [473.0, 4077.0], [472.0, 4077.0], [471.0, 4079.0], [470.0, 4077.0], [469.0, 4079.0], [468.0, 4085.0], [495.0, 4401.0], [493.0, 4223.0], [482.0, 4060.0], [481.0, 4064.3333333333335], [491.0, 4386.0], [490.0, 4140.0], [489.0, 4060.0], [488.0, 4061.0], [487.0, 4068.5], [485.0, 4064.0], [484.0, 4067.0], [509.0, 4431.5], [508.0, 4426.333333333333], [506.0, 4423.666666666667], [503.0, 4383.0], [501.0, 4407.25], [497.0, 4385.0], [540.0, 5042.0], [532.0, 4370.0], [542.0, 5047.0], [529.0, 4447.5], [531.0, 4452.0], [530.0, 4451.0], [539.0, 5047.0], [538.0, 5049.0], [536.0, 5053.0], [519.0, 4438.5], [517.0, 4440.0], [515.0, 4443.0], [513.0, 4435.0], [512.0, 4447.333333333333], [527.0, 4449.5], [526.0, 4447.0], [525.0, 4445.0], [524.0, 4416.0], [521.0, 4435.0], [535.0, 4356.0], [534.0, 4363.0], [533.0, 4365.0], [572.0, 4988.0], [575.0, 4987.666666666667], [569.0, 4995.0], [568.0, 4991.0], [565.0, 4996.0], [564.0, 4999.0], [563.0, 5005.0], [561.0, 5005.5], [559.0, 5051.0], [544.0, 5044.5], [547.0, 5040.0], [545.0, 5063.0], [550.0, 5043.5], [548.0, 5044.0], [558.0, 5045.5], [556.0, 5047.0], [553.0, 5057.0], [552.0, 5047.0], [604.0, 4997.0], [607.0, 4987.0], [595.0, 4993.0], [594.0, 4997.666666666667], [606.0, 4990.0], [605.0, 4989.0], [603.0, 4997.0], [602.0, 5000.0], [601.0, 5000.0], [600.0, 4997.0], [591.0, 5002.0], [579.0, 5012.0], [578.0, 4985.333333333333], [583.0, 5003.0], [582.0, 4999.333333333333], [590.0, 5007.0], [589.0, 5004.0], [588.0, 4999.666666666667], [585.0, 4986.0], [599.0, 4998.0], [597.0, 5000.0], [636.0, 4560.0], [639.0, 4551.0], [625.0, 4974.0], [624.0, 4979.0], [627.0, 4957.0], [626.0, 4961.0], [629.0, 4939.0], [628.0, 4959.0], [638.0, 4542.0], [637.0, 4542.0], [635.0, 4564.0], [634.0, 4594.0], [633.0, 4610.0], [632.0, 4641.0], [621.0, 4981.0], [608.0, 4988.0], [610.0, 4983.0], [609.0, 4985.0], [613.0, 4990.0], [611.0, 4982.0], [615.0, 4989.0], [614.0, 4988.0], [619.0, 4984.0], [618.0, 4986.0], [617.0, 4967.5], [631.0, 4813.0], [630.0, 4907.0], [645.0, 4542.0], [669.0, 4532.0], [671.0, 4535.0], [665.0, 4524.666666666667], [647.0, 4531.0], [646.0, 4550.0], [644.0, 4543.0], [643.0, 4552.5], [641.0, 4540.0], [640.0, 4542.0], [662.0, 4520.666666666667], [659.0, 4524.5], [657.0, 4526.0], [656.0, 4522.0], [654.0, 4529.0], [653.0, 4531.0], [652.0, 4536.0], [651.0, 4537.0], [650.0, 4527.0], [649.0, 4532.0], [648.0, 4536.0], [691.0, 5596.5], [700.0, 5594.0], [698.0, 5590.0], [697.0, 5596.0], [678.0, 4544.0], [676.0, 4557.0], [675.0, 4540.0], [673.0, 4544.0], [672.0, 4532.0], [695.0, 5592.0], [694.0, 5590.333333333333], [693.0, 5581.0], [688.0, 4556.0], [687.0, 4552.333333333333], [684.0, 4547.0], [683.0, 4554.333333333333], [680.0, 4558.5], [1.0, 798.0]], "isOverall": false, "label": "Delete", "isController": false}, {"data": [[351.2142857142856, 3415.63]], "isOverall": false, "label": "Delete-Aggregated", "isController": false}, {"data": [[513.0, 5269.0], [553.0, 5897.0], [559.0, 3951.0], [564.0, 4253.0], [577.0, 4348.0], [581.0, 7591.0], [626.0, 4971.0], [630.0, 6428.0], [645.0, 5232.0], [646.0, 8644.0], [651.0, 6009.0], [652.0, 5449.0], [653.0, 8895.0], [660.0, 5908.0], [668.0, 6124.0], [670.0, 8647.0], [675.0, 8137.0], [673.0, 6491.333333333333], [677.0, 5760.0], [696.0, 6526.0], [697.0, 5390.8], [698.0, 7865.0], [699.0, 6370.8], [700.0, 6100.941314553993], [680.0, 8052.0], [682.0, 6877.5], [684.0, 6971.0], [685.0, 8036.666666666667], [694.0, 6703.666666666667], [695.0, 6288.0], [376.0, 3954.0], [412.0, 4681.0], [414.0, 5596.0], [403.0, 3494.0], [430.0, 3591.0], [425.0, 4670.0], [429.0, 5853.0], [439.0, 6305.0], [465.0, 3124.0], [475.0, 5595.0], [477.0, 5344.818181818182], [478.0, 5210.514450867053], [480.0, 6528.0], [483.0, 5039.0], [486.0, 5832.3], [499.0, 4878.0], [507.0, 4419.0]], "isOverall": false, "label": "Create", "isController": false}, {"data": [[625.504285714285, 5851.072857142858]], "isOverall": false, "label": "Create-Aggregated", "isController": false}, {"data": [[700.0, 5180.615714285712]], "isOverall": false, "label": "Get", "isController": false}, {"data": [[700.0, 5180.615714285712]], "isOverall": false, "label": "Get-Aggregated", "isController": false}, {"data": [[700.0, 447.76285714285746]], "isOverall": false, "label": "Auth", "isController": false}, {"data": [[700.0, 447.76285714285746]], "isOverall": false, "label": "Auth-Aggregated", "isController": false}, {"data": [[536.0, 5025.0], [535.0, 4773.8], [569.0, 4993.0], [556.0, 5053.0], [550.0, 5055.0], [545.0, 5051.0], [602.0, 5000.0], [700.0, 8300.864379084966], [692.0, 5395.0], [688.0, 5170.166666666666], [687.0, 4836.0], [684.0, 4644.0], [673.0, 4542.0]], "isOverall": false, "label": "Update", "isController": false}, {"data": [[696.0714285714284, 7901.278571428569]], "isOverall": false, "label": "Update-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 700.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 8478.666666666666, "minX": 1.64797356E12, "maxY": 11458.066666666668, "series": [{"data": [[1.64797356E12, 9413.6], [1.64797362E12, 11458.066666666668]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.64797356E12, 8478.666666666666], [1.64797362E12, 11203.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64797362E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 401.1450617283952, "minX": 1.64797356E12, "maxY": 7901.278571428569, "series": [{"data": [[1.64797362E12, 3415.63]], "isOverall": false, "label": "Delete", "isController": false}, {"data": [[1.64797356E12, 5839.382183908047], [1.64797362E12, 7885.25]], "isOverall": false, "label": "Create", "isController": false}, {"data": [[1.64797356E12, 5244.888297872343], [1.64797362E12, 5106.027777777781]], "isOverall": false, "label": "Get", "isController": false}, {"data": [[1.64797356E12, 487.93351063829823], [1.64797362E12, 401.1450617283952]], "isOverall": false, "label": "Auth", "isController": false}, {"data": [[1.64797362E12, 7901.278571428569]], "isOverall": false, "label": "Update", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64797362E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 401.13271604938285, "minX": 1.64797356E12, "maxY": 7901.258571428566, "series": [{"data": [[1.64797362E12, 3415.612857142854]], "isOverall": false, "label": "Delete", "isController": false}, {"data": [[1.64797356E12, 5839.317528735629], [1.64797362E12, 7885.0]], "isOverall": false, "label": "Create", "isController": false}, {"data": [[1.64797356E12, 5244.861702127659], [1.64797362E12, 5106.009259259257]], "isOverall": false, "label": "Get", "isController": false}, {"data": [[1.64797356E12, 487.8936170212765], [1.64797362E12, 401.13271604938285]], "isOverall": false, "label": "Auth", "isController": false}, {"data": [[1.64797362E12, 7901.258571428566]], "isOverall": false, "label": "Update", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64797362E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.64797356E12, "maxY": 2086.4655172413813, "series": [{"data": [[1.64797362E12, 0.0]], "isOverall": false, "label": "Delete", "isController": false}, {"data": [[1.64797356E12, 2086.4655172413813], [1.64797362E12, 1075.0]], "isOverall": false, "label": "Create", "isController": false}, {"data": [[1.64797356E12, 0.0], [1.64797362E12, 0.0]], "isOverall": false, "label": "Get", "isController": false}, {"data": [[1.64797356E12, 0.0], [1.64797362E12, 0.0]], "isOverall": false, "label": "Auth", "isController": false}, {"data": [[1.64797362E12, 0.0]], "isOverall": false, "label": "Update", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64797362E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 279.0, "minX": 1.64797356E12, "maxY": 11639.0, "series": [{"data": [[1.64797356E12, 9955.0], [1.64797362E12, 11639.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.64797356E12, 6826.1], [1.64797362E12, 9339.7]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.64797356E12, 8834.24], [1.64797362E12, 10685.500000000002]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.64797356E12, 6992.65], [1.64797362E12, 10194.35]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.64797356E12, 285.0], [1.64797362E12, 279.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.64797356E12, 4864.0], [1.64797362E12, 4537.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64797362E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 356.0, "minX": 5.0, "maxY": 10195.0, "series": [{"data": [[143.0, 9118.0], [148.0, 494.5], [159.0, 5247.0], [160.0, 4530.5], [170.0, 7232.0], [179.0, 10195.0], [215.0, 5348.0], [227.0, 682.0], [250.0, 4541.0], [257.0, 487.0], [78.0, 3250.0], [305.0, 6197.0], [5.0, 4678.5], [80.0, 4196.0], [89.0, 6080.0], [24.0, 6065.5], [103.0, 386.0], [106.0, 5033.5], [439.0, 2586.0], [7.0, 5596.0], [115.0, 356.0], [113.0, 7960.0], [123.0, 5152.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 439.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 356.0, "minX": 5.0, "maxY": 10195.0, "series": [{"data": [[143.0, 9118.0], [148.0, 494.5], [159.0, 5247.0], [160.0, 4530.5], [170.0, 7232.0], [179.0, 10195.0], [215.0, 5348.0], [227.0, 682.0], [250.0, 4541.0], [257.0, 487.0], [78.0, 3250.0], [305.0, 6197.0], [5.0, 4678.5], [80.0, 4196.0], [89.0, 6080.0], [24.0, 6065.5], [103.0, 386.0], [106.0, 5033.5], [439.0, 2586.0], [7.0, 5596.0], [115.0, 356.0], [113.0, 7960.0], [123.0, 5152.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 439.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 22.533333333333335, "minX": 1.64797356E12, "maxY": 35.8, "series": [{"data": [[1.64797356E12, 35.8], [1.64797362E12, 22.533333333333335]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64797362E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 11.666666666666666, "minX": 1.64797356E12, "maxY": 24.133333333333333, "series": [{"data": [[1.64797356E12, 24.133333333333333], [1.64797362E12, 22.533333333333335]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.64797362E12, 11.666666666666666]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64797362E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.64797356E12, "maxY": 11.666666666666666, "series": [{"data": [[1.64797356E12, 11.6], [1.64797362E12, 0.06666666666666667]], "isOverall": false, "label": "Create-success", "isController": false}, {"data": [[1.64797356E12, 6.266666666666667], [1.64797362E12, 5.4]], "isOverall": false, "label": "Auth-success", "isController": false}, {"data": [[1.64797362E12, 11.666666666666666]], "isOverall": false, "label": "Delete-success", "isController": false}, {"data": [[1.64797362E12, 11.666666666666666]], "isOverall": false, "label": "Update-success", "isController": false}, {"data": [[1.64797356E12, 6.266666666666667], [1.64797362E12, 5.4]], "isOverall": false, "label": "Get-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64797362E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 24.133333333333333, "minX": 1.64797356E12, "maxY": 34.2, "series": [{"data": [[1.64797356E12, 24.133333333333333], [1.64797362E12, 34.2]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64797362E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

