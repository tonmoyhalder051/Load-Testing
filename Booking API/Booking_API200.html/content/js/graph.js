/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 279.0, "minX": 0.0, "maxY": 4657.0, "series": [{"data": [[0.0, 280.0], [0.1, 280.0], [0.2, 280.0], [0.3, 280.0], [0.4, 280.0], [0.5, 281.0], [0.6, 281.0], [0.7, 281.0], [0.8, 281.0], [0.9, 281.0], [1.0, 281.0], [1.1, 281.0], [1.2, 281.0], [1.3, 281.0], [1.4, 281.0], [1.5, 283.0], [1.6, 283.0], [1.7, 283.0], [1.8, 283.0], [1.9, 283.0], [2.0, 283.0], [2.1, 283.0], [2.2, 283.0], [2.3, 283.0], [2.4, 283.0], [2.5, 283.0], [2.6, 283.0], [2.7, 283.0], [2.8, 283.0], [2.9, 283.0], [3.0, 284.0], [3.1, 284.0], [3.2, 284.0], [3.3, 284.0], [3.4, 284.0], [3.5, 284.0], [3.6, 284.0], [3.7, 284.0], [3.8, 284.0], [3.9, 284.0], [4.0, 286.0], [4.1, 286.0], [4.2, 286.0], [4.3, 286.0], [4.4, 286.0], [4.5, 286.0], [4.6, 286.0], [4.7, 286.0], [4.8, 286.0], [4.9, 286.0], [5.0, 287.0], [5.1, 287.0], [5.2, 287.0], [5.3, 287.0], [5.4, 287.0], [5.5, 287.0], [5.6, 287.0], [5.7, 287.0], [5.8, 287.0], [5.9, 287.0], [6.0, 288.0], [6.1, 288.0], [6.2, 288.0], [6.3, 288.0], [6.4, 288.0], [6.5, 288.0], [6.6, 288.0], [6.7, 288.0], [6.8, 288.0], [6.9, 288.0], [7.0, 288.0], [7.1, 288.0], [7.2, 288.0], [7.3, 288.0], [7.4, 288.0], [7.5, 289.0], [7.6, 289.0], [7.7, 289.0], [7.8, 289.0], [7.9, 289.0], [8.0, 289.0], [8.1, 289.0], [8.2, 289.0], [8.3, 289.0], [8.4, 289.0], [8.5, 289.0], [8.6, 289.0], [8.7, 289.0], [8.8, 289.0], [8.9, 289.0], [9.0, 290.0], [9.1, 290.0], [9.2, 290.0], [9.3, 290.0], [9.4, 290.0], [9.5, 290.0], [9.6, 290.0], [9.7, 290.0], [9.8, 290.0], [9.9, 290.0], [10.0, 290.0], [10.1, 290.0], [10.2, 290.0], [10.3, 290.0], [10.4, 290.0], [10.5, 291.0], [10.6, 291.0], [10.7, 291.0], [10.8, 291.0], [10.9, 291.0], [11.0, 291.0], [11.1, 291.0], [11.2, 291.0], [11.3, 291.0], [11.4, 291.0], [11.5, 291.0], [11.6, 291.0], [11.7, 291.0], [11.8, 291.0], [11.9, 291.0], [12.0, 291.0], [12.1, 291.0], [12.2, 291.0], [12.3, 291.0], [12.4, 291.0], [12.5, 292.0], [12.6, 292.0], [12.7, 292.0], [12.8, 292.0], [12.9, 292.0], [13.0, 292.0], [13.1, 292.0], [13.2, 292.0], [13.3, 292.0], [13.4, 292.0], [13.5, 293.0], [13.6, 293.0], [13.7, 293.0], [13.8, 293.0], [13.9, 293.0], [14.0, 293.0], [14.1, 293.0], [14.2, 293.0], [14.3, 293.0], [14.4, 293.0], [14.5, 293.0], [14.6, 293.0], [14.7, 293.0], [14.8, 293.0], [14.9, 293.0], [15.0, 294.0], [15.1, 294.0], [15.2, 294.0], [15.3, 294.0], [15.4, 294.0], [15.5, 294.0], [15.6, 294.0], [15.7, 294.0], [15.8, 294.0], [15.9, 294.0], [16.0, 294.0], [16.1, 294.0], [16.2, 294.0], [16.3, 294.0], [16.4, 294.0], [16.5, 294.0], [16.6, 294.0], [16.7, 294.0], [16.8, 294.0], [16.9, 294.0], [17.0, 294.0], [17.1, 294.0], [17.2, 294.0], [17.3, 294.0], [17.4, 294.0], [17.5, 295.0], [17.6, 295.0], [17.7, 295.0], [17.8, 295.0], [17.9, 295.0], [18.0, 295.0], [18.1, 295.0], [18.2, 295.0], [18.3, 295.0], [18.4, 295.0], [18.5, 296.0], [18.6, 296.0], [18.7, 296.0], [18.8, 296.0], [18.9, 296.0], [19.0, 297.0], [19.1, 297.0], [19.2, 297.0], [19.3, 297.0], [19.4, 297.0], [19.5, 297.0], [19.6, 297.0], [19.7, 297.0], [19.8, 297.0], [19.9, 297.0], [20.0, 299.0], [20.1, 299.0], [20.2, 299.0], [20.3, 299.0], [20.4, 299.0], [20.5, 300.0], [20.6, 300.0], [20.7, 300.0], [20.8, 300.0], [20.9, 300.0], [21.0, 301.0], [21.1, 301.0], [21.2, 301.0], [21.3, 301.0], [21.4, 301.0], [21.5, 303.0], [21.6, 303.0], [21.7, 303.0], [21.8, 303.0], [21.9, 303.0], [22.0, 304.0], [22.1, 304.0], [22.2, 304.0], [22.3, 304.0], [22.4, 304.0], [22.5, 306.0], [22.6, 306.0], [22.7, 306.0], [22.8, 306.0], [22.9, 306.0], [23.0, 316.0], [23.1, 316.0], [23.2, 316.0], [23.3, 316.0], [23.4, 316.0], [23.5, 320.0], [23.6, 320.0], [23.7, 320.0], [23.8, 320.0], [23.9, 320.0], [24.0, 321.0], [24.1, 321.0], [24.2, 321.0], [24.3, 321.0], [24.4, 321.0], [24.5, 321.0], [24.6, 321.0], [24.7, 321.0], [24.8, 321.0], [24.9, 321.0], [25.0, 324.0], [25.1, 324.0], [25.2, 324.0], [25.3, 324.0], [25.4, 324.0], [25.5, 326.0], [25.6, 326.0], [25.7, 326.0], [25.8, 326.0], [25.9, 326.0], [26.0, 326.0], [26.1, 326.0], [26.2, 326.0], [26.3, 326.0], [26.4, 326.0], [26.5, 329.0], [26.6, 329.0], [26.7, 329.0], [26.8, 329.0], [26.9, 329.0], [27.0, 329.0], [27.1, 329.0], [27.2, 329.0], [27.3, 329.0], [27.4, 329.0], [27.5, 329.0], [27.6, 329.0], [27.7, 329.0], [27.8, 329.0], [27.9, 329.0], [28.0, 329.0], [28.1, 329.0], [28.2, 329.0], [28.3, 329.0], [28.4, 329.0], [28.5, 330.0], [28.6, 330.0], [28.7, 330.0], [28.8, 330.0], [28.9, 330.0], [29.0, 331.0], [29.1, 331.0], [29.2, 331.0], [29.3, 331.0], [29.4, 331.0], [29.5, 331.0], [29.6, 331.0], [29.7, 331.0], [29.8, 331.0], [29.9, 331.0], [30.0, 331.0], [30.1, 331.0], [30.2, 331.0], [30.3, 331.0], [30.4, 331.0], [30.5, 331.0], [30.6, 331.0], [30.7, 331.0], [30.8, 331.0], [30.9, 331.0], [31.0, 332.0], [31.1, 332.0], [31.2, 332.0], [31.3, 332.0], [31.4, 332.0], [31.5, 332.0], [31.6, 332.0], [31.7, 332.0], [31.8, 332.0], [31.9, 332.0], [32.0, 335.0], [32.1, 335.0], [32.2, 335.0], [32.3, 335.0], [32.4, 335.0], [32.5, 335.0], [32.6, 335.0], [32.7, 335.0], [32.8, 335.0], [32.9, 335.0], [33.0, 337.0], [33.1, 337.0], [33.2, 337.0], [33.3, 337.0], [33.4, 337.0], [33.5, 337.0], [33.6, 337.0], [33.7, 337.0], [33.8, 337.0], [33.9, 337.0], [34.0, 338.0], [34.1, 338.0], [34.2, 338.0], [34.3, 338.0], [34.4, 338.0], [34.5, 339.0], [34.6, 339.0], [34.7, 339.0], [34.8, 339.0], [34.9, 339.0], [35.0, 349.0], [35.1, 349.0], [35.2, 349.0], [35.3, 349.0], [35.4, 349.0], [35.5, 352.0], [35.6, 352.0], [35.7, 352.0], [35.8, 352.0], [35.9, 352.0], [36.0, 359.0], [36.1, 359.0], [36.2, 359.0], [36.3, 359.0], [36.4, 359.0], [36.5, 389.0], [36.6, 389.0], [36.7, 389.0], [36.8, 389.0], [36.9, 389.0], [37.0, 407.0], [37.1, 407.0], [37.2, 407.0], [37.3, 407.0], [37.4, 407.0], [37.5, 530.0], [37.6, 530.0], [37.7, 530.0], [37.8, 530.0], [37.9, 530.0], [38.0, 544.0], [38.1, 544.0], [38.2, 544.0], [38.3, 544.0], [38.4, 544.0], [38.5, 550.0], [38.6, 550.0], [38.7, 550.0], [38.8, 550.0], [38.9, 550.0], [39.0, 576.0], [39.1, 576.0], [39.2, 576.0], [39.3, 576.0], [39.4, 576.0], [39.5, 591.0], [39.6, 591.0], [39.7, 591.0], [39.8, 591.0], [39.9, 591.0], [40.0, 612.0], [40.1, 612.0], [40.2, 612.0], [40.3, 612.0], [40.4, 612.0], [40.5, 679.0], [40.6, 679.0], [40.7, 679.0], [40.8, 679.0], [40.9, 679.0], [41.0, 701.0], [41.1, 701.0], [41.2, 701.0], [41.3, 701.0], [41.4, 701.0], [41.5, 702.0], [41.6, 702.0], [41.7, 702.0], [41.8, 702.0], [41.9, 702.0], [42.0, 703.0], [42.1, 703.0], [42.2, 703.0], [42.3, 703.0], [42.4, 703.0], [42.5, 703.0], [42.6, 703.0], [42.7, 703.0], [42.8, 703.0], [42.9, 703.0], [43.0, 703.0], [43.1, 703.0], [43.2, 703.0], [43.3, 703.0], [43.4, 703.0], [43.5, 703.0], [43.6, 703.0], [43.7, 703.0], [43.8, 703.0], [43.9, 703.0], [44.0, 703.0], [44.1, 703.0], [44.2, 703.0], [44.3, 703.0], [44.4, 703.0], [44.5, 704.0], [44.6, 704.0], [44.7, 704.0], [44.8, 704.0], [44.9, 704.0], [45.0, 704.0], [45.1, 704.0], [45.2, 704.0], [45.3, 704.0], [45.4, 704.0], [45.5, 705.0], [45.6, 705.0], [45.7, 705.0], [45.8, 705.0], [45.9, 705.0], [46.0, 705.0], [46.1, 705.0], [46.2, 705.0], [46.3, 705.0], [46.4, 705.0], [46.5, 706.0], [46.6, 706.0], [46.7, 706.0], [46.8, 706.0], [46.9, 706.0], [47.0, 707.0], [47.1, 707.0], [47.2, 707.0], [47.3, 707.0], [47.4, 707.0], [47.5, 707.0], [47.6, 707.0], [47.7, 707.0], [47.8, 707.0], [47.9, 707.0], [48.0, 708.0], [48.1, 708.0], [48.2, 708.0], [48.3, 708.0], [48.4, 708.0], [48.5, 708.0], [48.6, 708.0], [48.7, 708.0], [48.8, 708.0], [48.9, 708.0], [49.0, 708.0], [49.1, 708.0], [49.2, 708.0], [49.3, 708.0], [49.4, 708.0], [49.5, 709.0], [49.6, 709.0], [49.7, 709.0], [49.8, 709.0], [49.9, 709.0], [50.0, 709.0], [50.1, 709.0], [50.2, 709.0], [50.3, 709.0], [50.4, 709.0], [50.5, 709.0], [50.6, 709.0], [50.7, 709.0], [50.8, 709.0], [50.9, 709.0], [51.0, 709.0], [51.1, 709.0], [51.2, 709.0], [51.3, 709.0], [51.4, 709.0], [51.5, 710.0], [51.6, 710.0], [51.7, 710.0], [51.8, 710.0], [51.9, 710.0], [52.0, 711.0], [52.1, 711.0], [52.2, 711.0], [52.3, 711.0], [52.4, 711.0], [52.5, 711.0], [52.6, 711.0], [52.7, 711.0], [52.8, 711.0], [52.9, 711.0], [53.0, 712.0], [53.1, 712.0], [53.2, 712.0], [53.3, 712.0], [53.4, 712.0], [53.5, 712.0], [53.6, 712.0], [53.7, 712.0], [53.8, 712.0], [53.9, 712.0], [54.0, 713.0], [54.1, 713.0], [54.2, 713.0], [54.3, 713.0], [54.4, 713.0], [54.5, 714.0], [54.6, 714.0], [54.7, 714.0], [54.8, 714.0], [54.9, 714.0], [55.0, 715.0], [55.1, 715.0], [55.2, 715.0], [55.3, 715.0], [55.4, 715.0], [55.5, 718.0], [55.6, 718.0], [55.7, 718.0], [55.8, 718.0], [55.9, 718.0], [56.0, 720.0], [56.1, 720.0], [56.2, 720.0], [56.3, 720.0], [56.4, 720.0], [56.5, 720.0], [56.6, 720.0], [56.7, 720.0], [56.8, 720.0], [56.9, 720.0], [57.0, 720.0], [57.1, 720.0], [57.2, 720.0], [57.3, 720.0], [57.4, 720.0], [57.5, 722.0], [57.6, 722.0], [57.7, 722.0], [57.8, 722.0], [57.9, 722.0], [58.0, 722.0], [58.1, 722.0], [58.2, 722.0], [58.3, 722.0], [58.4, 722.0], [58.5, 723.0], [58.6, 723.0], [58.7, 723.0], [58.8, 723.0], [58.9, 723.0], [59.0, 723.0], [59.1, 723.0], [59.2, 723.0], [59.3, 723.0], [59.4, 723.0], [59.5, 723.0], [59.6, 723.0], [59.7, 723.0], [59.8, 723.0], [59.9, 723.0], [60.0, 723.0], [60.1, 723.0], [60.2, 723.0], [60.3, 723.0], [60.4, 723.0], [60.5, 724.0], [60.6, 724.0], [60.7, 724.0], [60.8, 724.0], [60.9, 724.0], [61.0, 743.0], [61.1, 743.0], [61.2, 743.0], [61.3, 743.0], [61.4, 743.0], [61.5, 768.0], [61.6, 768.0], [61.7, 768.0], [61.8, 768.0], [61.9, 768.0], [62.0, 773.0], [62.1, 773.0], [62.2, 773.0], [62.3, 773.0], [62.4, 773.0], [62.5, 869.0], [62.6, 869.0], [62.7, 869.0], [62.8, 869.0], [62.9, 869.0], [63.0, 872.0], [63.1, 872.0], [63.2, 872.0], [63.3, 872.0], [63.4, 872.0], [63.5, 873.0], [63.6, 873.0], [63.7, 873.0], [63.8, 873.0], [63.9, 873.0], [64.0, 874.0], [64.1, 874.0], [64.2, 874.0], [64.3, 874.0], [64.4, 874.0], [64.5, 875.0], [64.6, 875.0], [64.7, 875.0], [64.8, 875.0], [64.9, 875.0], [65.0, 875.0], [65.1, 875.0], [65.2, 875.0], [65.3, 875.0], [65.4, 875.0], [65.5, 877.0], [65.6, 877.0], [65.7, 877.0], [65.8, 877.0], [65.9, 877.0], [66.0, 877.0], [66.1, 877.0], [66.2, 877.0], [66.3, 877.0], [66.4, 877.0], [66.5, 877.0], [66.6, 877.0], [66.7, 877.0], [66.8, 877.0], [66.9, 877.0], [67.0, 878.0], [67.1, 878.0], [67.2, 878.0], [67.3, 878.0], [67.4, 878.0], [67.5, 878.0], [67.6, 878.0], [67.7, 878.0], [67.8, 878.0], [67.9, 878.0], [68.0, 879.0], [68.1, 879.0], [68.2, 879.0], [68.3, 879.0], [68.4, 879.0], [68.5, 879.0], [68.6, 879.0], [68.7, 879.0], [68.8, 879.0], [68.9, 879.0], [69.0, 881.0], [69.1, 881.0], [69.2, 881.0], [69.3, 881.0], [69.4, 881.0], [69.5, 881.0], [69.6, 881.0], [69.7, 881.0], [69.8, 881.0], [69.9, 881.0], [70.0, 881.0], [70.1, 881.0], [70.2, 881.0], [70.3, 881.0], [70.4, 881.0], [70.5, 881.0], [70.6, 881.0], [70.7, 881.0], [70.8, 881.0], [70.9, 881.0], [71.0, 882.0], [71.1, 882.0], [71.2, 882.0], [71.3, 882.0], [71.4, 882.0], [71.5, 882.0], [71.6, 882.0], [71.7, 882.0], [71.8, 882.0], [71.9, 882.0], [72.0, 882.0], [72.1, 882.0], [72.2, 882.0], [72.3, 882.0], [72.4, 882.0], [72.5, 884.0], [72.6, 884.0], [72.7, 884.0], [72.8, 884.0], [72.9, 884.0], [73.0, 884.0], [73.1, 884.0], [73.2, 884.0], [73.3, 884.0], [73.4, 884.0], [73.5, 885.0], [73.6, 885.0], [73.7, 885.0], [73.8, 885.0], [73.9, 885.0], [74.0, 886.0], [74.1, 886.0], [74.2, 886.0], [74.3, 886.0], [74.4, 886.0], [74.5, 886.0], [74.6, 886.0], [74.7, 886.0], [74.8, 886.0], [74.9, 886.0], [75.0, 887.0], [75.1, 887.0], [75.2, 887.0], [75.3, 887.0], [75.4, 887.0], [75.5, 888.0], [75.6, 888.0], [75.7, 888.0], [75.8, 888.0], [75.9, 888.0], [76.0, 891.0], [76.1, 891.0], [76.2, 891.0], [76.3, 891.0], [76.4, 891.0], [76.5, 891.0], [76.6, 891.0], [76.7, 891.0], [76.8, 891.0], [76.9, 891.0], [77.0, 891.0], [77.1, 891.0], [77.2, 891.0], [77.3, 891.0], [77.4, 891.0], [77.5, 892.0], [77.6, 892.0], [77.7, 892.0], [77.8, 892.0], [77.9, 892.0], [78.0, 892.0], [78.1, 892.0], [78.2, 892.0], [78.3, 892.0], [78.4, 892.0], [78.5, 893.0], [78.6, 893.0], [78.7, 893.0], [78.8, 893.0], [78.9, 893.0], [79.0, 894.0], [79.1, 894.0], [79.2, 894.0], [79.3, 894.0], [79.4, 894.0], [79.5, 896.0], [79.6, 896.0], [79.7, 896.0], [79.8, 896.0], [79.9, 896.0], [80.0, 896.0], [80.1, 896.0], [80.2, 896.0], [80.3, 896.0], [80.4, 896.0], [80.5, 896.0], [80.6, 896.0], [80.7, 896.0], [80.8, 896.0], [80.9, 896.0], [81.0, 897.0], [81.1, 897.0], [81.2, 897.0], [81.3, 897.0], [81.4, 897.0], [81.5, 898.0], [81.6, 898.0], [81.7, 898.0], [81.8, 898.0], [81.9, 898.0], [82.0, 900.0], [82.1, 900.0], [82.2, 900.0], [82.3, 900.0], [82.4, 900.0], [82.5, 901.0], [82.6, 901.0], [82.7, 901.0], [82.8, 901.0], [82.9, 901.0], [83.0, 902.0], [83.1, 902.0], [83.2, 902.0], [83.3, 902.0], [83.4, 902.0], [83.5, 904.0], [83.6, 904.0], [83.7, 904.0], [83.8, 904.0], [83.9, 904.0], [84.0, 904.0], [84.1, 904.0], [84.2, 904.0], [84.3, 904.0], [84.4, 904.0], [84.5, 904.0], [84.6, 904.0], [84.7, 904.0], [84.8, 904.0], [84.9, 904.0], [85.0, 905.0], [85.1, 905.0], [85.2, 905.0], [85.3, 905.0], [85.4, 905.0], [85.5, 905.0], [85.6, 905.0], [85.7, 905.0], [85.8, 905.0], [85.9, 905.0], [86.0, 908.0], [86.1, 908.0], [86.2, 908.0], [86.3, 908.0], [86.4, 908.0], [86.5, 909.0], [86.6, 909.0], [86.7, 909.0], [86.8, 909.0], [86.9, 909.0], [87.0, 909.0], [87.1, 909.0], [87.2, 909.0], [87.3, 909.0], [87.4, 909.0], [87.5, 909.0], [87.6, 909.0], [87.7, 909.0], [87.8, 909.0], [87.9, 909.0], [88.0, 911.0], [88.1, 911.0], [88.2, 911.0], [88.3, 911.0], [88.4, 911.0], [88.5, 911.0], [88.6, 911.0], [88.7, 911.0], [88.8, 911.0], [88.9, 911.0], [89.0, 912.0], [89.1, 912.0], [89.2, 912.0], [89.3, 912.0], [89.4, 912.0], [89.5, 913.0], [89.6, 913.0], [89.7, 913.0], [89.8, 913.0], [89.9, 913.0], [90.0, 913.0], [90.1, 913.0], [90.2, 913.0], [90.3, 913.0], [90.4, 913.0], [90.5, 914.0], [90.6, 914.0], [90.7, 914.0], [90.8, 914.0], [90.9, 914.0], [91.0, 915.0], [91.1, 915.0], [91.2, 915.0], [91.3, 915.0], [91.4, 915.0], [91.5, 915.0], [91.6, 915.0], [91.7, 915.0], [91.8, 915.0], [91.9, 915.0], [92.0, 915.0], [92.1, 915.0], [92.2, 915.0], [92.3, 915.0], [92.4, 915.0], [92.5, 916.0], [92.6, 916.0], [92.7, 916.0], [92.8, 916.0], [92.9, 916.0], [93.0, 916.0], [93.1, 916.0], [93.2, 916.0], [93.3, 916.0], [93.4, 916.0], [93.5, 917.0], [93.6, 917.0], [93.7, 917.0], [93.8, 917.0], [93.9, 917.0], [94.0, 920.0], [94.1, 920.0], [94.2, 920.0], [94.3, 920.0], [94.4, 920.0], [94.5, 922.0], [94.6, 922.0], [94.7, 922.0], [94.8, 922.0], [94.9, 922.0], [95.0, 923.0], [95.1, 923.0], [95.2, 923.0], [95.3, 923.0], [95.4, 923.0], [95.5, 925.0], [95.6, 925.0], [95.7, 925.0], [95.8, 925.0], [95.9, 925.0], [96.0, 925.0], [96.1, 925.0], [96.2, 925.0], [96.3, 925.0], [96.4, 925.0], [96.5, 938.0], [96.6, 938.0], [96.7, 938.0], [96.8, 938.0], [96.9, 938.0], [97.0, 952.0], [97.1, 952.0], [97.2, 952.0], [97.3, 952.0], [97.4, 952.0], [97.5, 1059.0], [97.6, 1059.0], [97.7, 1059.0], [97.8, 1059.0], [97.9, 1059.0], [98.0, 1068.0], [98.1, 1068.0], [98.2, 1068.0], [98.3, 1068.0], [98.4, 1068.0], [98.5, 1073.0], [98.6, 1073.0], [98.7, 1073.0], [98.8, 1073.0], [98.9, 1073.0], [99.0, 1102.0], [99.1, 1102.0], [99.2, 1102.0], [99.3, 1102.0], [99.4, 1102.0], [99.5, 1600.0], [99.6, 1600.0], [99.7, 1600.0], [99.8, 1600.0], [99.9, 1600.0]], "isOverall": false, "label": "Delete", "isController": false}, {"data": [[0.0, 1120.0], [0.1, 1120.0], [0.2, 1120.0], [0.3, 1120.0], [0.4, 1120.0], [0.5, 1125.0], [0.6, 1125.0], [0.7, 1125.0], [0.8, 1125.0], [0.9, 1125.0], [1.0, 1125.0], [1.1, 1125.0], [1.2, 1125.0], [1.3, 1125.0], [1.4, 1125.0], [1.5, 1126.0], [1.6, 1126.0], [1.7, 1126.0], [1.8, 1126.0], [1.9, 1126.0], [2.0, 1126.0], [2.1, 1126.0], [2.2, 1126.0], [2.3, 1126.0], [2.4, 1126.0], [2.5, 1127.0], [2.6, 1127.0], [2.7, 1127.0], [2.8, 1127.0], [2.9, 1127.0], [3.0, 1129.0], [3.1, 1129.0], [3.2, 1129.0], [3.3, 1129.0], [3.4, 1129.0], [3.5, 1133.0], [3.6, 1133.0], [3.7, 1133.0], [3.8, 1133.0], [3.9, 1133.0], [4.0, 1135.0], [4.1, 1135.0], [4.2, 1135.0], [4.3, 1135.0], [4.4, 1135.0], [4.5, 1137.0], [4.6, 1137.0], [4.7, 1137.0], [4.8, 1137.0], [4.9, 1137.0], [5.0, 1137.0], [5.1, 1137.0], [5.2, 1137.0], [5.3, 1137.0], [5.4, 1137.0], [5.5, 1138.0], [5.6, 1138.0], [5.7, 1138.0], [5.8, 1138.0], [5.9, 1138.0], [6.0, 1138.0], [6.1, 1138.0], [6.2, 1138.0], [6.3, 1138.0], [6.4, 1138.0], [6.5, 1139.0], [6.6, 1139.0], [6.7, 1139.0], [6.8, 1139.0], [6.9, 1139.0], [7.0, 1141.0], [7.1, 1141.0], [7.2, 1141.0], [7.3, 1141.0], [7.4, 1141.0], [7.5, 1141.0], [7.6, 1141.0], [7.7, 1141.0], [7.8, 1141.0], [7.9, 1141.0], [8.0, 1143.0], [8.1, 1143.0], [8.2, 1143.0], [8.3, 1143.0], [8.4, 1143.0], [8.5, 1145.0], [8.6, 1145.0], [8.7, 1145.0], [8.8, 1145.0], [8.9, 1145.0], [9.0, 1147.0], [9.1, 1147.0], [9.2, 1147.0], [9.3, 1147.0], [9.4, 1147.0], [9.5, 1148.0], [9.6, 1148.0], [9.7, 1148.0], [9.8, 1148.0], [9.9, 1148.0], [10.0, 1149.0], [10.1, 1149.0], [10.2, 1149.0], [10.3, 1149.0], [10.4, 1149.0], [10.5, 1149.0], [10.6, 1149.0], [10.7, 1149.0], [10.8, 1149.0], [10.9, 1149.0], [11.0, 1149.0], [11.1, 1149.0], [11.2, 1149.0], [11.3, 1149.0], [11.4, 1149.0], [11.5, 1149.0], [11.6, 1149.0], [11.7, 1149.0], [11.8, 1149.0], [11.9, 1149.0], [12.0, 1151.0], [12.1, 1151.0], [12.2, 1151.0], [12.3, 1151.0], [12.4, 1151.0], [12.5, 1152.0], [12.6, 1152.0], [12.7, 1152.0], [12.8, 1152.0], [12.9, 1152.0], [13.0, 1154.0], [13.1, 1154.0], [13.2, 1154.0], [13.3, 1154.0], [13.4, 1154.0], [13.5, 1157.0], [13.6, 1157.0], [13.7, 1157.0], [13.8, 1157.0], [13.9, 1157.0], [14.0, 1159.0], [14.1, 1159.0], [14.2, 1159.0], [14.3, 1159.0], [14.4, 1159.0], [14.5, 1160.0], [14.6, 1160.0], [14.7, 1160.0], [14.8, 1160.0], [14.9, 1160.0], [15.0, 1160.0], [15.1, 1160.0], [15.2, 1160.0], [15.3, 1160.0], [15.4, 1160.0], [15.5, 1160.0], [15.6, 1160.0], [15.7, 1160.0], [15.8, 1160.0], [15.9, 1160.0], [16.0, 1161.0], [16.1, 1161.0], [16.2, 1161.0], [16.3, 1161.0], [16.4, 1161.0], [16.5, 1161.0], [16.6, 1161.0], [16.7, 1161.0], [16.8, 1161.0], [16.9, 1161.0], [17.0, 1162.0], [17.1, 1162.0], [17.2, 1162.0], [17.3, 1162.0], [17.4, 1162.0], [17.5, 1166.0], [17.6, 1166.0], [17.7, 1166.0], [17.8, 1166.0], [17.9, 1166.0], [18.0, 1166.0], [18.1, 1166.0], [18.2, 1166.0], [18.3, 1166.0], [18.4, 1166.0], [18.5, 1170.0], [18.6, 1170.0], [18.7, 1170.0], [18.8, 1170.0], [18.9, 1170.0], [19.0, 1171.0], [19.1, 1171.0], [19.2, 1171.0], [19.3, 1171.0], [19.4, 1171.0], [19.5, 1172.0], [19.6, 1172.0], [19.7, 1172.0], [19.8, 1172.0], [19.9, 1172.0], [20.0, 1175.0], [20.1, 1175.0], [20.2, 1175.0], [20.3, 1175.0], [20.4, 1175.0], [20.5, 1178.0], [20.6, 1178.0], [20.7, 1178.0], [20.8, 1178.0], [20.9, 1178.0], [21.0, 1183.0], [21.1, 1183.0], [21.2, 1183.0], [21.3, 1183.0], [21.4, 1183.0], [21.5, 1185.0], [21.6, 1185.0], [21.7, 1185.0], [21.8, 1185.0], [21.9, 1185.0], [22.0, 1185.0], [22.1, 1185.0], [22.2, 1185.0], [22.3, 1185.0], [22.4, 1185.0], [22.5, 1191.0], [22.6, 1191.0], [22.7, 1191.0], [22.8, 1191.0], [22.9, 1191.0], [23.0, 1193.0], [23.1, 1193.0], [23.2, 1193.0], [23.3, 1193.0], [23.4, 1193.0], [23.5, 1193.0], [23.6, 1193.0], [23.7, 1193.0], [23.8, 1193.0], [23.9, 1193.0], [24.0, 1194.0], [24.1, 1194.0], [24.2, 1194.0], [24.3, 1194.0], [24.4, 1194.0], [24.5, 1194.0], [24.6, 1194.0], [24.7, 1194.0], [24.8, 1194.0], [24.9, 1194.0], [25.0, 1197.0], [25.1, 1197.0], [25.2, 1197.0], [25.3, 1197.0], [25.4, 1197.0], [25.5, 1206.0], [25.6, 1206.0], [25.7, 1206.0], [25.8, 1206.0], [25.9, 1206.0], [26.0, 1212.0], [26.1, 1212.0], [26.2, 1212.0], [26.3, 1212.0], [26.4, 1212.0], [26.5, 1216.0], [26.6, 1216.0], [26.7, 1216.0], [26.8, 1216.0], [26.9, 1216.0], [27.0, 1216.0], [27.1, 1216.0], [27.2, 1216.0], [27.3, 1216.0], [27.4, 1216.0], [27.5, 1219.0], [27.6, 1219.0], [27.7, 1219.0], [27.8, 1219.0], [27.9, 1219.0], [28.0, 1221.0], [28.1, 1221.0], [28.2, 1221.0], [28.3, 1221.0], [28.4, 1221.0], [28.5, 1221.0], [28.6, 1221.0], [28.7, 1221.0], [28.8, 1221.0], [28.9, 1221.0], [29.0, 1222.0], [29.1, 1222.0], [29.2, 1222.0], [29.3, 1222.0], [29.4, 1222.0], [29.5, 1230.0], [29.6, 1230.0], [29.7, 1230.0], [29.8, 1230.0], [29.9, 1230.0], [30.0, 1239.0], [30.1, 1239.0], [30.2, 1239.0], [30.3, 1239.0], [30.4, 1239.0], [30.5, 1250.0], [30.6, 1250.0], [30.7, 1250.0], [30.8, 1250.0], [30.9, 1250.0], [31.0, 1259.0], [31.1, 1259.0], [31.2, 1259.0], [31.3, 1259.0], [31.4, 1259.0], [31.5, 1263.0], [31.6, 1263.0], [31.7, 1263.0], [31.8, 1263.0], [31.9, 1263.0], [32.0, 1268.0], [32.1, 1268.0], [32.2, 1268.0], [32.3, 1268.0], [32.4, 1268.0], [32.5, 1273.0], [32.6, 1273.0], [32.7, 1273.0], [32.8, 1273.0], [32.9, 1273.0], [33.0, 1277.0], [33.1, 1277.0], [33.2, 1277.0], [33.3, 1277.0], [33.4, 1277.0], [33.5, 1280.0], [33.6, 1280.0], [33.7, 1280.0], [33.8, 1280.0], [33.9, 1280.0], [34.0, 1287.0], [34.1, 1287.0], [34.2, 1287.0], [34.3, 1287.0], [34.4, 1287.0], [34.5, 1303.0], [34.6, 1303.0], [34.7, 1303.0], [34.8, 1303.0], [34.9, 1303.0], [35.0, 1307.0], [35.1, 1307.0], [35.2, 1307.0], [35.3, 1307.0], [35.4, 1307.0], [35.5, 1310.0], [35.6, 1310.0], [35.7, 1310.0], [35.8, 1310.0], [35.9, 1310.0], [36.0, 1311.0], [36.1, 1311.0], [36.2, 1311.0], [36.3, 1311.0], [36.4, 1311.0], [36.5, 1321.0], [36.6, 1321.0], [36.7, 1321.0], [36.8, 1321.0], [36.9, 1321.0], [37.0, 1327.0], [37.1, 1327.0], [37.2, 1327.0], [37.3, 1327.0], [37.4, 1327.0], [37.5, 1328.0], [37.6, 1328.0], [37.7, 1328.0], [37.8, 1328.0], [37.9, 1328.0], [38.0, 1332.0], [38.1, 1332.0], [38.2, 1332.0], [38.3, 1332.0], [38.4, 1332.0], [38.5, 1336.0], [38.6, 1336.0], [38.7, 1336.0], [38.8, 1336.0], [38.9, 1336.0], [39.0, 1343.0], [39.1, 1343.0], [39.2, 1343.0], [39.3, 1343.0], [39.4, 1343.0], [39.5, 1343.0], [39.6, 1343.0], [39.7, 1343.0], [39.8, 1343.0], [39.9, 1343.0], [40.0, 1344.0], [40.1, 1344.0], [40.2, 1344.0], [40.3, 1344.0], [40.4, 1344.0], [40.5, 1344.0], [40.6, 1344.0], [40.7, 1344.0], [40.8, 1344.0], [40.9, 1344.0], [41.0, 1348.0], [41.1, 1348.0], [41.2, 1348.0], [41.3, 1348.0], [41.4, 1348.0], [41.5, 1351.0], [41.6, 1351.0], [41.7, 1351.0], [41.8, 1351.0], [41.9, 1351.0], [42.0, 1354.0], [42.1, 1354.0], [42.2, 1354.0], [42.3, 1354.0], [42.4, 1354.0], [42.5, 1359.0], [42.6, 1359.0], [42.7, 1359.0], [42.8, 1359.0], [42.9, 1359.0], [43.0, 1361.0], [43.1, 1361.0], [43.2, 1361.0], [43.3, 1361.0], [43.4, 1361.0], [43.5, 1363.0], [43.6, 1363.0], [43.7, 1363.0], [43.8, 1363.0], [43.9, 1363.0], [44.0, 1376.0], [44.1, 1376.0], [44.2, 1376.0], [44.3, 1376.0], [44.4, 1376.0], [44.5, 1380.0], [44.6, 1380.0], [44.7, 1380.0], [44.8, 1380.0], [44.9, 1380.0], [45.0, 1384.0], [45.1, 1384.0], [45.2, 1384.0], [45.3, 1384.0], [45.4, 1384.0], [45.5, 1396.0], [45.6, 1396.0], [45.7, 1396.0], [45.8, 1396.0], [45.9, 1396.0], [46.0, 1397.0], [46.1, 1397.0], [46.2, 1397.0], [46.3, 1397.0], [46.4, 1397.0], [46.5, 1397.0], [46.6, 1397.0], [46.7, 1397.0], [46.8, 1397.0], [46.9, 1397.0], [47.0, 1398.0], [47.1, 1398.0], [47.2, 1398.0], [47.3, 1398.0], [47.4, 1398.0], [47.5, 1400.0], [47.6, 1400.0], [47.7, 1400.0], [47.8, 1400.0], [47.9, 1400.0], [48.0, 1404.0], [48.1, 1404.0], [48.2, 1404.0], [48.3, 1404.0], [48.4, 1404.0], [48.5, 1425.0], [48.6, 1425.0], [48.7, 1425.0], [48.8, 1425.0], [48.9, 1425.0], [49.0, 1430.0], [49.1, 1430.0], [49.2, 1430.0], [49.3, 1430.0], [49.4, 1430.0], [49.5, 1435.0], [49.6, 1435.0], [49.7, 1435.0], [49.8, 1435.0], [49.9, 1435.0], [50.0, 1479.0], [50.1, 1479.0], [50.2, 1479.0], [50.3, 1479.0], [50.4, 1479.0], [50.5, 1480.0], [50.6, 1480.0], [50.7, 1480.0], [50.8, 1480.0], [50.9, 1480.0], [51.0, 1488.0], [51.1, 1488.0], [51.2, 1488.0], [51.3, 1488.0], [51.4, 1488.0], [51.5, 1499.0], [51.6, 1499.0], [51.7, 1499.0], [51.8, 1499.0], [51.9, 1499.0], [52.0, 1519.0], [52.1, 1519.0], [52.2, 1519.0], [52.3, 1519.0], [52.4, 1519.0], [52.5, 1534.0], [52.6, 1534.0], [52.7, 1534.0], [52.8, 1534.0], [52.9, 1534.0], [53.0, 1538.0], [53.1, 1538.0], [53.2, 1538.0], [53.3, 1538.0], [53.4, 1538.0], [53.5, 1538.0], [53.6, 1538.0], [53.7, 1538.0], [53.8, 1538.0], [53.9, 1538.0], [54.0, 1556.0], [54.1, 1556.0], [54.2, 1556.0], [54.3, 1556.0], [54.4, 1556.0], [54.5, 1565.0], [54.6, 1565.0], [54.7, 1565.0], [54.8, 1565.0], [54.9, 1565.0], [55.0, 1578.0], [55.1, 1578.0], [55.2, 1578.0], [55.3, 1578.0], [55.4, 1578.0], [55.5, 1584.0], [55.6, 1584.0], [55.7, 1584.0], [55.8, 1584.0], [55.9, 1584.0], [56.0, 1586.0], [56.1, 1586.0], [56.2, 1586.0], [56.3, 1586.0], [56.4, 1586.0], [56.5, 1604.0], [56.6, 1604.0], [56.7, 1604.0], [56.8, 1604.0], [56.9, 1604.0], [57.0, 1604.0], [57.1, 1604.0], [57.2, 1604.0], [57.3, 1604.0], [57.4, 1604.0], [57.5, 1616.0], [57.6, 1616.0], [57.7, 1616.0], [57.8, 1616.0], [57.9, 1616.0], [58.0, 1632.0], [58.1, 1632.0], [58.2, 1632.0], [58.3, 1632.0], [58.4, 1632.0], [58.5, 1640.0], [58.6, 1640.0], [58.7, 1640.0], [58.8, 1640.0], [58.9, 1640.0], [59.0, 1684.0], [59.1, 1684.0], [59.2, 1684.0], [59.3, 1684.0], [59.4, 1684.0], [59.5, 1688.0], [59.6, 1688.0], [59.7, 1688.0], [59.8, 1688.0], [59.9, 1688.0], [60.0, 1695.0], [60.1, 1695.0], [60.2, 1695.0], [60.3, 1695.0], [60.4, 1695.0], [60.5, 1712.0], [60.6, 1712.0], [60.7, 1712.0], [60.8, 1712.0], [60.9, 1712.0], [61.0, 1713.0], [61.1, 1713.0], [61.2, 1713.0], [61.3, 1713.0], [61.4, 1713.0], [61.5, 1716.0], [61.6, 1716.0], [61.7, 1716.0], [61.8, 1716.0], [61.9, 1716.0], [62.0, 1718.0], [62.1, 1718.0], [62.2, 1718.0], [62.3, 1718.0], [62.4, 1718.0], [62.5, 1719.0], [62.6, 1719.0], [62.7, 1719.0], [62.8, 1719.0], [62.9, 1719.0], [63.0, 1721.0], [63.1, 1721.0], [63.2, 1721.0], [63.3, 1721.0], [63.4, 1721.0], [63.5, 1724.0], [63.6, 1724.0], [63.7, 1724.0], [63.8, 1724.0], [63.9, 1724.0], [64.0, 1726.0], [64.1, 1726.0], [64.2, 1726.0], [64.3, 1726.0], [64.4, 1726.0], [64.5, 1727.0], [64.6, 1727.0], [64.7, 1727.0], [64.8, 1727.0], [64.9, 1727.0], [65.0, 1747.0], [65.1, 1747.0], [65.2, 1747.0], [65.3, 1747.0], [65.4, 1747.0], [65.5, 1758.0], [65.6, 1758.0], [65.7, 1758.0], [65.8, 1758.0], [65.9, 1758.0], [66.0, 1784.0], [66.1, 1784.0], [66.2, 1784.0], [66.3, 1784.0], [66.4, 1784.0], [66.5, 1793.0], [66.6, 1793.0], [66.7, 1793.0], [66.8, 1793.0], [66.9, 1793.0], [67.0, 1836.0], [67.1, 1836.0], [67.2, 1836.0], [67.3, 1836.0], [67.4, 1836.0], [67.5, 1839.0], [67.6, 1839.0], [67.7, 1839.0], [67.8, 1839.0], [67.9, 1839.0], [68.0, 1863.0], [68.1, 1863.0], [68.2, 1863.0], [68.3, 1863.0], [68.4, 1863.0], [68.5, 1902.0], [68.6, 1902.0], [68.7, 1902.0], [68.8, 1902.0], [68.9, 1902.0], [69.0, 1913.0], [69.1, 1913.0], [69.2, 1913.0], [69.3, 1913.0], [69.4, 1913.0], [69.5, 1991.0], [69.6, 1991.0], [69.7, 1991.0], [69.8, 1991.0], [69.9, 1991.0], [70.0, 1999.0], [70.1, 1999.0], [70.2, 1999.0], [70.3, 1999.0], [70.4, 1999.0], [70.5, 2015.0], [70.6, 2015.0], [70.7, 2015.0], [70.8, 2015.0], [70.9, 2015.0], [71.0, 2027.0], [71.1, 2027.0], [71.2, 2027.0], [71.3, 2027.0], [71.4, 2027.0], [71.5, 2053.0], [71.6, 2053.0], [71.7, 2053.0], [71.8, 2053.0], [71.9, 2053.0], [72.0, 2091.0], [72.1, 2091.0], [72.2, 2091.0], [72.3, 2091.0], [72.4, 2091.0], [72.5, 2138.0], [72.6, 2138.0], [72.7, 2138.0], [72.8, 2138.0], [72.9, 2138.0], [73.0, 2161.0], [73.1, 2161.0], [73.2, 2161.0], [73.3, 2161.0], [73.4, 2161.0], [73.5, 2168.0], [73.6, 2168.0], [73.7, 2168.0], [73.8, 2168.0], [73.9, 2168.0], [74.0, 2258.0], [74.1, 2258.0], [74.2, 2258.0], [74.3, 2258.0], [74.4, 2258.0], [74.5, 2361.0], [74.6, 2361.0], [74.7, 2361.0], [74.8, 2361.0], [74.9, 2361.0], [75.0, 2380.0], [75.1, 2380.0], [75.2, 2380.0], [75.3, 2380.0], [75.4, 2380.0], [75.5, 2404.0], [75.6, 2404.0], [75.7, 2404.0], [75.8, 2404.0], [75.9, 2404.0], [76.0, 2408.0], [76.1, 2408.0], [76.2, 2408.0], [76.3, 2408.0], [76.4, 2408.0], [76.5, 2479.0], [76.6, 2479.0], [76.7, 2479.0], [76.8, 2479.0], [76.9, 2479.0], [77.0, 2496.0], [77.1, 2496.0], [77.2, 2496.0], [77.3, 2496.0], [77.4, 2496.0], [77.5, 2550.0], [77.6, 2550.0], [77.7, 2550.0], [77.8, 2550.0], [77.9, 2550.0], [78.0, 2607.0], [78.1, 2607.0], [78.2, 2607.0], [78.3, 2607.0], [78.4, 2607.0], [78.5, 2639.0], [78.6, 2639.0], [78.7, 2639.0], [78.8, 2639.0], [78.9, 2639.0], [79.0, 2685.0], [79.1, 2685.0], [79.2, 2685.0], [79.3, 2685.0], [79.4, 2685.0], [79.5, 2732.0], [79.6, 2732.0], [79.7, 2732.0], [79.8, 2732.0], [79.9, 2732.0], [80.0, 2992.0], [80.1, 2992.0], [80.2, 2992.0], [80.3, 2992.0], [80.4, 2992.0], [80.5, 2997.0], [80.6, 2997.0], [80.7, 2997.0], [80.8, 2997.0], [80.9, 2997.0], [81.0, 3008.0], [81.1, 3008.0], [81.2, 3008.0], [81.3, 3008.0], [81.4, 3008.0], [81.5, 3019.0], [81.6, 3019.0], [81.7, 3019.0], [81.8, 3019.0], [81.9, 3019.0], [82.0, 3041.0], [82.1, 3041.0], [82.2, 3041.0], [82.3, 3041.0], [82.4, 3041.0], [82.5, 3145.0], [82.6, 3145.0], [82.7, 3145.0], [82.8, 3145.0], [82.9, 3145.0], [83.0, 3218.0], [83.1, 3218.0], [83.2, 3218.0], [83.3, 3218.0], [83.4, 3218.0], [83.5, 3259.0], [83.6, 3259.0], [83.7, 3259.0], [83.8, 3259.0], [83.9, 3259.0], [84.0, 3325.0], [84.1, 3325.0], [84.2, 3325.0], [84.3, 3325.0], [84.4, 3325.0], [84.5, 3341.0], [84.6, 3341.0], [84.7, 3341.0], [84.8, 3341.0], [84.9, 3341.0], [85.0, 3365.0], [85.1, 3365.0], [85.2, 3365.0], [85.3, 3365.0], [85.4, 3365.0], [85.5, 3380.0], [85.6, 3380.0], [85.7, 3380.0], [85.8, 3380.0], [85.9, 3380.0], [86.0, 3413.0], [86.1, 3413.0], [86.2, 3413.0], [86.3, 3413.0], [86.4, 3413.0], [86.5, 3430.0], [86.6, 3430.0], [86.7, 3430.0], [86.8, 3430.0], [86.9, 3430.0], [87.0, 3510.0], [87.1, 3510.0], [87.2, 3510.0], [87.3, 3510.0], [87.4, 3510.0], [87.5, 3545.0], [87.6, 3545.0], [87.7, 3545.0], [87.8, 3545.0], [87.9, 3545.0], [88.0, 3603.0], [88.1, 3603.0], [88.2, 3603.0], [88.3, 3603.0], [88.4, 3603.0], [88.5, 3610.0], [88.6, 3610.0], [88.7, 3610.0], [88.8, 3610.0], [88.9, 3610.0], [89.0, 3617.0], [89.1, 3617.0], [89.2, 3617.0], [89.3, 3617.0], [89.4, 3617.0], [89.5, 3692.0], [89.6, 3692.0], [89.7, 3692.0], [89.8, 3692.0], [89.9, 3692.0], [90.0, 3898.0], [90.1, 3898.0], [90.2, 3898.0], [90.3, 3898.0], [90.4, 3898.0], [90.5, 3969.0], [90.6, 3969.0], [90.7, 3969.0], [90.8, 3969.0], [90.9, 3969.0], [91.0, 4086.0], [91.1, 4086.0], [91.2, 4086.0], [91.3, 4086.0], [91.4, 4086.0], [91.5, 4159.0], [91.6, 4159.0], [91.7, 4159.0], [91.8, 4159.0], [91.9, 4159.0], [92.0, 4175.0], [92.1, 4175.0], [92.2, 4175.0], [92.3, 4175.0], [92.4, 4175.0], [92.5, 4278.0], [92.6, 4278.0], [92.7, 4278.0], [92.8, 4278.0], [92.9, 4278.0], [93.0, 4319.0], [93.1, 4319.0], [93.2, 4319.0], [93.3, 4319.0], [93.4, 4319.0], [93.5, 4331.0], [93.6, 4331.0], [93.7, 4331.0], [93.8, 4331.0], [93.9, 4331.0], [94.0, 4392.0], [94.1, 4392.0], [94.2, 4392.0], [94.3, 4392.0], [94.4, 4392.0], [94.5, 4480.0], [94.6, 4480.0], [94.7, 4480.0], [94.8, 4480.0], [94.9, 4480.0], [95.0, 4521.0], [95.1, 4521.0], [95.2, 4521.0], [95.3, 4521.0], [95.4, 4521.0], [95.5, 4521.0], [95.6, 4521.0], [95.7, 4521.0], [95.8, 4521.0], [95.9, 4521.0], [96.0, 4593.0], [96.1, 4593.0], [96.2, 4593.0], [96.3, 4593.0], [96.4, 4593.0], [96.5, 4595.0], [96.6, 4595.0], [96.7, 4595.0], [96.8, 4595.0], [96.9, 4595.0], [97.0, 4613.0], [97.1, 4613.0], [97.2, 4613.0], [97.3, 4613.0], [97.4, 4613.0], [97.5, 4633.0], [97.6, 4633.0], [97.7, 4633.0], [97.8, 4633.0], [97.9, 4633.0], [98.0, 4643.0], [98.1, 4643.0], [98.2, 4643.0], [98.3, 4643.0], [98.4, 4643.0], [98.5, 4651.0], [98.6, 4651.0], [98.7, 4651.0], [98.8, 4651.0], [98.9, 4651.0], [99.0, 4652.0], [99.1, 4652.0], [99.2, 4652.0], [99.3, 4652.0], [99.4, 4652.0], [99.5, 4657.0], [99.6, 4657.0], [99.7, 4657.0], [99.8, 4657.0], [99.9, 4657.0]], "isOverall": false, "label": "Create", "isController": false}, {"data": [[0.0, 280.0], [0.1, 280.0], [0.2, 280.0], [0.3, 280.0], [0.4, 280.0], [0.5, 280.0], [0.6, 280.0], [0.7, 280.0], [0.8, 280.0], [0.9, 280.0], [1.0, 283.0], [1.1, 283.0], [1.2, 283.0], [1.3, 283.0], [1.4, 283.0], [1.5, 284.0], [1.6, 284.0], [1.7, 284.0], [1.8, 284.0], [1.9, 284.0], [2.0, 284.0], [2.1, 284.0], [2.2, 284.0], [2.3, 284.0], [2.4, 284.0], [2.5, 284.0], [2.6, 284.0], [2.7, 284.0], [2.8, 284.0], [2.9, 284.0], [3.0, 285.0], [3.1, 285.0], [3.2, 285.0], [3.3, 285.0], [3.4, 285.0], [3.5, 285.0], [3.6, 285.0], [3.7, 285.0], [3.8, 285.0], [3.9, 285.0], [4.0, 285.0], [4.1, 285.0], [4.2, 285.0], [4.3, 285.0], [4.4, 285.0], [4.5, 286.0], [4.6, 286.0], [4.7, 286.0], [4.8, 286.0], [4.9, 286.0], [5.0, 286.0], [5.1, 286.0], [5.2, 286.0], [5.3, 286.0], [5.4, 286.0], [5.5, 286.0], [5.6, 286.0], [5.7, 286.0], [5.8, 286.0], [5.9, 286.0], [6.0, 287.0], [6.1, 287.0], [6.2, 287.0], [6.3, 287.0], [6.4, 287.0], [6.5, 287.0], [6.6, 287.0], [6.7, 287.0], [6.8, 287.0], [6.9, 287.0], [7.0, 288.0], [7.1, 288.0], [7.2, 288.0], [7.3, 288.0], [7.4, 288.0], [7.5, 289.0], [7.6, 289.0], [7.7, 289.0], [7.8, 289.0], [7.9, 289.0], [8.0, 289.0], [8.1, 289.0], [8.2, 289.0], [8.3, 289.0], [8.4, 289.0], [8.5, 290.0], [8.6, 290.0], [8.7, 290.0], [8.8, 290.0], [8.9, 290.0], [9.0, 290.0], [9.1, 290.0], [9.2, 290.0], [9.3, 290.0], [9.4, 290.0], [9.5, 290.0], [9.6, 290.0], [9.7, 290.0], [9.8, 290.0], [9.9, 290.0], [10.0, 290.0], [10.1, 290.0], [10.2, 290.0], [10.3, 290.0], [10.4, 290.0], [10.5, 291.0], [10.6, 291.0], [10.7, 291.0], [10.8, 291.0], [10.9, 291.0], [11.0, 291.0], [11.1, 291.0], [11.2, 291.0], [11.3, 291.0], [11.4, 291.0], [11.5, 292.0], [11.6, 292.0], [11.7, 292.0], [11.8, 292.0], [11.9, 292.0], [12.0, 292.0], [12.1, 292.0], [12.2, 292.0], [12.3, 292.0], [12.4, 292.0], [12.5, 292.0], [12.6, 292.0], [12.7, 292.0], [12.8, 292.0], [12.9, 292.0], [13.0, 293.0], [13.1, 293.0], [13.2, 293.0], [13.3, 293.0], [13.4, 293.0], [13.5, 293.0], [13.6, 293.0], [13.7, 293.0], [13.8, 293.0], [13.9, 293.0], [14.0, 294.0], [14.1, 294.0], [14.2, 294.0], [14.3, 294.0], [14.4, 294.0], [14.5, 294.0], [14.6, 294.0], [14.7, 294.0], [14.8, 294.0], [14.9, 294.0], [15.0, 295.0], [15.1, 295.0], [15.2, 295.0], [15.3, 295.0], [15.4, 295.0], [15.5, 296.0], [15.6, 296.0], [15.7, 296.0], [15.8, 296.0], [15.9, 296.0], [16.0, 296.0], [16.1, 296.0], [16.2, 296.0], [16.3, 296.0], [16.4, 296.0], [16.5, 297.0], [16.6, 297.0], [16.7, 297.0], [16.8, 297.0], [16.9, 297.0], [17.0, 297.0], [17.1, 297.0], [17.2, 297.0], [17.3, 297.0], [17.4, 297.0], [17.5, 298.0], [17.6, 298.0], [17.7, 298.0], [17.8, 298.0], [17.9, 298.0], [18.0, 299.0], [18.1, 299.0], [18.2, 299.0], [18.3, 299.0], [18.4, 299.0], [18.5, 304.0], [18.6, 304.0], [18.7, 304.0], [18.8, 304.0], [18.9, 304.0], [19.0, 308.0], [19.1, 308.0], [19.2, 308.0], [19.3, 308.0], [19.4, 308.0], [19.5, 310.0], [19.6, 310.0], [19.7, 310.0], [19.8, 310.0], [19.9, 310.0], [20.0, 314.0], [20.1, 314.0], [20.2, 314.0], [20.3, 314.0], [20.4, 314.0], [20.5, 316.0], [20.6, 316.0], [20.7, 316.0], [20.8, 316.0], [20.9, 316.0], [21.0, 318.0], [21.1, 318.0], [21.2, 318.0], [21.3, 318.0], [21.4, 318.0], [21.5, 318.0], [21.6, 318.0], [21.7, 318.0], [21.8, 318.0], [21.9, 318.0], [22.0, 319.0], [22.1, 319.0], [22.2, 319.0], [22.3, 319.0], [22.4, 319.0], [22.5, 320.0], [22.6, 320.0], [22.7, 320.0], [22.8, 320.0], [22.9, 320.0], [23.0, 327.0], [23.1, 327.0], [23.2, 327.0], [23.3, 327.0], [23.4, 327.0], [23.5, 329.0], [23.6, 329.0], [23.7, 329.0], [23.8, 329.0], [23.9, 329.0], [24.0, 336.0], [24.1, 336.0], [24.2, 336.0], [24.3, 336.0], [24.4, 336.0], [24.5, 337.0], [24.6, 337.0], [24.7, 337.0], [24.8, 337.0], [24.9, 337.0], [25.0, 337.0], [25.1, 337.0], [25.2, 337.0], [25.3, 337.0], [25.4, 337.0], [25.5, 337.0], [25.6, 337.0], [25.7, 337.0], [25.8, 337.0], [25.9, 337.0], [26.0, 345.0], [26.1, 345.0], [26.2, 345.0], [26.3, 345.0], [26.4, 345.0], [26.5, 348.0], [26.6, 348.0], [26.7, 348.0], [26.8, 348.0], [26.9, 348.0], [27.0, 348.0], [27.1, 348.0], [27.2, 348.0], [27.3, 348.0], [27.4, 348.0], [27.5, 349.0], [27.6, 349.0], [27.7, 349.0], [27.8, 349.0], [27.9, 349.0], [28.0, 357.0], [28.1, 357.0], [28.2, 357.0], [28.3, 357.0], [28.4, 357.0], [28.5, 386.0], [28.6, 386.0], [28.7, 386.0], [28.8, 386.0], [28.9, 386.0], [29.0, 392.0], [29.1, 392.0], [29.2, 392.0], [29.3, 392.0], [29.4, 392.0], [29.5, 409.0], [29.6, 409.0], [29.7, 409.0], [29.8, 409.0], [29.9, 409.0], [30.0, 412.0], [30.1, 412.0], [30.2, 412.0], [30.3, 412.0], [30.4, 412.0], [30.5, 437.0], [30.6, 437.0], [30.7, 437.0], [30.8, 437.0], [30.9, 437.0], [31.0, 462.0], [31.1, 462.0], [31.2, 462.0], [31.3, 462.0], [31.4, 462.0], [31.5, 474.0], [31.6, 474.0], [31.7, 474.0], [31.8, 474.0], [31.9, 474.0], [32.0, 476.0], [32.1, 476.0], [32.2, 476.0], [32.3, 476.0], [32.4, 476.0], [32.5, 500.0], [32.6, 500.0], [32.7, 500.0], [32.8, 500.0], [32.9, 500.0], [33.0, 514.0], [33.1, 514.0], [33.2, 514.0], [33.3, 514.0], [33.4, 514.0], [33.5, 531.0], [33.6, 531.0], [33.7, 531.0], [33.8, 531.0], [33.9, 531.0], [34.0, 538.0], [34.1, 538.0], [34.2, 538.0], [34.3, 538.0], [34.4, 538.0], [34.5, 545.0], [34.6, 545.0], [34.7, 545.0], [34.8, 545.0], [34.9, 545.0], [35.0, 546.0], [35.1, 546.0], [35.2, 546.0], [35.3, 546.0], [35.4, 546.0], [35.5, 553.0], [35.6, 553.0], [35.7, 553.0], [35.8, 553.0], [35.9, 553.0], [36.0, 554.0], [36.1, 554.0], [36.2, 554.0], [36.3, 554.0], [36.4, 554.0], [36.5, 555.0], [36.6, 555.0], [36.7, 555.0], [36.8, 555.0], [36.9, 555.0], [37.0, 562.0], [37.1, 562.0], [37.2, 562.0], [37.3, 562.0], [37.4, 562.0], [37.5, 565.0], [37.6, 565.0], [37.7, 565.0], [37.8, 565.0], [37.9, 565.0], [38.0, 567.0], [38.1, 567.0], [38.2, 567.0], [38.3, 567.0], [38.4, 567.0], [38.5, 568.0], [38.6, 568.0], [38.7, 568.0], [38.8, 568.0], [38.9, 568.0], [39.0, 569.0], [39.1, 569.0], [39.2, 569.0], [39.3, 569.0], [39.4, 569.0], [39.5, 571.0], [39.6, 571.0], [39.7, 571.0], [39.8, 571.0], [39.9, 571.0], [40.0, 571.0], [40.1, 571.0], [40.2, 571.0], [40.3, 571.0], [40.4, 571.0], [40.5, 581.0], [40.6, 581.0], [40.7, 581.0], [40.8, 581.0], [40.9, 581.0], [41.0, 591.0], [41.1, 591.0], [41.2, 591.0], [41.3, 591.0], [41.4, 591.0], [41.5, 595.0], [41.6, 595.0], [41.7, 595.0], [41.8, 595.0], [41.9, 595.0], [42.0, 597.0], [42.1, 597.0], [42.2, 597.0], [42.3, 597.0], [42.4, 597.0], [42.5, 624.0], [42.6, 624.0], [42.7, 624.0], [42.8, 624.0], [42.9, 624.0], [43.0, 628.0], [43.1, 628.0], [43.2, 628.0], [43.3, 628.0], [43.4, 628.0], [43.5, 629.0], [43.6, 629.0], [43.7, 629.0], [43.8, 629.0], [43.9, 629.0], [44.0, 632.0], [44.1, 632.0], [44.2, 632.0], [44.3, 632.0], [44.4, 632.0], [44.5, 633.0], [44.6, 633.0], [44.7, 633.0], [44.8, 633.0], [44.9, 633.0], [45.0, 646.0], [45.1, 646.0], [45.2, 646.0], [45.3, 646.0], [45.4, 646.0], [45.5, 653.0], [45.6, 653.0], [45.7, 653.0], [45.8, 653.0], [45.9, 653.0], [46.0, 653.0], [46.1, 653.0], [46.2, 653.0], [46.3, 653.0], [46.4, 653.0], [46.5, 664.0], [46.6, 664.0], [46.7, 664.0], [46.8, 664.0], [46.9, 664.0], [47.0, 669.0], [47.1, 669.0], [47.2, 669.0], [47.3, 669.0], [47.4, 669.0], [47.5, 673.0], [47.6, 673.0], [47.7, 673.0], [47.8, 673.0], [47.9, 673.0], [48.0, 675.0], [48.1, 675.0], [48.2, 675.0], [48.3, 675.0], [48.4, 675.0], [48.5, 679.0], [48.6, 679.0], [48.7, 679.0], [48.8, 679.0], [48.9, 679.0], [49.0, 683.0], [49.1, 683.0], [49.2, 683.0], [49.3, 683.0], [49.4, 683.0], [49.5, 685.0], [49.6, 685.0], [49.7, 685.0], [49.8, 685.0], [49.9, 685.0], [50.0, 686.0], [50.1, 686.0], [50.2, 686.0], [50.3, 686.0], [50.4, 686.0], [50.5, 686.0], [50.6, 686.0], [50.7, 686.0], [50.8, 686.0], [50.9, 686.0], [51.0, 690.0], [51.1, 690.0], [51.2, 690.0], [51.3, 690.0], [51.4, 690.0], [51.5, 690.0], [51.6, 690.0], [51.7, 690.0], [51.8, 690.0], [51.9, 690.0], [52.0, 692.0], [52.1, 692.0], [52.2, 692.0], [52.3, 692.0], [52.4, 692.0], [52.5, 692.0], [52.6, 692.0], [52.7, 692.0], [52.8, 692.0], [52.9, 692.0], [53.0, 695.0], [53.1, 695.0], [53.2, 695.0], [53.3, 695.0], [53.4, 695.0], [53.5, 696.0], [53.6, 696.0], [53.7, 696.0], [53.8, 696.0], [53.9, 696.0], [54.0, 697.0], [54.1, 697.0], [54.2, 697.0], [54.3, 697.0], [54.4, 697.0], [54.5, 698.0], [54.6, 698.0], [54.7, 698.0], [54.8, 698.0], [54.9, 698.0], [55.0, 699.0], [55.1, 699.0], [55.2, 699.0], [55.3, 699.0], [55.4, 699.0], [55.5, 699.0], [55.6, 699.0], [55.7, 699.0], [55.8, 699.0], [55.9, 699.0], [56.0, 701.0], [56.1, 701.0], [56.2, 701.0], [56.3, 701.0], [56.4, 701.0], [56.5, 706.0], [56.6, 706.0], [56.7, 706.0], [56.8, 706.0], [56.9, 706.0], [57.0, 708.0], [57.1, 708.0], [57.2, 708.0], [57.3, 708.0], [57.4, 708.0], [57.5, 711.0], [57.6, 711.0], [57.7, 711.0], [57.8, 711.0], [57.9, 711.0], [58.0, 714.0], [58.1, 714.0], [58.2, 714.0], [58.3, 714.0], [58.4, 714.0], [58.5, 715.0], [58.6, 715.0], [58.7, 715.0], [58.8, 715.0], [58.9, 715.0], [59.0, 716.0], [59.1, 716.0], [59.2, 716.0], [59.3, 716.0], [59.4, 716.0], [59.5, 719.0], [59.6, 719.0], [59.7, 719.0], [59.8, 719.0], [59.9, 719.0], [60.0, 719.0], [60.1, 719.0], [60.2, 719.0], [60.3, 719.0], [60.4, 719.0], [60.5, 721.0], [60.6, 721.0], [60.7, 721.0], [60.8, 721.0], [60.9, 721.0], [61.0, 721.0], [61.1, 721.0], [61.2, 721.0], [61.3, 721.0], [61.4, 721.0], [61.5, 722.0], [61.6, 722.0], [61.7, 722.0], [61.8, 722.0], [61.9, 722.0], [62.0, 722.0], [62.1, 722.0], [62.2, 722.0], [62.3, 722.0], [62.4, 722.0], [62.5, 723.0], [62.6, 723.0], [62.7, 723.0], [62.8, 723.0], [62.9, 723.0], [63.0, 724.0], [63.1, 724.0], [63.2, 724.0], [63.3, 724.0], [63.4, 724.0], [63.5, 724.0], [63.6, 724.0], [63.7, 724.0], [63.8, 724.0], [63.9, 724.0], [64.0, 724.0], [64.1, 724.0], [64.2, 724.0], [64.3, 724.0], [64.4, 724.0], [64.5, 725.0], [64.6, 725.0], [64.7, 725.0], [64.8, 725.0], [64.9, 725.0], [65.0, 726.0], [65.1, 726.0], [65.2, 726.0], [65.3, 726.0], [65.4, 726.0], [65.5, 727.0], [65.6, 727.0], [65.7, 727.0], [65.8, 727.0], [65.9, 727.0], [66.0, 727.0], [66.1, 727.0], [66.2, 727.0], [66.3, 727.0], [66.4, 727.0], [66.5, 727.0], [66.6, 727.0], [66.7, 727.0], [66.8, 727.0], [66.9, 727.0], [67.0, 728.0], [67.1, 728.0], [67.2, 728.0], [67.3, 728.0], [67.4, 728.0], [67.5, 729.0], [67.6, 729.0], [67.7, 729.0], [67.8, 729.0], [67.9, 729.0], [68.0, 729.0], [68.1, 729.0], [68.2, 729.0], [68.3, 729.0], [68.4, 729.0], [68.5, 730.0], [68.6, 730.0], [68.7, 730.0], [68.8, 730.0], [68.9, 730.0], [69.0, 730.0], [69.1, 730.0], [69.2, 730.0], [69.3, 730.0], [69.4, 730.0], [69.5, 730.0], [69.6, 730.0], [69.7, 730.0], [69.8, 730.0], [69.9, 730.0], [70.0, 730.0], [70.1, 730.0], [70.2, 730.0], [70.3, 730.0], [70.4, 730.0], [70.5, 730.0], [70.6, 730.0], [70.7, 730.0], [70.8, 730.0], [70.9, 730.0], [71.0, 730.0], [71.1, 730.0], [71.2, 730.0], [71.3, 730.0], [71.4, 730.0], [71.5, 730.0], [71.6, 730.0], [71.7, 730.0], [71.8, 730.0], [71.9, 730.0], [72.0, 730.0], [72.1, 730.0], [72.2, 730.0], [72.3, 730.0], [72.4, 730.0], [72.5, 731.0], [72.6, 731.0], [72.7, 731.0], [72.8, 731.0], [72.9, 731.0], [73.0, 731.0], [73.1, 731.0], [73.2, 731.0], [73.3, 731.0], [73.4, 731.0], [73.5, 731.0], [73.6, 731.0], [73.7, 731.0], [73.8, 731.0], [73.9, 731.0], [74.0, 731.0], [74.1, 731.0], [74.2, 731.0], [74.3, 731.0], [74.4, 731.0], [74.5, 731.0], [74.6, 731.0], [74.7, 731.0], [74.8, 731.0], [74.9, 731.0], [75.0, 734.0], [75.1, 734.0], [75.2, 734.0], [75.3, 734.0], [75.4, 734.0], [75.5, 734.0], [75.6, 734.0], [75.7, 734.0], [75.8, 734.0], [75.9, 734.0], [76.0, 735.0], [76.1, 735.0], [76.2, 735.0], [76.3, 735.0], [76.4, 735.0], [76.5, 736.0], [76.6, 736.0], [76.7, 736.0], [76.8, 736.0], [76.9, 736.0], [77.0, 739.0], [77.1, 739.0], [77.2, 739.0], [77.3, 739.0], [77.4, 739.0], [77.5, 741.0], [77.6, 741.0], [77.7, 741.0], [77.8, 741.0], [77.9, 741.0], [78.0, 746.0], [78.1, 746.0], [78.2, 746.0], [78.3, 746.0], [78.4, 746.0], [78.5, 751.0], [78.6, 751.0], [78.7, 751.0], [78.8, 751.0], [78.9, 751.0], [79.0, 757.0], [79.1, 757.0], [79.2, 757.0], [79.3, 757.0], [79.4, 757.0], [79.5, 762.0], [79.6, 762.0], [79.7, 762.0], [79.8, 762.0], [79.9, 762.0], [80.0, 764.0], [80.1, 764.0], [80.2, 764.0], [80.3, 764.0], [80.4, 764.0], [80.5, 772.0], [80.6, 772.0], [80.7, 772.0], [80.8, 772.0], [80.9, 772.0], [81.0, 773.0], [81.1, 773.0], [81.2, 773.0], [81.3, 773.0], [81.4, 773.0], [81.5, 774.0], [81.6, 774.0], [81.7, 774.0], [81.8, 774.0], [81.9, 774.0], [82.0, 785.0], [82.1, 785.0], [82.2, 785.0], [82.3, 785.0], [82.4, 785.0], [82.5, 785.0], [82.6, 785.0], [82.7, 785.0], [82.8, 785.0], [82.9, 785.0], [83.0, 786.0], [83.1, 786.0], [83.2, 786.0], [83.3, 786.0], [83.4, 786.0], [83.5, 854.0], [83.6, 854.0], [83.7, 854.0], [83.8, 854.0], [83.9, 854.0], [84.0, 859.0], [84.1, 859.0], [84.2, 859.0], [84.3, 859.0], [84.4, 859.0], [84.5, 860.0], [84.6, 860.0], [84.7, 860.0], [84.8, 860.0], [84.9, 860.0], [85.0, 861.0], [85.1, 861.0], [85.2, 861.0], [85.3, 861.0], [85.4, 861.0], [85.5, 861.0], [85.6, 861.0], [85.7, 861.0], [85.8, 861.0], [85.9, 861.0], [86.0, 864.0], [86.1, 864.0], [86.2, 864.0], [86.3, 864.0], [86.4, 864.0], [86.5, 866.0], [86.6, 866.0], [86.7, 866.0], [86.8, 866.0], [86.9, 866.0], [87.0, 866.0], [87.1, 866.0], [87.2, 866.0], [87.3, 866.0], [87.4, 866.0], [87.5, 866.0], [87.6, 866.0], [87.7, 866.0], [87.8, 866.0], [87.9, 866.0], [88.0, 867.0], [88.1, 867.0], [88.2, 867.0], [88.3, 867.0], [88.4, 867.0], [88.5, 871.0], [88.6, 871.0], [88.7, 871.0], [88.8, 871.0], [88.9, 871.0], [89.0, 881.0], [89.1, 881.0], [89.2, 881.0], [89.3, 881.0], [89.4, 881.0], [89.5, 882.0], [89.6, 882.0], [89.7, 882.0], [89.8, 882.0], [89.9, 882.0], [90.0, 886.0], [90.1, 886.0], [90.2, 886.0], [90.3, 886.0], [90.4, 886.0], [90.5, 890.0], [90.6, 890.0], [90.7, 890.0], [90.8, 890.0], [90.9, 890.0], [91.0, 893.0], [91.1, 893.0], [91.2, 893.0], [91.3, 893.0], [91.4, 893.0], [91.5, 901.0], [91.6, 901.0], [91.7, 901.0], [91.8, 901.0], [91.9, 901.0], [92.0, 901.0], [92.1, 901.0], [92.2, 901.0], [92.3, 901.0], [92.4, 901.0], [92.5, 903.0], [92.6, 903.0], [92.7, 903.0], [92.8, 903.0], [92.9, 903.0], [93.0, 905.0], [93.1, 905.0], [93.2, 905.0], [93.3, 905.0], [93.4, 905.0], [93.5, 908.0], [93.6, 908.0], [93.7, 908.0], [93.8, 908.0], [93.9, 908.0], [94.0, 910.0], [94.1, 910.0], [94.2, 910.0], [94.3, 910.0], [94.4, 910.0], [94.5, 1072.0], [94.6, 1072.0], [94.7, 1072.0], [94.8, 1072.0], [94.9, 1072.0], [95.0, 1085.0], [95.1, 1085.0], [95.2, 1085.0], [95.3, 1085.0], [95.4, 1085.0], [95.5, 1085.0], [95.6, 1085.0], [95.7, 1085.0], [95.8, 1085.0], [95.9, 1085.0], [96.0, 1091.0], [96.1, 1091.0], [96.2, 1091.0], [96.3, 1091.0], [96.4, 1091.0], [96.5, 1093.0], [96.6, 1093.0], [96.7, 1093.0], [96.8, 1093.0], [96.9, 1093.0], [97.0, 1144.0], [97.1, 1144.0], [97.2, 1144.0], [97.3, 1144.0], [97.4, 1144.0], [97.5, 1149.0], [97.6, 1149.0], [97.7, 1149.0], [97.8, 1149.0], [97.9, 1149.0], [98.0, 1150.0], [98.1, 1150.0], [98.2, 1150.0], [98.3, 1150.0], [98.4, 1150.0], [98.5, 1159.0], [98.6, 1159.0], [98.7, 1159.0], [98.8, 1159.0], [98.9, 1159.0], [99.0, 1164.0], [99.1, 1164.0], [99.2, 1164.0], [99.3, 1164.0], [99.4, 1164.0], [99.5, 1173.0], [99.6, 1173.0], [99.7, 1173.0], [99.8, 1173.0], [99.9, 1173.0]], "isOverall": false, "label": "Get", "isController": false}, {"data": [[0.0, 279.0], [0.1, 279.0], [0.2, 279.0], [0.3, 279.0], [0.4, 279.0], [0.5, 279.0], [0.6, 279.0], [0.7, 279.0], [0.8, 279.0], [0.9, 279.0], [1.0, 279.0], [1.1, 279.0], [1.2, 279.0], [1.3, 279.0], [1.4, 279.0], [1.5, 280.0], [1.6, 280.0], [1.7, 280.0], [1.8, 280.0], [1.9, 280.0], [2.0, 281.0], [2.1, 281.0], [2.2, 281.0], [2.3, 281.0], [2.4, 281.0], [2.5, 282.0], [2.6, 282.0], [2.7, 282.0], [2.8, 282.0], [2.9, 282.0], [3.0, 282.0], [3.1, 282.0], [3.2, 282.0], [3.3, 282.0], [3.4, 282.0], [3.5, 283.0], [3.6, 283.0], [3.7, 283.0], [3.8, 283.0], [3.9, 283.0], [4.0, 283.0], [4.1, 283.0], [4.2, 283.0], [4.3, 283.0], [4.4, 283.0], [4.5, 283.0], [4.6, 283.0], [4.7, 283.0], [4.8, 283.0], [4.9, 283.0], [5.0, 283.0], [5.1, 283.0], [5.2, 283.0], [5.3, 283.0], [5.4, 283.0], [5.5, 283.0], [5.6, 283.0], [5.7, 283.0], [5.8, 283.0], [5.9, 283.0], [6.0, 283.0], [6.1, 283.0], [6.2, 283.0], [6.3, 283.0], [6.4, 283.0], [6.5, 284.0], [6.6, 284.0], [6.7, 284.0], [6.8, 284.0], [6.9, 284.0], [7.0, 284.0], [7.1, 284.0], [7.2, 284.0], [7.3, 284.0], [7.4, 284.0], [7.5, 284.0], [7.6, 284.0], [7.7, 284.0], [7.8, 284.0], [7.9, 284.0], [8.0, 285.0], [8.1, 285.0], [8.2, 285.0], [8.3, 285.0], [8.4, 285.0], [8.5, 285.0], [8.6, 285.0], [8.7, 285.0], [8.8, 285.0], [8.9, 285.0], [9.0, 285.0], [9.1, 285.0], [9.2, 285.0], [9.3, 285.0], [9.4, 285.0], [9.5, 285.0], [9.6, 285.0], [9.7, 285.0], [9.8, 285.0], [9.9, 285.0], [10.0, 285.0], [10.1, 285.0], [10.2, 285.0], [10.3, 285.0], [10.4, 285.0], [10.5, 286.0], [10.6, 286.0], [10.7, 286.0], [10.8, 286.0], [10.9, 286.0], [11.0, 286.0], [11.1, 286.0], [11.2, 286.0], [11.3, 286.0], [11.4, 286.0], [11.5, 286.0], [11.6, 286.0], [11.7, 286.0], [11.8, 286.0], [11.9, 286.0], [12.0, 286.0], [12.1, 286.0], [12.2, 286.0], [12.3, 286.0], [12.4, 286.0], [12.5, 286.0], [12.6, 286.0], [12.7, 286.0], [12.8, 286.0], [12.9, 286.0], [13.0, 287.0], [13.1, 287.0], [13.2, 287.0], [13.3, 287.0], [13.4, 287.0], [13.5, 287.0], [13.6, 287.0], [13.7, 287.0], [13.8, 287.0], [13.9, 287.0], [14.0, 287.0], [14.1, 287.0], [14.2, 287.0], [14.3, 287.0], [14.4, 287.0], [14.5, 287.0], [14.6, 287.0], [14.7, 287.0], [14.8, 287.0], [14.9, 287.0], [15.0, 287.0], [15.1, 287.0], [15.2, 287.0], [15.3, 287.0], [15.4, 287.0], [15.5, 287.0], [15.6, 287.0], [15.7, 287.0], [15.8, 287.0], [15.9, 287.0], [16.0, 288.0], [16.1, 288.0], [16.2, 288.0], [16.3, 288.0], [16.4, 288.0], [16.5, 288.0], [16.6, 288.0], [16.7, 288.0], [16.8, 288.0], [16.9, 288.0], [17.0, 288.0], [17.1, 288.0], [17.2, 288.0], [17.3, 288.0], [17.4, 288.0], [17.5, 288.0], [17.6, 288.0], [17.7, 288.0], [17.8, 288.0], [17.9, 288.0], [18.0, 288.0], [18.1, 288.0], [18.2, 288.0], [18.3, 288.0], [18.4, 288.0], [18.5, 288.0], [18.6, 288.0], [18.7, 288.0], [18.8, 288.0], [18.9, 288.0], [19.0, 288.0], [19.1, 288.0], [19.2, 288.0], [19.3, 288.0], [19.4, 288.0], [19.5, 289.0], [19.6, 289.0], [19.7, 289.0], [19.8, 289.0], [19.9, 289.0], [20.0, 289.0], [20.1, 289.0], [20.2, 289.0], [20.3, 289.0], [20.4, 289.0], [20.5, 289.0], [20.6, 289.0], [20.7, 289.0], [20.8, 289.0], [20.9, 289.0], [21.0, 289.0], [21.1, 289.0], [21.2, 289.0], [21.3, 289.0], [21.4, 289.0], [21.5, 289.0], [21.6, 289.0], [21.7, 289.0], [21.8, 289.0], [21.9, 289.0], [22.0, 290.0], [22.1, 290.0], [22.2, 290.0], [22.3, 290.0], [22.4, 290.0], [22.5, 290.0], [22.6, 290.0], [22.7, 290.0], [22.8, 290.0], [22.9, 290.0], [23.0, 291.0], [23.1, 291.0], [23.2, 291.0], [23.3, 291.0], [23.4, 291.0], [23.5, 291.0], [23.6, 291.0], [23.7, 291.0], [23.8, 291.0], [23.9, 291.0], [24.0, 291.0], [24.1, 291.0], [24.2, 291.0], [24.3, 291.0], [24.4, 291.0], [24.5, 291.0], [24.6, 291.0], [24.7, 291.0], [24.8, 291.0], [24.9, 291.0], [25.0, 292.0], [25.1, 292.0], [25.2, 292.0], [25.3, 292.0], [25.4, 292.0], [25.5, 292.0], [25.6, 292.0], [25.7, 292.0], [25.8, 292.0], [25.9, 292.0], [26.0, 292.0], [26.1, 292.0], [26.2, 292.0], [26.3, 292.0], [26.4, 292.0], [26.5, 292.0], [26.6, 292.0], [26.7, 292.0], [26.8, 292.0], [26.9, 292.0], [27.0, 293.0], [27.1, 293.0], [27.2, 293.0], [27.3, 293.0], [27.4, 293.0], [27.5, 293.0], [27.6, 293.0], [27.7, 293.0], [27.8, 293.0], [27.9, 293.0], [28.0, 293.0], [28.1, 293.0], [28.2, 293.0], [28.3, 293.0], [28.4, 293.0], [28.5, 294.0], [28.6, 294.0], [28.7, 294.0], [28.8, 294.0], [28.9, 294.0], [29.0, 294.0], [29.1, 294.0], [29.2, 294.0], [29.3, 294.0], [29.4, 294.0], [29.5, 294.0], [29.6, 294.0], [29.7, 294.0], [29.8, 294.0], [29.9, 294.0], [30.0, 295.0], [30.1, 295.0], [30.2, 295.0], [30.3, 295.0], [30.4, 295.0], [30.5, 296.0], [30.6, 296.0], [30.7, 296.0], [30.8, 296.0], [30.9, 296.0], [31.0, 296.0], [31.1, 296.0], [31.2, 296.0], [31.3, 296.0], [31.4, 296.0], [31.5, 296.0], [31.6, 296.0], [31.7, 296.0], [31.8, 296.0], [31.9, 296.0], [32.0, 296.0], [32.1, 296.0], [32.2, 296.0], [32.3, 296.0], [32.4, 296.0], [32.5, 298.0], [32.6, 298.0], [32.7, 298.0], [32.8, 298.0], [32.9, 298.0], [33.0, 298.0], [33.1, 298.0], [33.2, 298.0], [33.3, 298.0], [33.4, 298.0], [33.5, 298.0], [33.6, 298.0], [33.7, 298.0], [33.8, 298.0], [33.9, 298.0], [34.0, 299.0], [34.1, 299.0], [34.2, 299.0], [34.3, 299.0], [34.4, 299.0], [34.5, 299.0], [34.6, 299.0], [34.7, 299.0], [34.8, 299.0], [34.9, 299.0], [35.0, 300.0], [35.1, 300.0], [35.2, 300.0], [35.3, 300.0], [35.4, 300.0], [35.5, 300.0], [35.6, 300.0], [35.7, 300.0], [35.8, 300.0], [35.9, 300.0], [36.0, 301.0], [36.1, 301.0], [36.2, 301.0], [36.3, 301.0], [36.4, 301.0], [36.5, 301.0], [36.6, 301.0], [36.7, 301.0], [36.8, 301.0], [36.9, 301.0], [37.0, 301.0], [37.1, 301.0], [37.2, 301.0], [37.3, 301.0], [37.4, 301.0], [37.5, 301.0], [37.6, 301.0], [37.7, 301.0], [37.8, 301.0], [37.9, 301.0], [38.0, 302.0], [38.1, 302.0], [38.2, 302.0], [38.3, 302.0], [38.4, 302.0], [38.5, 302.0], [38.6, 302.0], [38.7, 302.0], [38.8, 302.0], [38.9, 302.0], [39.0, 303.0], [39.1, 303.0], [39.2, 303.0], [39.3, 303.0], [39.4, 303.0], [39.5, 303.0], [39.6, 303.0], [39.7, 303.0], [39.8, 303.0], [39.9, 303.0], [40.0, 303.0], [40.1, 303.0], [40.2, 303.0], [40.3, 303.0], [40.4, 303.0], [40.5, 304.0], [40.6, 304.0], [40.7, 304.0], [40.8, 304.0], [40.9, 304.0], [41.0, 305.0], [41.1, 305.0], [41.2, 305.0], [41.3, 305.0], [41.4, 305.0], [41.5, 305.0], [41.6, 305.0], [41.7, 305.0], [41.8, 305.0], [41.9, 305.0], [42.0, 305.0], [42.1, 305.0], [42.2, 305.0], [42.3, 305.0], [42.4, 305.0], [42.5, 306.0], [42.6, 306.0], [42.7, 306.0], [42.8, 306.0], [42.9, 306.0], [43.0, 306.0], [43.1, 306.0], [43.2, 306.0], [43.3, 306.0], [43.4, 306.0], [43.5, 307.0], [43.6, 307.0], [43.7, 307.0], [43.8, 307.0], [43.9, 307.0], [44.0, 307.0], [44.1, 307.0], [44.2, 307.0], [44.3, 307.0], [44.4, 307.0], [44.5, 308.0], [44.6, 308.0], [44.7, 308.0], [44.8, 308.0], [44.9, 308.0], [45.0, 308.0], [45.1, 308.0], [45.2, 308.0], [45.3, 308.0], [45.4, 308.0], [45.5, 309.0], [45.6, 309.0], [45.7, 309.0], [45.8, 309.0], [45.9, 309.0], [46.0, 309.0], [46.1, 309.0], [46.2, 309.0], [46.3, 309.0], [46.4, 309.0], [46.5, 309.0], [46.6, 309.0], [46.7, 309.0], [46.8, 309.0], [46.9, 309.0], [47.0, 310.0], [47.1, 310.0], [47.2, 310.0], [47.3, 310.0], [47.4, 310.0], [47.5, 311.0], [47.6, 311.0], [47.7, 311.0], [47.8, 311.0], [47.9, 311.0], [48.0, 311.0], [48.1, 311.0], [48.2, 311.0], [48.3, 311.0], [48.4, 311.0], [48.5, 312.0], [48.6, 312.0], [48.7, 312.0], [48.8, 312.0], [48.9, 312.0], [49.0, 312.0], [49.1, 312.0], [49.2, 312.0], [49.3, 312.0], [49.4, 312.0], [49.5, 313.0], [49.6, 313.0], [49.7, 313.0], [49.8, 313.0], [49.9, 313.0], [50.0, 313.0], [50.1, 313.0], [50.2, 313.0], [50.3, 313.0], [50.4, 313.0], [50.5, 314.0], [50.6, 314.0], [50.7, 314.0], [50.8, 314.0], [50.9, 314.0], [51.0, 314.0], [51.1, 314.0], [51.2, 314.0], [51.3, 314.0], [51.4, 314.0], [51.5, 314.0], [51.6, 314.0], [51.7, 314.0], [51.8, 314.0], [51.9, 314.0], [52.0, 314.0], [52.1, 314.0], [52.2, 314.0], [52.3, 314.0], [52.4, 314.0], [52.5, 315.0], [52.6, 315.0], [52.7, 315.0], [52.8, 315.0], [52.9, 315.0], [53.0, 316.0], [53.1, 316.0], [53.2, 316.0], [53.3, 316.0], [53.4, 316.0], [53.5, 316.0], [53.6, 316.0], [53.7, 316.0], [53.8, 316.0], [53.9, 316.0], [54.0, 317.0], [54.1, 317.0], [54.2, 317.0], [54.3, 317.0], [54.4, 317.0], [54.5, 317.0], [54.6, 317.0], [54.7, 317.0], [54.8, 317.0], [54.9, 317.0], [55.0, 317.0], [55.1, 317.0], [55.2, 317.0], [55.3, 317.0], [55.4, 317.0], [55.5, 317.0], [55.6, 317.0], [55.7, 317.0], [55.8, 317.0], [55.9, 317.0], [56.0, 318.0], [56.1, 318.0], [56.2, 318.0], [56.3, 318.0], [56.4, 318.0], [56.5, 319.0], [56.6, 319.0], [56.7, 319.0], [56.8, 319.0], [56.9, 319.0], [57.0, 319.0], [57.1, 319.0], [57.2, 319.0], [57.3, 319.0], [57.4, 319.0], [57.5, 320.0], [57.6, 320.0], [57.7, 320.0], [57.8, 320.0], [57.9, 320.0], [58.0, 322.0], [58.1, 322.0], [58.2, 322.0], [58.3, 322.0], [58.4, 322.0], [58.5, 322.0], [58.6, 322.0], [58.7, 322.0], [58.8, 322.0], [58.9, 322.0], [59.0, 324.0], [59.1, 324.0], [59.2, 324.0], [59.3, 324.0], [59.4, 324.0], [59.5, 325.0], [59.6, 325.0], [59.7, 325.0], [59.8, 325.0], [59.9, 325.0], [60.0, 325.0], [60.1, 325.0], [60.2, 325.0], [60.3, 325.0], [60.4, 325.0], [60.5, 326.0], [60.6, 326.0], [60.7, 326.0], [60.8, 326.0], [60.9, 326.0], [61.0, 327.0], [61.1, 327.0], [61.2, 327.0], [61.3, 327.0], [61.4, 327.0], [61.5, 329.0], [61.6, 329.0], [61.7, 329.0], [61.8, 329.0], [61.9, 329.0], [62.0, 329.0], [62.1, 329.0], [62.2, 329.0], [62.3, 329.0], [62.4, 329.0], [62.5, 329.0], [62.6, 329.0], [62.7, 329.0], [62.8, 329.0], [62.9, 329.0], [63.0, 330.0], [63.1, 330.0], [63.2, 330.0], [63.3, 330.0], [63.4, 330.0], [63.5, 331.0], [63.6, 331.0], [63.7, 331.0], [63.8, 331.0], [63.9, 331.0], [64.0, 333.0], [64.1, 333.0], [64.2, 333.0], [64.3, 333.0], [64.4, 333.0], [64.5, 333.0], [64.6, 333.0], [64.7, 333.0], [64.8, 333.0], [64.9, 333.0], [65.0, 333.0], [65.1, 333.0], [65.2, 333.0], [65.3, 333.0], [65.4, 333.0], [65.5, 334.0], [65.6, 334.0], [65.7, 334.0], [65.8, 334.0], [65.9, 334.0], [66.0, 334.0], [66.1, 334.0], [66.2, 334.0], [66.3, 334.0], [66.4, 334.0], [66.5, 334.0], [66.6, 334.0], [66.7, 334.0], [66.8, 334.0], [66.9, 334.0], [67.0, 334.0], [67.1, 334.0], [67.2, 334.0], [67.3, 334.0], [67.4, 334.0], [67.5, 335.0], [67.6, 335.0], [67.7, 335.0], [67.8, 335.0], [67.9, 335.0], [68.0, 335.0], [68.1, 335.0], [68.2, 335.0], [68.3, 335.0], [68.4, 335.0], [68.5, 336.0], [68.6, 336.0], [68.7, 336.0], [68.8, 336.0], [68.9, 336.0], [69.0, 336.0], [69.1, 336.0], [69.2, 336.0], [69.3, 336.0], [69.4, 336.0], [69.5, 336.0], [69.6, 336.0], [69.7, 336.0], [69.8, 336.0], [69.9, 336.0], [70.0, 336.0], [70.1, 336.0], [70.2, 336.0], [70.3, 336.0], [70.4, 336.0], [70.5, 336.0], [70.6, 336.0], [70.7, 336.0], [70.8, 336.0], [70.9, 336.0], [71.0, 336.0], [71.1, 336.0], [71.2, 336.0], [71.3, 336.0], [71.4, 336.0], [71.5, 337.0], [71.6, 337.0], [71.7, 337.0], [71.8, 337.0], [71.9, 337.0], [72.0, 338.0], [72.1, 338.0], [72.2, 338.0], [72.3, 338.0], [72.4, 338.0], [72.5, 339.0], [72.6, 339.0], [72.7, 339.0], [72.8, 339.0], [72.9, 339.0], [73.0, 340.0], [73.1, 340.0], [73.2, 340.0], [73.3, 340.0], [73.4, 340.0], [73.5, 340.0], [73.6, 340.0], [73.7, 340.0], [73.8, 340.0], [73.9, 340.0], [74.0, 340.0], [74.1, 340.0], [74.2, 340.0], [74.3, 340.0], [74.4, 340.0], [74.5, 341.0], [74.6, 341.0], [74.7, 341.0], [74.8, 341.0], [74.9, 341.0], [75.0, 343.0], [75.1, 343.0], [75.2, 343.0], [75.3, 343.0], [75.4, 343.0], [75.5, 344.0], [75.6, 344.0], [75.7, 344.0], [75.8, 344.0], [75.9, 344.0], [76.0, 345.0], [76.1, 345.0], [76.2, 345.0], [76.3, 345.0], [76.4, 345.0], [76.5, 345.0], [76.6, 345.0], [76.7, 345.0], [76.8, 345.0], [76.9, 345.0], [77.0, 347.0], [77.1, 347.0], [77.2, 347.0], [77.3, 347.0], [77.4, 347.0], [77.5, 347.0], [77.6, 347.0], [77.7, 347.0], [77.8, 347.0], [77.9, 347.0], [78.0, 348.0], [78.1, 348.0], [78.2, 348.0], [78.3, 348.0], [78.4, 348.0], [78.5, 357.0], [78.6, 357.0], [78.7, 357.0], [78.8, 357.0], [78.9, 357.0], [79.0, 359.0], [79.1, 359.0], [79.2, 359.0], [79.3, 359.0], [79.4, 359.0], [79.5, 360.0], [79.6, 360.0], [79.7, 360.0], [79.8, 360.0], [79.9, 360.0], [80.0, 364.0], [80.1, 364.0], [80.2, 364.0], [80.3, 364.0], [80.4, 364.0], [80.5, 368.0], [80.6, 368.0], [80.7, 368.0], [80.8, 368.0], [80.9, 368.0], [81.0, 369.0], [81.1, 369.0], [81.2, 369.0], [81.3, 369.0], [81.4, 369.0], [81.5, 371.0], [81.6, 371.0], [81.7, 371.0], [81.8, 371.0], [81.9, 371.0], [82.0, 372.0], [82.1, 372.0], [82.2, 372.0], [82.3, 372.0], [82.4, 372.0], [82.5, 374.0], [82.6, 374.0], [82.7, 374.0], [82.8, 374.0], [82.9, 374.0], [83.0, 376.0], [83.1, 376.0], [83.2, 376.0], [83.3, 376.0], [83.4, 376.0], [83.5, 378.0], [83.6, 378.0], [83.7, 378.0], [83.8, 378.0], [83.9, 378.0], [84.0, 384.0], [84.1, 384.0], [84.2, 384.0], [84.3, 384.0], [84.4, 384.0], [84.5, 387.0], [84.6, 387.0], [84.7, 387.0], [84.8, 387.0], [84.9, 387.0], [85.0, 388.0], [85.1, 388.0], [85.2, 388.0], [85.3, 388.0], [85.4, 388.0], [85.5, 389.0], [85.6, 389.0], [85.7, 389.0], [85.8, 389.0], [85.9, 389.0], [86.0, 390.0], [86.1, 390.0], [86.2, 390.0], [86.3, 390.0], [86.4, 390.0], [86.5, 391.0], [86.6, 391.0], [86.7, 391.0], [86.8, 391.0], [86.9, 391.0], [87.0, 392.0], [87.1, 392.0], [87.2, 392.0], [87.3, 392.0], [87.4, 392.0], [87.5, 396.0], [87.6, 396.0], [87.7, 396.0], [87.8, 396.0], [87.9, 396.0], [88.0, 401.0], [88.1, 401.0], [88.2, 401.0], [88.3, 401.0], [88.4, 401.0], [88.5, 414.0], [88.6, 414.0], [88.7, 414.0], [88.8, 414.0], [88.9, 414.0], [89.0, 414.0], [89.1, 414.0], [89.2, 414.0], [89.3, 414.0], [89.4, 414.0], [89.5, 416.0], [89.6, 416.0], [89.7, 416.0], [89.8, 416.0], [89.9, 416.0], [90.0, 417.0], [90.1, 417.0], [90.2, 417.0], [90.3, 417.0], [90.4, 417.0], [90.5, 418.0], [90.6, 418.0], [90.7, 418.0], [90.8, 418.0], [90.9, 418.0], [91.0, 419.0], [91.1, 419.0], [91.2, 419.0], [91.3, 419.0], [91.4, 419.0], [91.5, 419.0], [91.6, 419.0], [91.7, 419.0], [91.8, 419.0], [91.9, 419.0], [92.0, 419.0], [92.1, 419.0], [92.2, 419.0], [92.3, 419.0], [92.4, 419.0], [92.5, 420.0], [92.6, 420.0], [92.7, 420.0], [92.8, 420.0], [92.9, 420.0], [93.0, 421.0], [93.1, 421.0], [93.2, 421.0], [93.3, 421.0], [93.4, 421.0], [93.5, 423.0], [93.6, 423.0], [93.7, 423.0], [93.8, 423.0], [93.9, 423.0], [94.0, 423.0], [94.1, 423.0], [94.2, 423.0], [94.3, 423.0], [94.4, 423.0], [94.5, 424.0], [94.6, 424.0], [94.7, 424.0], [94.8, 424.0], [94.9, 424.0], [95.0, 425.0], [95.1, 425.0], [95.2, 425.0], [95.3, 425.0], [95.4, 425.0], [95.5, 426.0], [95.6, 426.0], [95.7, 426.0], [95.8, 426.0], [95.9, 426.0], [96.0, 427.0], [96.1, 427.0], [96.2, 427.0], [96.3, 427.0], [96.4, 427.0], [96.5, 428.0], [96.6, 428.0], [96.7, 428.0], [96.8, 428.0], [96.9, 428.0], [97.0, 429.0], [97.1, 429.0], [97.2, 429.0], [97.3, 429.0], [97.4, 429.0], [97.5, 430.0], [97.6, 430.0], [97.7, 430.0], [97.8, 430.0], [97.9, 430.0], [98.0, 430.0], [98.1, 430.0], [98.2, 430.0], [98.3, 430.0], [98.4, 430.0], [98.5, 431.0], [98.6, 431.0], [98.7, 431.0], [98.8, 431.0], [98.9, 431.0], [99.0, 469.0], [99.1, 469.0], [99.2, 469.0], [99.3, 469.0], [99.4, 469.0], [99.5, 485.0], [99.6, 485.0], [99.7, 485.0], [99.8, 485.0], [99.9, 485.0]], "isOverall": false, "label": "Auth", "isController": false}, {"data": [[0.0, 279.0], [0.1, 279.0], [0.2, 279.0], [0.3, 279.0], [0.4, 279.0], [0.5, 281.0], [0.6, 281.0], [0.7, 281.0], [0.8, 281.0], [0.9, 281.0], [1.0, 284.0], [1.1, 284.0], [1.2, 284.0], [1.3, 284.0], [1.4, 284.0], [1.5, 284.0], [1.6, 284.0], [1.7, 284.0], [1.8, 284.0], [1.9, 284.0], [2.0, 284.0], [2.1, 284.0], [2.2, 284.0], [2.3, 284.0], [2.4, 284.0], [2.5, 284.0], [2.6, 284.0], [2.7, 284.0], [2.8, 284.0], [2.9, 284.0], [3.0, 284.0], [3.1, 284.0], [3.2, 284.0], [3.3, 284.0], [3.4, 284.0], [3.5, 285.0], [3.6, 285.0], [3.7, 285.0], [3.8, 285.0], [3.9, 285.0], [4.0, 285.0], [4.1, 285.0], [4.2, 285.0], [4.3, 285.0], [4.4, 285.0], [4.5, 286.0], [4.6, 286.0], [4.7, 286.0], [4.8, 286.0], [4.9, 286.0], [5.0, 286.0], [5.1, 286.0], [5.2, 286.0], [5.3, 286.0], [5.4, 286.0], [5.5, 286.0], [5.6, 286.0], [5.7, 286.0], [5.8, 286.0], [5.9, 286.0], [6.0, 286.0], [6.1, 286.0], [6.2, 286.0], [6.3, 286.0], [6.4, 286.0], [6.5, 288.0], [6.6, 288.0], [6.7, 288.0], [6.8, 288.0], [6.9, 288.0], [7.0, 288.0], [7.1, 288.0], [7.2, 288.0], [7.3, 288.0], [7.4, 288.0], [7.5, 288.0], [7.6, 288.0], [7.7, 288.0], [7.8, 288.0], [7.9, 288.0], [8.0, 289.0], [8.1, 289.0], [8.2, 289.0], [8.3, 289.0], [8.4, 289.0], [8.5, 289.0], [8.6, 289.0], [8.7, 289.0], [8.8, 289.0], [8.9, 289.0], [9.0, 289.0], [9.1, 289.0], [9.2, 289.0], [9.3, 289.0], [9.4, 289.0], [9.5, 291.0], [9.6, 291.0], [9.7, 291.0], [9.8, 291.0], [9.9, 291.0], [10.0, 291.0], [10.1, 291.0], [10.2, 291.0], [10.3, 291.0], [10.4, 291.0], [10.5, 292.0], [10.6, 292.0], [10.7, 292.0], [10.8, 292.0], [10.9, 292.0], [11.0, 292.0], [11.1, 292.0], [11.2, 292.0], [11.3, 292.0], [11.4, 292.0], [11.5, 292.0], [11.6, 292.0], [11.7, 292.0], [11.8, 292.0], [11.9, 292.0], [12.0, 292.0], [12.1, 292.0], [12.2, 292.0], [12.3, 292.0], [12.4, 292.0], [12.5, 293.0], [12.6, 293.0], [12.7, 293.0], [12.8, 293.0], [12.9, 293.0], [13.0, 293.0], [13.1, 293.0], [13.2, 293.0], [13.3, 293.0], [13.4, 293.0], [13.5, 293.0], [13.6, 293.0], [13.7, 293.0], [13.8, 293.0], [13.9, 293.0], [14.0, 293.0], [14.1, 293.0], [14.2, 293.0], [14.3, 293.0], [14.4, 293.0], [14.5, 293.0], [14.6, 293.0], [14.7, 293.0], [14.8, 293.0], [14.9, 293.0], [15.0, 293.0], [15.1, 293.0], [15.2, 293.0], [15.3, 293.0], [15.4, 293.0], [15.5, 294.0], [15.6, 294.0], [15.7, 294.0], [15.8, 294.0], [15.9, 294.0], [16.0, 294.0], [16.1, 294.0], [16.2, 294.0], [16.3, 294.0], [16.4, 294.0], [16.5, 294.0], [16.6, 294.0], [16.7, 294.0], [16.8, 294.0], [16.9, 294.0], [17.0, 294.0], [17.1, 294.0], [17.2, 294.0], [17.3, 294.0], [17.4, 294.0], [17.5, 294.0], [17.6, 294.0], [17.7, 294.0], [17.8, 294.0], [17.9, 294.0], [18.0, 295.0], [18.1, 295.0], [18.2, 295.0], [18.3, 295.0], [18.4, 295.0], [18.5, 295.0], [18.6, 295.0], [18.7, 295.0], [18.8, 295.0], [18.9, 295.0], [19.0, 295.0], [19.1, 295.0], [19.2, 295.0], [19.3, 295.0], [19.4, 295.0], [19.5, 297.0], [19.6, 297.0], [19.7, 297.0], [19.8, 297.0], [19.9, 297.0], [20.0, 297.0], [20.1, 297.0], [20.2, 297.0], [20.3, 297.0], [20.4, 297.0], [20.5, 298.0], [20.6, 298.0], [20.7, 298.0], [20.8, 298.0], [20.9, 298.0], [21.0, 298.0], [21.1, 298.0], [21.2, 298.0], [21.3, 298.0], [21.4, 298.0], [21.5, 300.0], [21.6, 300.0], [21.7, 300.0], [21.8, 300.0], [21.9, 300.0], [22.0, 301.0], [22.1, 301.0], [22.2, 301.0], [22.3, 301.0], [22.4, 301.0], [22.5, 301.0], [22.6, 301.0], [22.7, 301.0], [22.8, 301.0], [22.9, 301.0], [23.0, 302.0], [23.1, 302.0], [23.2, 302.0], [23.3, 302.0], [23.4, 302.0], [23.5, 302.0], [23.6, 302.0], [23.7, 302.0], [23.8, 302.0], [23.9, 302.0], [24.0, 303.0], [24.1, 303.0], [24.2, 303.0], [24.3, 303.0], [24.4, 303.0], [24.5, 306.0], [24.6, 306.0], [24.7, 306.0], [24.8, 306.0], [24.9, 306.0], [25.0, 306.0], [25.1, 306.0], [25.2, 306.0], [25.3, 306.0], [25.4, 306.0], [25.5, 311.0], [25.6, 311.0], [25.7, 311.0], [25.8, 311.0], [25.9, 311.0], [26.0, 323.0], [26.1, 323.0], [26.2, 323.0], [26.3, 323.0], [26.4, 323.0], [26.5, 325.0], [26.6, 325.0], [26.7, 325.0], [26.8, 325.0], [26.9, 325.0], [27.0, 336.0], [27.1, 336.0], [27.2, 336.0], [27.3, 336.0], [27.4, 336.0], [27.5, 346.0], [27.6, 346.0], [27.7, 346.0], [27.8, 346.0], [27.9, 346.0], [28.0, 357.0], [28.1, 357.0], [28.2, 357.0], [28.3, 357.0], [28.4, 357.0], [28.5, 390.0], [28.6, 390.0], [28.7, 390.0], [28.8, 390.0], [28.9, 390.0], [29.0, 470.0], [29.1, 470.0], [29.2, 470.0], [29.3, 470.0], [29.4, 470.0], [29.5, 475.0], [29.6, 475.0], [29.7, 475.0], [29.8, 475.0], [29.9, 475.0], [30.0, 477.0], [30.1, 477.0], [30.2, 477.0], [30.3, 477.0], [30.4, 477.0], [30.5, 481.0], [30.6, 481.0], [30.7, 481.0], [30.8, 481.0], [30.9, 481.0], [31.0, 482.0], [31.1, 482.0], [31.2, 482.0], [31.3, 482.0], [31.4, 482.0], [31.5, 486.0], [31.6, 486.0], [31.7, 486.0], [31.8, 486.0], [31.9, 486.0], [32.0, 497.0], [32.1, 497.0], [32.2, 497.0], [32.3, 497.0], [32.4, 497.0], [32.5, 499.0], [32.6, 499.0], [32.7, 499.0], [32.8, 499.0], [32.9, 499.0], [33.0, 508.0], [33.1, 508.0], [33.2, 508.0], [33.3, 508.0], [33.4, 508.0], [33.5, 509.0], [33.6, 509.0], [33.7, 509.0], [33.8, 509.0], [33.9, 509.0], [34.0, 511.0], [34.1, 511.0], [34.2, 511.0], [34.3, 511.0], [34.4, 511.0], [34.5, 526.0], [34.6, 526.0], [34.7, 526.0], [34.8, 526.0], [34.9, 526.0], [35.0, 535.0], [35.1, 535.0], [35.2, 535.0], [35.3, 535.0], [35.4, 535.0], [35.5, 536.0], [35.6, 536.0], [35.7, 536.0], [35.8, 536.0], [35.9, 536.0], [36.0, 538.0], [36.1, 538.0], [36.2, 538.0], [36.3, 538.0], [36.4, 538.0], [36.5, 538.0], [36.6, 538.0], [36.7, 538.0], [36.8, 538.0], [36.9, 538.0], [37.0, 539.0], [37.1, 539.0], [37.2, 539.0], [37.3, 539.0], [37.4, 539.0], [37.5, 540.0], [37.6, 540.0], [37.7, 540.0], [37.8, 540.0], [37.9, 540.0], [38.0, 562.0], [38.1, 562.0], [38.2, 562.0], [38.3, 562.0], [38.4, 562.0], [38.5, 563.0], [38.6, 563.0], [38.7, 563.0], [38.8, 563.0], [38.9, 563.0], [39.0, 563.0], [39.1, 563.0], [39.2, 563.0], [39.3, 563.0], [39.4, 563.0], [39.5, 564.0], [39.6, 564.0], [39.7, 564.0], [39.8, 564.0], [39.9, 564.0], [40.0, 564.0], [40.1, 564.0], [40.2, 564.0], [40.3, 564.0], [40.4, 564.0], [40.5, 565.0], [40.6, 565.0], [40.7, 565.0], [40.8, 565.0], [40.9, 565.0], [41.0, 568.0], [41.1, 568.0], [41.2, 568.0], [41.3, 568.0], [41.4, 568.0], [41.5, 569.0], [41.6, 569.0], [41.7, 569.0], [41.8, 569.0], [41.9, 569.0], [42.0, 574.0], [42.1, 574.0], [42.2, 574.0], [42.3, 574.0], [42.4, 574.0], [42.5, 575.0], [42.6, 575.0], [42.7, 575.0], [42.8, 575.0], [42.9, 575.0], [43.0, 581.0], [43.1, 581.0], [43.2, 581.0], [43.3, 581.0], [43.4, 581.0], [43.5, 585.0], [43.6, 585.0], [43.7, 585.0], [43.8, 585.0], [43.9, 585.0], [44.0, 588.0], [44.1, 588.0], [44.2, 588.0], [44.3, 588.0], [44.4, 588.0], [44.5, 595.0], [44.6, 595.0], [44.7, 595.0], [44.8, 595.0], [44.9, 595.0], [45.0, 598.0], [45.1, 598.0], [45.2, 598.0], [45.3, 598.0], [45.4, 598.0], [45.5, 598.0], [45.6, 598.0], [45.7, 598.0], [45.8, 598.0], [45.9, 598.0], [46.0, 599.0], [46.1, 599.0], [46.2, 599.0], [46.3, 599.0], [46.4, 599.0], [46.5, 600.0], [46.6, 600.0], [46.7, 600.0], [46.8, 600.0], [46.9, 600.0], [47.0, 606.0], [47.1, 606.0], [47.2, 606.0], [47.3, 606.0], [47.4, 606.0], [47.5, 610.0], [47.6, 610.0], [47.7, 610.0], [47.8, 610.0], [47.9, 610.0], [48.0, 611.0], [48.1, 611.0], [48.2, 611.0], [48.3, 611.0], [48.4, 611.0], [48.5, 612.0], [48.6, 612.0], [48.7, 612.0], [48.8, 612.0], [48.9, 612.0], [49.0, 622.0], [49.1, 622.0], [49.2, 622.0], [49.3, 622.0], [49.4, 622.0], [49.5, 624.0], [49.6, 624.0], [49.7, 624.0], [49.8, 624.0], [49.9, 624.0], [50.0, 633.0], [50.1, 633.0], [50.2, 633.0], [50.3, 633.0], [50.4, 633.0], [50.5, 638.0], [50.6, 638.0], [50.7, 638.0], [50.8, 638.0], [50.9, 638.0], [51.0, 655.0], [51.1, 655.0], [51.2, 655.0], [51.3, 655.0], [51.4, 655.0], [51.5, 665.0], [51.6, 665.0], [51.7, 665.0], [51.8, 665.0], [51.9, 665.0], [52.0, 707.0], [52.1, 707.0], [52.2, 707.0], [52.3, 707.0], [52.4, 707.0], [52.5, 709.0], [52.6, 709.0], [52.7, 709.0], [52.8, 709.0], [52.9, 709.0], [53.0, 717.0], [53.1, 717.0], [53.2, 717.0], [53.3, 717.0], [53.4, 717.0], [53.5, 719.0], [53.6, 719.0], [53.7, 719.0], [53.8, 719.0], [53.9, 719.0], [54.0, 743.0], [54.1, 743.0], [54.2, 743.0], [54.3, 743.0], [54.4, 743.0], [54.5, 744.0], [54.6, 744.0], [54.7, 744.0], [54.8, 744.0], [54.9, 744.0], [55.0, 752.0], [55.1, 752.0], [55.2, 752.0], [55.3, 752.0], [55.4, 752.0], [55.5, 764.0], [55.6, 764.0], [55.7, 764.0], [55.8, 764.0], [55.9, 764.0], [56.0, 765.0], [56.1, 765.0], [56.2, 765.0], [56.3, 765.0], [56.4, 765.0], [56.5, 767.0], [56.6, 767.0], [56.7, 767.0], [56.8, 767.0], [56.9, 767.0], [57.0, 768.0], [57.1, 768.0], [57.2, 768.0], [57.3, 768.0], [57.4, 768.0], [57.5, 769.0], [57.6, 769.0], [57.7, 769.0], [57.8, 769.0], [57.9, 769.0], [58.0, 771.0], [58.1, 771.0], [58.2, 771.0], [58.3, 771.0], [58.4, 771.0], [58.5, 772.0], [58.6, 772.0], [58.7, 772.0], [58.8, 772.0], [58.9, 772.0], [59.0, 774.0], [59.1, 774.0], [59.2, 774.0], [59.3, 774.0], [59.4, 774.0], [59.5, 783.0], [59.6, 783.0], [59.7, 783.0], [59.8, 783.0], [59.9, 783.0], [60.0, 787.0], [60.1, 787.0], [60.2, 787.0], [60.3, 787.0], [60.4, 787.0], [60.5, 827.0], [60.6, 827.0], [60.7, 827.0], [60.8, 827.0], [60.9, 827.0], [61.0, 869.0], [61.1, 869.0], [61.2, 869.0], [61.3, 869.0], [61.4, 869.0], [61.5, 884.0], [61.6, 884.0], [61.7, 884.0], [61.8, 884.0], [61.9, 884.0], [62.0, 895.0], [62.1, 895.0], [62.2, 895.0], [62.3, 895.0], [62.4, 895.0], [62.5, 895.0], [62.6, 895.0], [62.7, 895.0], [62.8, 895.0], [62.9, 895.0], [63.0, 898.0], [63.1, 898.0], [63.2, 898.0], [63.3, 898.0], [63.4, 898.0], [63.5, 900.0], [63.6, 900.0], [63.7, 900.0], [63.8, 900.0], [63.9, 900.0], [64.0, 901.0], [64.1, 901.0], [64.2, 901.0], [64.3, 901.0], [64.4, 901.0], [64.5, 903.0], [64.6, 903.0], [64.7, 903.0], [64.8, 903.0], [64.9, 903.0], [65.0, 903.0], [65.1, 903.0], [65.2, 903.0], [65.3, 903.0], [65.4, 903.0], [65.5, 907.0], [65.6, 907.0], [65.7, 907.0], [65.8, 907.0], [65.9, 907.0], [66.0, 907.0], [66.1, 907.0], [66.2, 907.0], [66.3, 907.0], [66.4, 907.0], [66.5, 908.0], [66.6, 908.0], [66.7, 908.0], [66.8, 908.0], [66.9, 908.0], [67.0, 909.0], [67.1, 909.0], [67.2, 909.0], [67.3, 909.0], [67.4, 909.0], [67.5, 909.0], [67.6, 909.0], [67.7, 909.0], [67.8, 909.0], [67.9, 909.0], [68.0, 910.0], [68.1, 910.0], [68.2, 910.0], [68.3, 910.0], [68.4, 910.0], [68.5, 910.0], [68.6, 910.0], [68.7, 910.0], [68.8, 910.0], [68.9, 910.0], [69.0, 911.0], [69.1, 911.0], [69.2, 911.0], [69.3, 911.0], [69.4, 911.0], [69.5, 913.0], [69.6, 913.0], [69.7, 913.0], [69.8, 913.0], [69.9, 913.0], [70.0, 916.0], [70.1, 916.0], [70.2, 916.0], [70.3, 916.0], [70.4, 916.0], [70.5, 916.0], [70.6, 916.0], [70.7, 916.0], [70.8, 916.0], [70.9, 916.0], [71.0, 916.0], [71.1, 916.0], [71.2, 916.0], [71.3, 916.0], [71.4, 916.0], [71.5, 951.0], [71.6, 951.0], [71.7, 951.0], [71.8, 951.0], [71.9, 951.0], [72.0, 951.0], [72.1, 951.0], [72.2, 951.0], [72.3, 951.0], [72.4, 951.0], [72.5, 954.0], [72.6, 954.0], [72.7, 954.0], [72.8, 954.0], [72.9, 954.0], [73.0, 954.0], [73.1, 954.0], [73.2, 954.0], [73.3, 954.0], [73.4, 954.0], [73.5, 956.0], [73.6, 956.0], [73.7, 956.0], [73.8, 956.0], [73.9, 956.0], [74.0, 960.0], [74.1, 960.0], [74.2, 960.0], [74.3, 960.0], [74.4, 960.0], [74.5, 963.0], [74.6, 963.0], [74.7, 963.0], [74.8, 963.0], [74.9, 963.0], [75.0, 977.0], [75.1, 977.0], [75.2, 977.0], [75.3, 977.0], [75.4, 977.0], [75.5, 984.0], [75.6, 984.0], [75.7, 984.0], [75.8, 984.0], [75.9, 984.0], [76.0, 998.0], [76.1, 998.0], [76.2, 998.0], [76.3, 998.0], [76.4, 998.0], [76.5, 1002.0], [76.6, 1002.0], [76.7, 1002.0], [76.8, 1002.0], [76.9, 1002.0], [77.0, 1009.0], [77.1, 1009.0], [77.2, 1009.0], [77.3, 1009.0], [77.4, 1009.0], [77.5, 1013.0], [77.6, 1013.0], [77.7, 1013.0], [77.8, 1013.0], [77.9, 1013.0], [78.0, 1017.0], [78.1, 1017.0], [78.2, 1017.0], [78.3, 1017.0], [78.4, 1017.0], [78.5, 1028.0], [78.6, 1028.0], [78.7, 1028.0], [78.8, 1028.0], [78.9, 1028.0], [79.0, 1038.0], [79.1, 1038.0], [79.2, 1038.0], [79.3, 1038.0], [79.4, 1038.0], [79.5, 1038.0], [79.6, 1038.0], [79.7, 1038.0], [79.8, 1038.0], [79.9, 1038.0], [80.0, 1039.0], [80.1, 1039.0], [80.2, 1039.0], [80.3, 1039.0], [80.4, 1039.0], [80.5, 1041.0], [80.6, 1041.0], [80.7, 1041.0], [80.8, 1041.0], [80.9, 1041.0], [81.0, 1042.0], [81.1, 1042.0], [81.2, 1042.0], [81.3, 1042.0], [81.4, 1042.0], [81.5, 1043.0], [81.6, 1043.0], [81.7, 1043.0], [81.8, 1043.0], [81.9, 1043.0], [82.0, 1043.0], [82.1, 1043.0], [82.2, 1043.0], [82.3, 1043.0], [82.4, 1043.0], [82.5, 1046.0], [82.6, 1046.0], [82.7, 1046.0], [82.8, 1046.0], [82.9, 1046.0], [83.0, 1047.0], [83.1, 1047.0], [83.2, 1047.0], [83.3, 1047.0], [83.4, 1047.0], [83.5, 1049.0], [83.6, 1049.0], [83.7, 1049.0], [83.8, 1049.0], [83.9, 1049.0], [84.0, 1051.0], [84.1, 1051.0], [84.2, 1051.0], [84.3, 1051.0], [84.4, 1051.0], [84.5, 1051.0], [84.6, 1051.0], [84.7, 1051.0], [84.8, 1051.0], [84.9, 1051.0], [85.0, 1052.0], [85.1, 1052.0], [85.2, 1052.0], [85.3, 1052.0], [85.4, 1052.0], [85.5, 1061.0], [85.6, 1061.0], [85.7, 1061.0], [85.8, 1061.0], [85.9, 1061.0], [86.0, 1066.0], [86.1, 1066.0], [86.2, 1066.0], [86.3, 1066.0], [86.4, 1066.0], [86.5, 1073.0], [86.6, 1073.0], [86.7, 1073.0], [86.8, 1073.0], [86.9, 1073.0], [87.0, 1077.0], [87.1, 1077.0], [87.2, 1077.0], [87.3, 1077.0], [87.4, 1077.0], [87.5, 1079.0], [87.6, 1079.0], [87.7, 1079.0], [87.8, 1079.0], [87.9, 1079.0], [88.0, 1079.0], [88.1, 1079.0], [88.2, 1079.0], [88.3, 1079.0], [88.4, 1079.0], [88.5, 1086.0], [88.6, 1086.0], [88.7, 1086.0], [88.8, 1086.0], [88.9, 1086.0], [89.0, 1088.0], [89.1, 1088.0], [89.2, 1088.0], [89.3, 1088.0], [89.4, 1088.0], [89.5, 1089.0], [89.6, 1089.0], [89.7, 1089.0], [89.8, 1089.0], [89.9, 1089.0], [90.0, 1099.0], [90.1, 1099.0], [90.2, 1099.0], [90.3, 1099.0], [90.4, 1099.0], [90.5, 1108.0], [90.6, 1108.0], [90.7, 1108.0], [90.8, 1108.0], [90.9, 1108.0], [91.0, 1119.0], [91.1, 1119.0], [91.2, 1119.0], [91.3, 1119.0], [91.4, 1119.0], [91.5, 1125.0], [91.6, 1125.0], [91.7, 1125.0], [91.8, 1125.0], [91.9, 1125.0], [92.0, 1145.0], [92.1, 1145.0], [92.2, 1145.0], [92.3, 1145.0], [92.4, 1145.0], [92.5, 1208.0], [92.6, 1208.0], [92.7, 1208.0], [92.8, 1208.0], [92.9, 1208.0], [93.0, 1250.0], [93.1, 1250.0], [93.2, 1250.0], [93.3, 1250.0], [93.4, 1250.0], [93.5, 1317.0], [93.6, 1317.0], [93.7, 1317.0], [93.8, 1317.0], [93.9, 1317.0], [94.0, 1381.0], [94.1, 1381.0], [94.2, 1381.0], [94.3, 1381.0], [94.4, 1381.0], [94.5, 1387.0], [94.6, 1387.0], [94.7, 1387.0], [94.8, 1387.0], [94.9, 1387.0], [95.0, 1388.0], [95.1, 1388.0], [95.2, 1388.0], [95.3, 1388.0], [95.4, 1388.0], [95.5, 1391.0], [95.6, 1391.0], [95.7, 1391.0], [95.8, 1391.0], [95.9, 1391.0], [96.0, 1393.0], [96.1, 1393.0], [96.2, 1393.0], [96.3, 1393.0], [96.4, 1393.0], [96.5, 1396.0], [96.6, 1396.0], [96.7, 1396.0], [96.8, 1396.0], [96.9, 1396.0], [97.0, 1401.0], [97.1, 1401.0], [97.2, 1401.0], [97.3, 1401.0], [97.4, 1401.0], [97.5, 1402.0], [97.6, 1402.0], [97.7, 1402.0], [97.8, 1402.0], [97.9, 1402.0], [98.0, 1402.0], [98.1, 1402.0], [98.2, 1402.0], [98.3, 1402.0], [98.4, 1402.0], [98.5, 1412.0], [98.6, 1412.0], [98.7, 1412.0], [98.8, 1412.0], [98.9, 1412.0], [99.0, 1414.0], [99.1, 1414.0], [99.2, 1414.0], [99.3, 1414.0], [99.4, 1414.0], [99.5, 1432.0], [99.6, 1432.0], [99.7, 1432.0], [99.8, 1432.0], [99.9, 1432.0]], "isOverall": false, "label": "Update", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 106.0, "series": [{"data": [[1100.0, 1.0], [300.0, 33.0], [600.0, 2.0], [700.0, 43.0], [800.0, 39.0], [400.0, 1.0], [200.0, 41.0], [1600.0, 1.0], [900.0, 31.0], [1000.0, 3.0], [500.0, 5.0]], "isOverall": false, "label": "Delete", "isController": false}, {"data": [[1100.0, 51.0], [1200.0, 18.0], [1300.0, 26.0], [1400.0, 9.0], [1500.0, 9.0], [1600.0, 8.0], [1700.0, 13.0], [1800.0, 3.0], [1900.0, 4.0], [2000.0, 4.0], [2100.0, 3.0], [2300.0, 2.0], [2200.0, 1.0], [2400.0, 4.0], [2500.0, 1.0], [2600.0, 3.0], [2700.0, 1.0], [2900.0, 2.0], [3000.0, 3.0], [3100.0, 1.0], [3300.0, 4.0], [3200.0, 2.0], [3400.0, 2.0], [3500.0, 2.0], [3600.0, 4.0], [3800.0, 1.0], [3900.0, 1.0], [4000.0, 1.0], [4300.0, 3.0], [4100.0, 2.0], [4200.0, 1.0], [4500.0, 4.0], [4600.0, 6.0], [4400.0, 1.0]], "isOverall": false, "label": "Create", "isController": false}, {"data": [[1100.0, 6.0], [300.0, 22.0], [600.0, 27.0], [700.0, 55.0], [400.0, 6.0], [200.0, 37.0], [800.0, 16.0], [900.0, 6.0], [500.0, 20.0], [1000.0, 5.0]], "isOverall": false, "label": "Get", "isController": false}, {"data": [[300.0, 106.0], [200.0, 70.0], [400.0, 24.0]], "isOverall": false, "label": "Auth", "isController": false}, {"data": [[600.0, 11.0], [700.0, 17.0], [800.0, 6.0], [200.0, 43.0], [900.0, 26.0], [1000.0, 28.0], [1100.0, 4.0], [1200.0, 2.0], [300.0, 15.0], [1300.0, 7.0], [1400.0, 6.0], [400.0, 8.0], [500.0, 27.0]], "isOverall": false, "label": "Update", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 97.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 496.0, "series": [{"data": [[0.0, 407.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 496.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 97.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 93.22599999999997, "minX": 1.64797308E12, "maxY": 93.22599999999997, "series": [{"data": [[1.64797308E12, 93.22599999999997]], "isOverall": false, "label": "Booking_API", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64797308E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 279.0, "minX": 1.0, "maxY": 3580.8333333333335, "series": [{"data": [[2.0, 293.0], [3.0, 294.0], [4.0, 286.0], [5.0, 291.0], [6.0, 316.0], [7.0, 331.0], [10.0, 330.0], [12.0, 326.0], [16.0, 324.75], [17.0, 544.0], [19.0, 679.0], [21.0, 637.3333333333334], [22.0, 768.0], [23.0, 293.0], [24.0, 291.0], [25.0, 284.0], [26.0, 291.0], [27.0, 304.0], [28.0, 294.0], [29.0, 283.0], [30.0, 294.0], [31.0, 289.0], [33.0, 293.0], [32.0, 289.0], [35.0, 290.0], [34.0, 290.0], [37.0, 288.0], [36.0, 291.0], [39.0, 284.0], [38.0, 281.0], [41.0, 287.5], [43.0, 280.0], [42.0, 295.0], [45.0, 303.0], [44.0, 306.0], [47.0, 297.0], [46.0, 301.0], [49.0, 290.0], [48.0, 292.0], [51.0, 287.0], [50.0, 295.0], [53.0, 293.5], [55.0, 292.0], [54.0, 294.0], [57.0, 302.75], [56.0, 287.0], [59.0, 337.0], [58.0, 338.0], [61.0, 335.0], [60.0, 332.0], [62.0, 331.0], [67.0, 707.0], [66.0, 398.6666666666667], [64.0, 335.5], [71.0, 580.0], [68.0, 454.3333333333333], [70.0, 340.0], [75.0, 591.0], [74.0, 709.0], [73.0, 709.0], [72.0, 389.0], [78.0, 704.0], [77.0, 704.0], [76.0, 714.0], [83.0, 716.6666666666666], [81.0, 723.0], [82.0, 707.5], [80.0, 702.5], [87.0, 723.6666666666666], [85.0, 719.0], [86.0, 706.0], [89.0, 1008.3333333333334], [91.0, 714.0], [90.0, 720.0], [88.0, 717.0], [92.0, 711.6666666666666], [94.0, 705.0], [93.0, 703.0], [119.0, 899.5714285714287], [118.0, 892.0], [117.0, 922.0], [116.0, 923.0], [123.0, 896.0], [122.0, 892.0], [125.0, 888.3333333333334], [124.0, 889.5], [135.0, 454.75], [133.0, 914.0], [131.0, 877.5], [128.0, 882.2], [141.0, 977.6666666666666], [140.0, 1068.0], [139.0, 939.75], [138.0, 884.1538461538461], [137.0, 629.3333333333334], [136.0, 770.4], [142.0, 842.5], [143.0, 945.0], [144.0, 915.0], [1.0, 300.0]], "isOverall": false, "label": "Delete", "isController": false}, {"data": [[85.42499999999998, 633.4699999999997]], "isOverall": false, "label": "Delete-Aggregated", "isController": false}, {"data": [[23.0, 1193.0], [25.0, 1149.0], [26.0, 1160.0], [28.0, 1149.0], [29.0, 1150.5], [31.0, 1149.0], [32.0, 1159.0], [35.0, 1178.0], [43.0, 1147.2], [42.0, 1161.0], [47.0, 1141.0], [51.0, 1143.0], [53.0, 1166.0], [55.0, 1148.0], [57.0, 1152.5], [56.0, 1144.5], [67.0, 1191.0], [66.0, 1159.0], [68.0, 1157.0], [69.0, 1162.0], [71.0, 1194.0], [72.0, 1159.0], [80.0, 1149.0], [81.0, 1195.5], [82.0, 1148.5], [83.0, 1141.0], [86.0, 3283.6666666666665], [84.0, 1235.0], [88.0, 3341.0], [91.0, 1508.8571428571427], [89.0, 1268.0], [93.0, 2361.0], [95.0, 2258.0], [92.0, 1257.5], [94.0, 1352.0], [96.0, 2726.5], [97.0, 3440.3333333333335], [98.0, 3580.8333333333335], [99.0, 2794.786885245902], [101.0, 1139.0], [104.0, 1197.0], [105.0, 1139.5], [106.0, 1239.0], [110.0, 1147.0], [115.0, 1420.75], [113.0, 1193.0], [116.0, 1434.75], [117.0, 1356.6666666666667], [118.0, 1235.5], [139.0, 1845.375], [140.0, 1814.0], [141.0, 1433.25], [138.0, 1129.0], [137.0, 1217.5], [136.0, 1125.0], [143.0, 1742.0], [142.0, 1534.125]], "isOverall": false, "label": "Create", "isController": false}, {"data": [[98.41499999999999, 1959.2400000000005]], "isOverall": false, "label": "Create-Aggregated", "isController": false}, {"data": [[21.0, 571.0], [22.0, 514.2], [24.0, 290.0], [25.0, 290.0], [26.0, 300.0], [29.0, 307.0], [30.0, 291.0], [32.0, 286.0], [35.0, 290.5], [43.0, 290.2], [42.0, 284.0], [49.0, 288.5], [53.0, 284.0], [55.0, 292.0], [57.0, 293.0], [56.0, 301.75], [64.0, 320.0], [70.0, 324.0], [71.0, 342.0], [72.0, 313.0], [81.0, 304.0], [82.0, 357.0], [84.0, 437.0], [85.0, 395.0], [86.0, 434.0], [87.0, 477.5], [88.0, 568.0], [89.0, 695.0], [90.0, 581.5], [91.0, 696.1666666666666], [92.0, 614.5], [93.0, 659.6666666666666], [94.0, 565.5], [99.0, 521.4], [101.0, 291.5], [102.0, 284.0], [103.0, 284.6666666666667], [104.0, 287.8333333333333], [105.0, 316.0], [106.0, 348.0], [108.0, 462.0], [111.0, 571.0], [112.0, 641.0], [113.0, 693.9230769230769], [114.0, 722.2352941176471], [115.0, 729.9230769230769], [116.0, 569.3333333333334], [117.0, 500.0], [134.0, 294.0], [139.0, 1133.3333333333333], [140.0, 1082.5], [143.0, 887.5833333333334], [142.0, 839.5384615384615], [144.0, 903.0]], "isOverall": false, "label": "Get", "isController": false}, {"data": [[99.27500000000005, 610.7950000000002]], "isOverall": false, "label": "Get-Aggregated", "isController": false}, {"data": [[16.0, 290.25], [22.0, 360.4285714285714], [23.0, 294.0], [24.0, 287.0], [26.0, 279.0], [28.0, 287.5], [29.0, 284.0], [30.0, 283.0], [31.0, 286.5], [33.0, 286.0], [39.0, 285.0], [43.0, 284.42857142857144], [51.0, 288.0], [53.0, 303.0], [55.0, 292.0], [56.0, 294.54545454545456], [67.0, 286.3333333333333], [68.0, 283.0], [69.0, 286.6666666666667], [70.0, 305.0], [80.0, 286.0], [81.0, 299.5555555555556], [82.0, 334.20000000000005], [83.0, 338.8333333333333], [87.0, 303.0], [84.0, 288.0], [85.0, 301.8571428571429], [86.0, 307.3333333333333], [89.0, 401.0], [90.0, 357.0], [91.0, 296.3333333333333], [93.0, 302.5], [107.0, 323.8], [108.0, 343.0], [109.0, 368.0], [110.0, 352.5], [111.0, 329.3333333333333], [112.0, 315.5], [114.0, 291.0], [116.0, 288.0], [118.0, 289.6666666666667], [119.0, 296.99999999999994], [120.0, 317.375], [121.0, 330.6666666666667], [122.0, 357.4], [123.0, 388.3333333333333], [124.0, 420.49999999999994], [125.0, 429.25], [126.0, 469.0], [134.0, 287.3333333333333], [135.0, 311.0], [142.0, 485.0]], "isOverall": false, "label": "Auth", "isController": false}, {"data": [[90.60999999999999, 327.77500000000015]], "isOverall": false, "label": "Auth-Aggregated", "isController": false}, {"data": [[35.0, 297.0], [36.0, 284.0], [43.0, 292.72727272727275], [44.0, 288.0], [47.0, 291.5], [56.0, 295.91666666666663], [57.0, 302.0], [66.0, 526.4], [65.0, 490.75], [67.0, 289.0], [4.0, 294.0], [68.0, 295.0], [69.0, 281.0], [83.0, 524.0], [81.0, 552.6666666666665], [80.0, 581.2941176470588], [84.0, 293.5], [86.0, 709.0], [94.0, 719.0], [6.0, 289.0], [115.0, 694.8333333333334], [118.0, 744.3333333333333], [119.0, 630.0], [116.0, 768.0], [121.0, 665.0], [125.0, 869.0], [128.0, 1002.0], [134.0, 1250.0], [135.0, 1024.0], [138.0, 1103.3636363636363], [139.0, 1041.3076923076924], [141.0, 1303.2], [140.0, 1125.0], [137.0, 918.0], [136.0, 1008.5], [16.0, 379.2857142857143], [17.0, 566.0], [21.0, 730.5], [22.0, 298.0], [23.0, 301.0], [24.0, 292.0], [25.0, 295.0], [26.0, 294.0], [29.0, 293.0], [30.0, 284.0], [31.0, 290.5]], "isOverall": false, "label": "Update", "isController": false}, {"data": [[92.40500000000003, 699.52]], "isOverall": false, "label": "Update-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 144.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 5610.883333333333, "minX": 1.64797308E12, "maxY": 5959.183333333333, "series": [{"data": [[1.64797308E12, 5959.183333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.64797308E12, 5610.883333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64797308E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 327.77500000000015, "minX": 1.64797308E12, "maxY": 1959.2400000000005, "series": [{"data": [[1.64797308E12, 633.4699999999997]], "isOverall": false, "label": "Delete", "isController": false}, {"data": [[1.64797308E12, 1959.2400000000005]], "isOverall": false, "label": "Create", "isController": false}, {"data": [[1.64797308E12, 610.7950000000002]], "isOverall": false, "label": "Get", "isController": false}, {"data": [[1.64797308E12, 327.77500000000015]], "isOverall": false, "label": "Auth", "isController": false}, {"data": [[1.64797308E12, 699.52]], "isOverall": false, "label": "Update", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64797308E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 327.74500000000006, "minX": 1.64797308E12, "maxY": 1959.1749999999993, "series": [{"data": [[1.64797308E12, 633.4250000000001]], "isOverall": false, "label": "Delete", "isController": false}, {"data": [[1.64797308E12, 1959.1749999999993]], "isOverall": false, "label": "Create", "isController": false}, {"data": [[1.64797308E12, 610.7499999999995]], "isOverall": false, "label": "Get", "isController": false}, {"data": [[1.64797308E12, 327.74500000000006]], "isOverall": false, "label": "Auth", "isController": false}, {"data": [[1.64797308E12, 699.5000000000006]], "isOverall": false, "label": "Update", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64797308E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.64797308E12, "maxY": 1353.345, "series": [{"data": [[1.64797308E12, 0.0]], "isOverall": false, "label": "Delete", "isController": false}, {"data": [[1.64797308E12, 1353.345]], "isOverall": false, "label": "Create", "isController": false}, {"data": [[1.64797308E12, 0.0]], "isOverall": false, "label": "Get", "isController": false}, {"data": [[1.64797308E12, 0.0]], "isOverall": false, "label": "Auth", "isController": false}, {"data": [[1.64797308E12, 0.0]], "isOverall": false, "label": "Update", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64797308E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 279.0, "minX": 1.64797308E12, "maxY": 4657.0, "series": [{"data": [[1.64797308E12, 4657.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.64797308E12, 1479.9]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.64797308E12, 4520.59]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.64797308E12, 2379.049999999999]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.64797308E12, 279.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.64797308E12, 701.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64797308E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 293.0, "minX": 10.0, "maxY": 3360.5, "series": [{"data": [[130.0, 293.0], [71.0, 388.0], [144.0, 489.5], [158.0, 1044.5], [10.0, 3360.5], [186.0, 731.0], [25.0, 300.0], [216.0, 823.0], [60.0, 343.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 216.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 293.0, "minX": 10.0, "maxY": 3360.5, "series": [{"data": [[130.0, 293.0], [71.0, 388.0], [144.0, 489.5], [158.0, 1044.5], [10.0, 3360.5], [186.0, 731.0], [25.0, 300.0], [216.0, 823.0], [60.0, 343.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 216.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.64797308E12, "maxY": 16.666666666666668, "series": [{"data": [[1.64797308E12, 16.666666666666668]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64797308E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 3.3333333333333335, "minX": 1.64797308E12, "maxY": 13.333333333333334, "series": [{"data": [[1.64797308E12, 13.333333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.64797308E12, 3.3333333333333335]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64797308E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 3.3333333333333335, "minX": 1.64797308E12, "maxY": 3.3333333333333335, "series": [{"data": [[1.64797308E12, 3.3333333333333335]], "isOverall": false, "label": "Create-success", "isController": false}, {"data": [[1.64797308E12, 3.3333333333333335]], "isOverall": false, "label": "Auth-success", "isController": false}, {"data": [[1.64797308E12, 3.3333333333333335]], "isOverall": false, "label": "Delete-success", "isController": false}, {"data": [[1.64797308E12, 3.3333333333333335]], "isOverall": false, "label": "Update-success", "isController": false}, {"data": [[1.64797308E12, 3.3333333333333335]], "isOverall": false, "label": "Get-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64797308E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.64797308E12, "maxY": 16.666666666666668, "series": [{"data": [[1.64797308E12, 16.666666666666668]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64797308E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

