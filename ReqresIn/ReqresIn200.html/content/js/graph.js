/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 8.0, "minX": 0.0, "maxY": 7508.0, "series": [{"data": [[0.0, 13.0], [0.1, 13.0], [0.2, 13.0], [0.3, 13.0], [0.4, 13.0], [0.5, 13.0], [0.6, 13.0], [0.7, 13.0], [0.8, 13.0], [0.9, 13.0], [1.0, 15.0], [1.1, 15.0], [1.2, 15.0], [1.3, 15.0], [1.4, 15.0], [1.5, 15.0], [1.6, 15.0], [1.7, 15.0], [1.8, 15.0], [1.9, 15.0], [2.0, 16.0], [2.1, 16.0], [2.2, 16.0], [2.3, 16.0], [2.4, 16.0], [2.5, 17.0], [2.6, 17.0], [2.7, 17.0], [2.8, 17.0], [2.9, 17.0], [3.0, 18.0], [3.1, 18.0], [3.2, 18.0], [3.3, 18.0], [3.4, 18.0], [3.5, 19.0], [3.6, 19.0], [3.7, 19.0], [3.8, 19.0], [3.9, 19.0], [4.0, 19.0], [4.1, 19.0], [4.2, 19.0], [4.3, 19.0], [4.4, 19.0], [4.5, 19.0], [4.6, 19.0], [4.7, 19.0], [4.8, 19.0], [4.9, 19.0], [5.0, 20.0], [5.1, 20.0], [5.2, 20.0], [5.3, 20.0], [5.4, 20.0], [5.5, 20.0], [5.6, 20.0], [5.7, 20.0], [5.8, 20.0], [5.9, 20.0], [6.0, 20.0], [6.1, 20.0], [6.2, 20.0], [6.3, 20.0], [6.4, 20.0], [6.5, 21.0], [6.6, 21.0], [6.7, 21.0], [6.8, 21.0], [6.9, 21.0], [7.0, 21.0], [7.1, 21.0], [7.2, 21.0], [7.3, 21.0], [7.4, 21.0], [7.5, 21.0], [7.6, 21.0], [7.7, 21.0], [7.8, 21.0], [7.9, 21.0], [8.0, 22.0], [8.1, 22.0], [8.2, 22.0], [8.3, 22.0], [8.4, 22.0], [8.5, 22.0], [8.6, 22.0], [8.7, 22.0], [8.8, 22.0], [8.9, 22.0], [9.0, 22.0], [9.1, 22.0], [9.2, 22.0], [9.3, 22.0], [9.4, 22.0], [9.5, 23.0], [9.6, 23.0], [9.7, 23.0], [9.8, 23.0], [9.9, 23.0], [10.0, 23.0], [10.1, 23.0], [10.2, 23.0], [10.3, 23.0], [10.4, 23.0], [10.5, 23.0], [10.6, 23.0], [10.7, 23.0], [10.8, 23.0], [10.9, 23.0], [11.0, 24.0], [11.1, 24.0], [11.2, 24.0], [11.3, 24.0], [11.4, 24.0], [11.5, 24.0], [11.6, 24.0], [11.7, 24.0], [11.8, 24.0], [11.9, 24.0], [12.0, 24.0], [12.1, 24.0], [12.2, 24.0], [12.3, 24.0], [12.4, 24.0], [12.5, 25.0], [12.6, 25.0], [12.7, 25.0], [12.8, 25.0], [12.9, 25.0], [13.0, 25.0], [13.1, 25.0], [13.2, 25.0], [13.3, 25.0], [13.4, 25.0], [13.5, 25.0], [13.6, 25.0], [13.7, 25.0], [13.8, 25.0], [13.9, 25.0], [14.0, 25.0], [14.1, 25.0], [14.2, 25.0], [14.3, 25.0], [14.4, 25.0], [14.5, 25.0], [14.6, 25.0], [14.7, 25.0], [14.8, 25.0], [14.9, 25.0], [15.0, 25.0], [15.1, 25.0], [15.2, 25.0], [15.3, 25.0], [15.4, 25.0], [15.5, 25.0], [15.6, 25.0], [15.7, 25.0], [15.8, 25.0], [15.9, 25.0], [16.0, 26.0], [16.1, 26.0], [16.2, 26.0], [16.3, 26.0], [16.4, 26.0], [16.5, 27.0], [16.6, 27.0], [16.7, 27.0], [16.8, 27.0], [16.9, 27.0], [17.0, 29.0], [17.1, 29.0], [17.2, 29.0], [17.3, 29.0], [17.4, 29.0], [17.5, 30.0], [17.6, 30.0], [17.7, 30.0], [17.8, 30.0], [17.9, 30.0], [18.0, 31.0], [18.1, 31.0], [18.2, 31.0], [18.3, 31.0], [18.4, 31.0], [18.5, 31.0], [18.6, 31.0], [18.7, 31.0], [18.8, 31.0], [18.9, 31.0], [19.0, 32.0], [19.1, 32.0], [19.2, 32.0], [19.3, 32.0], [19.4, 32.0], [19.5, 32.0], [19.6, 32.0], [19.7, 32.0], [19.8, 32.0], [19.9, 32.0], [20.0, 32.0], [20.1, 32.0], [20.2, 32.0], [20.3, 32.0], [20.4, 32.0], [20.5, 33.0], [20.6, 33.0], [20.7, 33.0], [20.8, 33.0], [20.9, 33.0], [21.0, 33.0], [21.1, 33.0], [21.2, 33.0], [21.3, 33.0], [21.4, 33.0], [21.5, 34.0], [21.6, 34.0], [21.7, 34.0], [21.8, 34.0], [21.9, 34.0], [22.0, 39.0], [22.1, 39.0], [22.2, 39.0], [22.3, 39.0], [22.4, 39.0], [22.5, 39.0], [22.6, 39.0], [22.7, 39.0], [22.8, 39.0], [22.9, 39.0], [23.0, 40.0], [23.1, 40.0], [23.2, 40.0], [23.3, 40.0], [23.4, 40.0], [23.5, 42.0], [23.6, 42.0], [23.7, 42.0], [23.8, 42.0], [23.9, 42.0], [24.0, 43.0], [24.1, 43.0], [24.2, 43.0], [24.3, 43.0], [24.4, 43.0], [24.5, 44.0], [24.6, 44.0], [24.7, 44.0], [24.8, 44.0], [24.9, 44.0], [25.0, 44.0], [25.1, 44.0], [25.2, 44.0], [25.3, 44.0], [25.4, 44.0], [25.5, 45.0], [25.6, 45.0], [25.7, 45.0], [25.8, 45.0], [25.9, 45.0], [26.0, 45.0], [26.1, 45.0], [26.2, 45.0], [26.3, 45.0], [26.4, 45.0], [26.5, 48.0], [26.6, 48.0], [26.7, 48.0], [26.8, 48.0], [26.9, 48.0], [27.0, 52.0], [27.1, 52.0], [27.2, 52.0], [27.3, 52.0], [27.4, 52.0], [27.5, 53.0], [27.6, 53.0], [27.7, 53.0], [27.8, 53.0], [27.9, 53.0], [28.0, 53.0], [28.1, 53.0], [28.2, 53.0], [28.3, 53.0], [28.4, 53.0], [28.5, 54.0], [28.6, 54.0], [28.7, 54.0], [28.8, 54.0], [28.9, 54.0], [29.0, 56.0], [29.1, 56.0], [29.2, 56.0], [29.3, 56.0], [29.4, 56.0], [29.5, 57.0], [29.6, 57.0], [29.7, 57.0], [29.8, 57.0], [29.9, 57.0], [30.0, 59.0], [30.1, 59.0], [30.2, 59.0], [30.3, 59.0], [30.4, 59.0], [30.5, 61.0], [30.6, 61.0], [30.7, 61.0], [30.8, 61.0], [30.9, 61.0], [31.0, 61.0], [31.1, 61.0], [31.2, 61.0], [31.3, 61.0], [31.4, 61.0], [31.5, 61.0], [31.6, 61.0], [31.7, 61.0], [31.8, 61.0], [31.9, 61.0], [32.0, 62.0], [32.1, 62.0], [32.2, 62.0], [32.3, 62.0], [32.4, 62.0], [32.5, 63.0], [32.6, 63.0], [32.7, 63.0], [32.8, 63.0], [32.9, 63.0], [33.0, 63.0], [33.1, 63.0], [33.2, 63.0], [33.3, 63.0], [33.4, 63.0], [33.5, 64.0], [33.6, 64.0], [33.7, 64.0], [33.8, 64.0], [33.9, 64.0], [34.0, 64.0], [34.1, 64.0], [34.2, 64.0], [34.3, 64.0], [34.4, 64.0], [34.5, 64.0], [34.6, 64.0], [34.7, 64.0], [34.8, 64.0], [34.9, 64.0], [35.0, 65.0], [35.1, 65.0], [35.2, 65.0], [35.3, 65.0], [35.4, 65.0], [35.5, 65.0], [35.6, 65.0], [35.7, 65.0], [35.8, 65.0], [35.9, 65.0], [36.0, 65.0], [36.1, 65.0], [36.2, 65.0], [36.3, 65.0], [36.4, 65.0], [36.5, 65.0], [36.6, 65.0], [36.7, 65.0], [36.8, 65.0], [36.9, 65.0], [37.0, 67.0], [37.1, 67.0], [37.2, 67.0], [37.3, 67.0], [37.4, 67.0], [37.5, 67.0], [37.6, 67.0], [37.7, 67.0], [37.8, 67.0], [37.9, 67.0], [38.0, 67.0], [38.1, 67.0], [38.2, 67.0], [38.3, 67.0], [38.4, 67.0], [38.5, 67.0], [38.6, 67.0], [38.7, 67.0], [38.8, 67.0], [38.9, 67.0], [39.0, 69.0], [39.1, 69.0], [39.2, 69.0], [39.3, 69.0], [39.4, 69.0], [39.5, 70.0], [39.6, 70.0], [39.7, 70.0], [39.8, 70.0], [39.9, 70.0], [40.0, 71.0], [40.1, 71.0], [40.2, 71.0], [40.3, 71.0], [40.4, 71.0], [40.5, 72.0], [40.6, 72.0], [40.7, 72.0], [40.8, 72.0], [40.9, 72.0], [41.0, 73.0], [41.1, 73.0], [41.2, 73.0], [41.3, 73.0], [41.4, 73.0], [41.5, 73.0], [41.6, 73.0], [41.7, 73.0], [41.8, 73.0], [41.9, 73.0], [42.0, 73.0], [42.1, 73.0], [42.2, 73.0], [42.3, 73.0], [42.4, 73.0], [42.5, 73.0], [42.6, 73.0], [42.7, 73.0], [42.8, 73.0], [42.9, 73.0], [43.0, 74.0], [43.1, 74.0], [43.2, 74.0], [43.3, 74.0], [43.4, 74.0], [43.5, 74.0], [43.6, 74.0], [43.7, 74.0], [43.8, 74.0], [43.9, 74.0], [44.0, 74.0], [44.1, 74.0], [44.2, 74.0], [44.3, 74.0], [44.4, 74.0], [44.5, 75.0], [44.6, 75.0], [44.7, 75.0], [44.8, 75.0], [44.9, 75.0], [45.0, 76.0], [45.1, 76.0], [45.2, 76.0], [45.3, 76.0], [45.4, 76.0], [45.5, 76.0], [45.6, 76.0], [45.7, 76.0], [45.8, 76.0], [45.9, 76.0], [46.0, 76.0], [46.1, 76.0], [46.2, 76.0], [46.3, 76.0], [46.4, 76.0], [46.5, 77.0], [46.6, 77.0], [46.7, 77.0], [46.8, 77.0], [46.9, 77.0], [47.0, 77.0], [47.1, 77.0], [47.2, 77.0], [47.3, 77.0], [47.4, 77.0], [47.5, 77.0], [47.6, 77.0], [47.7, 77.0], [47.8, 77.0], [47.9, 77.0], [48.0, 77.0], [48.1, 77.0], [48.2, 77.0], [48.3, 77.0], [48.4, 77.0], [48.5, 77.0], [48.6, 77.0], [48.7, 77.0], [48.8, 77.0], [48.9, 77.0], [49.0, 78.0], [49.1, 78.0], [49.2, 78.0], [49.3, 78.0], [49.4, 78.0], [49.5, 78.0], [49.6, 78.0], [49.7, 78.0], [49.8, 78.0], [49.9, 78.0], [50.0, 79.0], [50.1, 79.0], [50.2, 79.0], [50.3, 79.0], [50.4, 79.0], [50.5, 79.0], [50.6, 79.0], [50.7, 79.0], [50.8, 79.0], [50.9, 79.0], [51.0, 80.0], [51.1, 80.0], [51.2, 80.0], [51.3, 80.0], [51.4, 80.0], [51.5, 81.0], [51.6, 81.0], [51.7, 81.0], [51.8, 81.0], [51.9, 81.0], [52.0, 82.0], [52.1, 82.0], [52.2, 82.0], [52.3, 82.0], [52.4, 82.0], [52.5, 83.0], [52.6, 83.0], [52.7, 83.0], [52.8, 83.0], [52.9, 83.0], [53.0, 84.0], [53.1, 84.0], [53.2, 84.0], [53.3, 84.0], [53.4, 84.0], [53.5, 85.0], [53.6, 85.0], [53.7, 85.0], [53.8, 85.0], [53.9, 85.0], [54.0, 85.0], [54.1, 85.0], [54.2, 85.0], [54.3, 85.0], [54.4, 85.0], [54.5, 88.0], [54.6, 88.0], [54.7, 88.0], [54.8, 88.0], [54.9, 88.0], [55.0, 89.0], [55.1, 89.0], [55.2, 89.0], [55.3, 89.0], [55.4, 89.0], [55.5, 89.0], [55.6, 89.0], [55.7, 89.0], [55.8, 89.0], [55.9, 89.0], [56.0, 93.0], [56.1, 93.0], [56.2, 93.0], [56.3, 93.0], [56.4, 93.0], [56.5, 95.0], [56.6, 95.0], [56.7, 95.0], [56.8, 95.0], [56.9, 95.0], [57.0, 95.0], [57.1, 95.0], [57.2, 95.0], [57.3, 95.0], [57.4, 95.0], [57.5, 97.0], [57.6, 97.0], [57.7, 97.0], [57.8, 97.0], [57.9, 97.0], [58.0, 98.0], [58.1, 98.0], [58.2, 98.0], [58.3, 98.0], [58.4, 98.0], [58.5, 99.0], [58.6, 99.0], [58.7, 99.0], [58.8, 99.0], [58.9, 99.0], [59.0, 99.0], [59.1, 99.0], [59.2, 99.0], [59.3, 99.0], [59.4, 99.0], [59.5, 100.0], [59.6, 100.0], [59.7, 100.0], [59.8, 100.0], [59.9, 100.0], [60.0, 112.0], [60.1, 112.0], [60.2, 112.0], [60.3, 112.0], [60.4, 112.0], [60.5, 113.0], [60.6, 113.0], [60.7, 113.0], [60.8, 113.0], [60.9, 113.0], [61.0, 117.0], [61.1, 117.0], [61.2, 117.0], [61.3, 117.0], [61.4, 117.0], [61.5, 117.0], [61.6, 117.0], [61.7, 117.0], [61.8, 117.0], [61.9, 117.0], [62.0, 118.0], [62.1, 118.0], [62.2, 118.0], [62.3, 118.0], [62.4, 118.0], [62.5, 120.0], [62.6, 120.0], [62.7, 120.0], [62.8, 120.0], [62.9, 120.0], [63.0, 123.0], [63.1, 123.0], [63.2, 123.0], [63.3, 123.0], [63.4, 123.0], [63.5, 124.0], [63.6, 124.0], [63.7, 124.0], [63.8, 124.0], [63.9, 124.0], [64.0, 128.0], [64.1, 128.0], [64.2, 128.0], [64.3, 128.0], [64.4, 128.0], [64.5, 128.0], [64.6, 128.0], [64.7, 128.0], [64.8, 128.0], [64.9, 128.0], [65.0, 133.0], [65.1, 133.0], [65.2, 133.0], [65.3, 133.0], [65.4, 133.0], [65.5, 151.0], [65.6, 151.0], [65.7, 151.0], [65.8, 151.0], [65.9, 151.0], [66.0, 157.0], [66.1, 157.0], [66.2, 157.0], [66.3, 157.0], [66.4, 157.0], [66.5, 165.0], [66.6, 165.0], [66.7, 165.0], [66.8, 165.0], [66.9, 165.0], [67.0, 166.0], [67.1, 166.0], [67.2, 166.0], [67.3, 166.0], [67.4, 166.0], [67.5, 170.0], [67.6, 170.0], [67.7, 170.0], [67.8, 170.0], [67.9, 170.0], [68.0, 171.0], [68.1, 171.0], [68.2, 171.0], [68.3, 171.0], [68.4, 171.0], [68.5, 174.0], [68.6, 174.0], [68.7, 174.0], [68.8, 174.0], [68.9, 174.0], [69.0, 182.0], [69.1, 182.0], [69.2, 182.0], [69.3, 182.0], [69.4, 182.0], [69.5, 182.0], [69.6, 182.0], [69.7, 182.0], [69.8, 182.0], [69.9, 182.0], [70.0, 184.0], [70.1, 184.0], [70.2, 184.0], [70.3, 184.0], [70.4, 184.0], [70.5, 185.0], [70.6, 185.0], [70.7, 185.0], [70.8, 185.0], [70.9, 185.0], [71.0, 185.0], [71.1, 185.0], [71.2, 185.0], [71.3, 185.0], [71.4, 185.0], [71.5, 188.0], [71.6, 188.0], [71.7, 188.0], [71.8, 188.0], [71.9, 188.0], [72.0, 188.0], [72.1, 188.0], [72.2, 188.0], [72.3, 188.0], [72.4, 188.0], [72.5, 188.0], [72.6, 188.0], [72.7, 188.0], [72.8, 188.0], [72.9, 188.0], [73.0, 189.0], [73.1, 189.0], [73.2, 189.0], [73.3, 189.0], [73.4, 189.0], [73.5, 201.0], [73.6, 201.0], [73.7, 201.0], [73.8, 201.0], [73.9, 201.0], [74.0, 203.0], [74.1, 203.0], [74.2, 203.0], [74.3, 203.0], [74.4, 203.0], [74.5, 203.0], [74.6, 203.0], [74.7, 203.0], [74.8, 203.0], [74.9, 203.0], [75.0, 376.0], [75.1, 376.0], [75.2, 376.0], [75.3, 376.0], [75.4, 376.0], [75.5, 385.0], [75.6, 385.0], [75.7, 385.0], [75.8, 385.0], [75.9, 385.0], [76.0, 390.0], [76.1, 390.0], [76.2, 390.0], [76.3, 390.0], [76.4, 390.0], [76.5, 400.0], [76.6, 400.0], [76.7, 400.0], [76.8, 400.0], [76.9, 400.0], [77.0, 400.0], [77.1, 400.0], [77.2, 400.0], [77.3, 400.0], [77.4, 400.0], [77.5, 409.0], [77.6, 409.0], [77.7, 409.0], [77.8, 409.0], [77.9, 409.0], [78.0, 417.0], [78.1, 417.0], [78.2, 417.0], [78.3, 417.0], [78.4, 417.0], [78.5, 427.0], [78.6, 427.0], [78.7, 427.0], [78.8, 427.0], [78.9, 427.0], [79.0, 453.0], [79.1, 453.0], [79.2, 453.0], [79.3, 453.0], [79.4, 453.0], [79.5, 462.0], [79.6, 462.0], [79.7, 462.0], [79.8, 462.0], [79.9, 462.0], [80.0, 465.0], [80.1, 465.0], [80.2, 465.0], [80.3, 465.0], [80.4, 465.0], [80.5, 471.0], [80.6, 471.0], [80.7, 471.0], [80.8, 471.0], [80.9, 471.0], [81.0, 483.0], [81.1, 483.0], [81.2, 483.0], [81.3, 483.0], [81.4, 483.0], [81.5, 491.0], [81.6, 491.0], [81.7, 491.0], [81.8, 491.0], [81.9, 491.0], [82.0, 491.0], [82.1, 491.0], [82.2, 491.0], [82.3, 491.0], [82.4, 491.0], [82.5, 491.0], [82.6, 491.0], [82.7, 491.0], [82.8, 491.0], [82.9, 491.0], [83.0, 544.0], [83.1, 544.0], [83.2, 544.0], [83.3, 544.0], [83.4, 544.0], [83.5, 559.0], [83.6, 559.0], [83.7, 559.0], [83.8, 559.0], [83.9, 559.0], [84.0, 585.0], [84.1, 585.0], [84.2, 585.0], [84.3, 585.0], [84.4, 585.0], [84.5, 592.0], [84.6, 592.0], [84.7, 592.0], [84.8, 592.0], [84.9, 592.0], [85.0, 613.0], [85.1, 613.0], [85.2, 613.0], [85.3, 613.0], [85.4, 613.0], [85.5, 665.0], [85.6, 665.0], [85.7, 665.0], [85.8, 665.0], [85.9, 665.0], [86.0, 699.0], [86.1, 699.0], [86.2, 699.0], [86.3, 699.0], [86.4, 699.0], [86.5, 751.0], [86.6, 751.0], [86.7, 751.0], [86.8, 751.0], [86.9, 751.0], [87.0, 814.0], [87.1, 814.0], [87.2, 814.0], [87.3, 814.0], [87.4, 814.0], [87.5, 824.0], [87.6, 824.0], [87.7, 824.0], [87.8, 824.0], [87.9, 824.0], [88.0, 838.0], [88.1, 838.0], [88.2, 838.0], [88.3, 838.0], [88.4, 838.0], [88.5, 840.0], [88.6, 840.0], [88.7, 840.0], [88.8, 840.0], [88.9, 840.0], [89.0, 891.0], [89.1, 891.0], [89.2, 891.0], [89.3, 891.0], [89.4, 891.0], [89.5, 916.0], [89.6, 916.0], [89.7, 916.0], [89.8, 916.0], [89.9, 916.0], [90.0, 919.0], [90.1, 919.0], [90.2, 919.0], [90.3, 919.0], [90.4, 919.0], [90.5, 924.0], [90.6, 924.0], [90.7, 924.0], [90.8, 924.0], [90.9, 924.0], [91.0, 933.0], [91.1, 933.0], [91.2, 933.0], [91.3, 933.0], [91.4, 933.0], [91.5, 961.0], [91.6, 961.0], [91.7, 961.0], [91.8, 961.0], [91.9, 961.0], [92.0, 969.0], [92.1, 969.0], [92.2, 969.0], [92.3, 969.0], [92.4, 969.0], [92.5, 1007.0], [92.6, 1007.0], [92.7, 1007.0], [92.8, 1007.0], [92.9, 1007.0], [93.0, 1067.0], [93.1, 1067.0], [93.2, 1067.0], [93.3, 1067.0], [93.4, 1067.0], [93.5, 1083.0], [93.6, 1083.0], [93.7, 1083.0], [93.8, 1083.0], [93.9, 1083.0], [94.0, 1106.0], [94.1, 1106.0], [94.2, 1106.0], [94.3, 1106.0], [94.4, 1106.0], [94.5, 1143.0], [94.6, 1143.0], [94.7, 1143.0], [94.8, 1143.0], [94.9, 1143.0], [95.0, 1168.0], [95.1, 1168.0], [95.2, 1168.0], [95.3, 1168.0], [95.4, 1168.0], [95.5, 1652.0], [95.6, 1652.0], [95.7, 1652.0], [95.8, 1652.0], [95.9, 1652.0], [96.0, 1652.0], [96.1, 1652.0], [96.2, 1652.0], [96.3, 1652.0], [96.4, 1652.0], [96.5, 1740.0], [96.6, 1740.0], [96.7, 1740.0], [96.8, 1740.0], [96.9, 1740.0], [97.0, 1752.0], [97.1, 1752.0], [97.2, 1752.0], [97.3, 1752.0], [97.4, 1752.0], [97.5, 1793.0], [97.6, 1793.0], [97.7, 1793.0], [97.8, 1793.0], [97.9, 1793.0], [98.0, 1806.0], [98.1, 1806.0], [98.2, 1806.0], [98.3, 1806.0], [98.4, 1806.0], [98.5, 1816.0], [98.6, 1816.0], [98.7, 1816.0], [98.8, 1816.0], [98.9, 1816.0], [99.0, 1858.0], [99.1, 1858.0], [99.2, 1858.0], [99.3, 1858.0], [99.4, 1858.0], [99.5, 1867.0], [99.6, 1867.0], [99.7, 1867.0], [99.8, 1867.0], [99.9, 1867.0]], "isOverall": false, "label": "Get List User", "isController": false}, {"data": [[0.0, 14.0], [0.1, 14.0], [0.2, 14.0], [0.3, 14.0], [0.4, 14.0], [0.5, 14.0], [0.6, 14.0], [0.7, 14.0], [0.8, 14.0], [0.9, 14.0], [1.0, 15.0], [1.1, 15.0], [1.2, 15.0], [1.3, 15.0], [1.4, 15.0], [1.5, 16.0], [1.6, 16.0], [1.7, 16.0], [1.8, 16.0], [1.9, 16.0], [2.0, 16.0], [2.1, 16.0], [2.2, 16.0], [2.3, 16.0], [2.4, 16.0], [2.5, 17.0], [2.6, 17.0], [2.7, 17.0], [2.8, 17.0], [2.9, 17.0], [3.0, 17.0], [3.1, 17.0], [3.2, 17.0], [3.3, 17.0], [3.4, 17.0], [3.5, 18.0], [3.6, 18.0], [3.7, 18.0], [3.8, 18.0], [3.9, 18.0], [4.0, 18.0], [4.1, 18.0], [4.2, 18.0], [4.3, 18.0], [4.4, 18.0], [4.5, 18.0], [4.6, 18.0], [4.7, 18.0], [4.8, 18.0], [4.9, 18.0], [5.0, 18.0], [5.1, 18.0], [5.2, 18.0], [5.3, 18.0], [5.4, 18.0], [5.5, 19.0], [5.6, 19.0], [5.7, 19.0], [5.8, 19.0], [5.9, 19.0], [6.0, 19.0], [6.1, 19.0], [6.2, 19.0], [6.3, 19.0], [6.4, 19.0], [6.5, 19.0], [6.6, 19.0], [6.7, 19.0], [6.8, 19.0], [6.9, 19.0], [7.0, 19.0], [7.1, 19.0], [7.2, 19.0], [7.3, 19.0], [7.4, 19.0], [7.5, 19.0], [7.6, 19.0], [7.7, 19.0], [7.8, 19.0], [7.9, 19.0], [8.0, 20.0], [8.1, 20.0], [8.2, 20.0], [8.3, 20.0], [8.4, 20.0], [8.5, 20.0], [8.6, 20.0], [8.7, 20.0], [8.8, 20.0], [8.9, 20.0], [9.0, 20.0], [9.1, 20.0], [9.2, 20.0], [9.3, 20.0], [9.4, 20.0], [9.5, 20.0], [9.6, 20.0], [9.7, 20.0], [9.8, 20.0], [9.9, 20.0], [10.0, 20.0], [10.1, 20.0], [10.2, 20.0], [10.3, 20.0], [10.4, 20.0], [10.5, 20.0], [10.6, 20.0], [10.7, 20.0], [10.8, 20.0], [10.9, 20.0], [11.0, 20.0], [11.1, 20.0], [11.2, 20.0], [11.3, 20.0], [11.4, 20.0], [11.5, 20.0], [11.6, 20.0], [11.7, 20.0], [11.8, 20.0], [11.9, 20.0], [12.0, 21.0], [12.1, 21.0], [12.2, 21.0], [12.3, 21.0], [12.4, 21.0], [12.5, 21.0], [12.6, 21.0], [12.7, 21.0], [12.8, 21.0], [12.9, 21.0], [13.0, 22.0], [13.1, 22.0], [13.2, 22.0], [13.3, 22.0], [13.4, 22.0], [13.5, 22.0], [13.6, 22.0], [13.7, 22.0], [13.8, 22.0], [13.9, 22.0], [14.0, 22.0], [14.1, 22.0], [14.2, 22.0], [14.3, 22.0], [14.4, 22.0], [14.5, 22.0], [14.6, 22.0], [14.7, 22.0], [14.8, 22.0], [14.9, 22.0], [15.0, 22.0], [15.1, 22.0], [15.2, 22.0], [15.3, 22.0], [15.4, 22.0], [15.5, 23.0], [15.6, 23.0], [15.7, 23.0], [15.8, 23.0], [15.9, 23.0], [16.0, 24.0], [16.1, 24.0], [16.2, 24.0], [16.3, 24.0], [16.4, 24.0], [16.5, 24.0], [16.6, 24.0], [16.7, 24.0], [16.8, 24.0], [16.9, 24.0], [17.0, 24.0], [17.1, 24.0], [17.2, 24.0], [17.3, 24.0], [17.4, 24.0], [17.5, 25.0], [17.6, 25.0], [17.7, 25.0], [17.8, 25.0], [17.9, 25.0], [18.0, 25.0], [18.1, 25.0], [18.2, 25.0], [18.3, 25.0], [18.4, 25.0], [18.5, 25.0], [18.6, 25.0], [18.7, 25.0], [18.8, 25.0], [18.9, 25.0], [19.0, 25.0], [19.1, 25.0], [19.2, 25.0], [19.3, 25.0], [19.4, 25.0], [19.5, 25.0], [19.6, 25.0], [19.7, 25.0], [19.8, 25.0], [19.9, 25.0], [20.0, 26.0], [20.1, 26.0], [20.2, 26.0], [20.3, 26.0], [20.4, 26.0], [20.5, 26.0], [20.6, 26.0], [20.7, 26.0], [20.8, 26.0], [20.9, 26.0], [21.0, 26.0], [21.1, 26.0], [21.2, 26.0], [21.3, 26.0], [21.4, 26.0], [21.5, 26.0], [21.6, 26.0], [21.7, 26.0], [21.8, 26.0], [21.9, 26.0], [22.0, 26.0], [22.1, 26.0], [22.2, 26.0], [22.3, 26.0], [22.4, 26.0], [22.5, 26.0], [22.6, 26.0], [22.7, 26.0], [22.8, 26.0], [22.9, 26.0], [23.0, 26.0], [23.1, 26.0], [23.2, 26.0], [23.3, 26.0], [23.4, 26.0], [23.5, 27.0], [23.6, 27.0], [23.7, 27.0], [23.8, 27.0], [23.9, 27.0], [24.0, 27.0], [24.1, 27.0], [24.2, 27.0], [24.3, 27.0], [24.4, 27.0], [24.5, 27.0], [24.6, 27.0], [24.7, 27.0], [24.8, 27.0], [24.9, 27.0], [25.0, 28.0], [25.1, 28.0], [25.2, 28.0], [25.3, 28.0], [25.4, 28.0], [25.5, 28.0], [25.6, 28.0], [25.7, 28.0], [25.8, 28.0], [25.9, 28.0], [26.0, 28.0], [26.1, 28.0], [26.2, 28.0], [26.3, 28.0], [26.4, 28.0], [26.5, 28.0], [26.6, 28.0], [26.7, 28.0], [26.8, 28.0], [26.9, 28.0], [27.0, 28.0], [27.1, 28.0], [27.2, 28.0], [27.3, 28.0], [27.4, 28.0], [27.5, 28.0], [27.6, 28.0], [27.7, 28.0], [27.8, 28.0], [27.9, 28.0], [28.0, 28.0], [28.1, 28.0], [28.2, 28.0], [28.3, 28.0], [28.4, 28.0], [28.5, 28.0], [28.6, 28.0], [28.7, 28.0], [28.8, 28.0], [28.9, 28.0], [29.0, 29.0], [29.1, 29.0], [29.2, 29.0], [29.3, 29.0], [29.4, 29.0], [29.5, 29.0], [29.6, 29.0], [29.7, 29.0], [29.8, 29.0], [29.9, 29.0], [30.0, 30.0], [30.1, 30.0], [30.2, 30.0], [30.3, 30.0], [30.4, 30.0], [30.5, 30.0], [30.6, 30.0], [30.7, 30.0], [30.8, 30.0], [30.9, 30.0], [31.0, 30.0], [31.1, 30.0], [31.2, 30.0], [31.3, 30.0], [31.4, 30.0], [31.5, 30.0], [31.6, 30.0], [31.7, 30.0], [31.8, 30.0], [31.9, 30.0], [32.0, 30.0], [32.1, 30.0], [32.2, 30.0], [32.3, 30.0], [32.4, 30.0], [32.5, 31.0], [32.6, 31.0], [32.7, 31.0], [32.8, 31.0], [32.9, 31.0], [33.0, 31.0], [33.1, 31.0], [33.2, 31.0], [33.3, 31.0], [33.4, 31.0], [33.5, 31.0], [33.6, 31.0], [33.7, 31.0], [33.8, 31.0], [33.9, 31.0], [34.0, 32.0], [34.1, 32.0], [34.2, 32.0], [34.3, 32.0], [34.4, 32.0], [34.5, 32.0], [34.6, 32.0], [34.7, 32.0], [34.8, 32.0], [34.9, 32.0], [35.0, 33.0], [35.1, 33.0], [35.2, 33.0], [35.3, 33.0], [35.4, 33.0], [35.5, 33.0], [35.6, 33.0], [35.7, 33.0], [35.8, 33.0], [35.9, 33.0], [36.0, 33.0], [36.1, 33.0], [36.2, 33.0], [36.3, 33.0], [36.4, 33.0], [36.5, 33.0], [36.6, 33.0], [36.7, 33.0], [36.8, 33.0], [36.9, 33.0], [37.0, 34.0], [37.1, 34.0], [37.2, 34.0], [37.3, 34.0], [37.4, 34.0], [37.5, 34.0], [37.6, 34.0], [37.7, 34.0], [37.8, 34.0], [37.9, 34.0], [38.0, 36.0], [38.1, 36.0], [38.2, 36.0], [38.3, 36.0], [38.4, 36.0], [38.5, 37.0], [38.6, 37.0], [38.7, 37.0], [38.8, 37.0], [38.9, 37.0], [39.0, 37.0], [39.1, 37.0], [39.2, 37.0], [39.3, 37.0], [39.4, 37.0], [39.5, 42.0], [39.6, 42.0], [39.7, 42.0], [39.8, 42.0], [39.9, 42.0], [40.0, 44.0], [40.1, 44.0], [40.2, 44.0], [40.3, 44.0], [40.4, 44.0], [40.5, 48.0], [40.6, 48.0], [40.7, 48.0], [40.8, 48.0], [40.9, 48.0], [41.0, 49.0], [41.1, 49.0], [41.2, 49.0], [41.3, 49.0], [41.4, 49.0], [41.5, 49.0], [41.6, 49.0], [41.7, 49.0], [41.8, 49.0], [41.9, 49.0], [42.0, 52.0], [42.1, 52.0], [42.2, 52.0], [42.3, 52.0], [42.4, 52.0], [42.5, 53.0], [42.6, 53.0], [42.7, 53.0], [42.8, 53.0], [42.9, 53.0], [43.0, 54.0], [43.1, 54.0], [43.2, 54.0], [43.3, 54.0], [43.4, 54.0], [43.5, 57.0], [43.6, 57.0], [43.7, 57.0], [43.8, 57.0], [43.9, 57.0], [44.0, 59.0], [44.1, 59.0], [44.2, 59.0], [44.3, 59.0], [44.4, 59.0], [44.5, 65.0], [44.6, 65.0], [44.7, 65.0], [44.8, 65.0], [44.9, 65.0], [45.0, 65.0], [45.1, 65.0], [45.2, 65.0], [45.3, 65.0], [45.4, 65.0], [45.5, 65.0], [45.6, 65.0], [45.7, 65.0], [45.8, 65.0], [45.9, 65.0], [46.0, 65.0], [46.1, 65.0], [46.2, 65.0], [46.3, 65.0], [46.4, 65.0], [46.5, 66.0], [46.6, 66.0], [46.7, 66.0], [46.8, 66.0], [46.9, 66.0], [47.0, 66.0], [47.1, 66.0], [47.2, 66.0], [47.3, 66.0], [47.4, 66.0], [47.5, 70.0], [47.6, 70.0], [47.7, 70.0], [47.8, 70.0], [47.9, 70.0], [48.0, 70.0], [48.1, 70.0], [48.2, 70.0], [48.3, 70.0], [48.4, 70.0], [48.5, 71.0], [48.6, 71.0], [48.7, 71.0], [48.8, 71.0], [48.9, 71.0], [49.0, 71.0], [49.1, 71.0], [49.2, 71.0], [49.3, 71.0], [49.4, 71.0], [49.5, 72.0], [49.6, 72.0], [49.7, 72.0], [49.8, 72.0], [49.9, 72.0], [50.0, 72.0], [50.1, 72.0], [50.2, 72.0], [50.3, 72.0], [50.4, 72.0], [50.5, 73.0], [50.6, 73.0], [50.7, 73.0], [50.8, 73.0], [50.9, 73.0], [51.0, 75.0], [51.1, 75.0], [51.2, 75.0], [51.3, 75.0], [51.4, 75.0], [51.5, 76.0], [51.6, 76.0], [51.7, 76.0], [51.8, 76.0], [51.9, 76.0], [52.0, 76.0], [52.1, 76.0], [52.2, 76.0], [52.3, 76.0], [52.4, 76.0], [52.5, 76.0], [52.6, 76.0], [52.7, 76.0], [52.8, 76.0], [52.9, 76.0], [53.0, 77.0], [53.1, 77.0], [53.2, 77.0], [53.3, 77.0], [53.4, 77.0], [53.5, 77.0], [53.6, 77.0], [53.7, 77.0], [53.8, 77.0], [53.9, 77.0], [54.0, 77.0], [54.1, 77.0], [54.2, 77.0], [54.3, 77.0], [54.4, 77.0], [54.5, 77.0], [54.6, 77.0], [54.7, 77.0], [54.8, 77.0], [54.9, 77.0], [55.0, 78.0], [55.1, 78.0], [55.2, 78.0], [55.3, 78.0], [55.4, 78.0], [55.5, 78.0], [55.6, 78.0], [55.7, 78.0], [55.8, 78.0], [55.9, 78.0], [56.0, 78.0], [56.1, 78.0], [56.2, 78.0], [56.3, 78.0], [56.4, 78.0], [56.5, 78.0], [56.6, 78.0], [56.7, 78.0], [56.8, 78.0], [56.9, 78.0], [57.0, 79.0], [57.1, 79.0], [57.2, 79.0], [57.3, 79.0], [57.4, 79.0], [57.5, 79.0], [57.6, 79.0], [57.7, 79.0], [57.8, 79.0], [57.9, 79.0], [58.0, 79.0], [58.1, 79.0], [58.2, 79.0], [58.3, 79.0], [58.4, 79.0], [58.5, 79.0], [58.6, 79.0], [58.7, 79.0], [58.8, 79.0], [58.9, 79.0], [59.0, 80.0], [59.1, 80.0], [59.2, 80.0], [59.3, 80.0], [59.4, 80.0], [59.5, 80.0], [59.6, 80.0], [59.7, 80.0], [59.8, 80.0], [59.9, 80.0], [60.0, 81.0], [60.1, 81.0], [60.2, 81.0], [60.3, 81.0], [60.4, 81.0], [60.5, 81.0], [60.6, 81.0], [60.7, 81.0], [60.8, 81.0], [60.9, 81.0], [61.0, 81.0], [61.1, 81.0], [61.2, 81.0], [61.3, 81.0], [61.4, 81.0], [61.5, 82.0], [61.6, 82.0], [61.7, 82.0], [61.8, 82.0], [61.9, 82.0], [62.0, 82.0], [62.1, 82.0], [62.2, 82.0], [62.3, 82.0], [62.4, 82.0], [62.5, 82.0], [62.6, 82.0], [62.7, 82.0], [62.8, 82.0], [62.9, 82.0], [63.0, 83.0], [63.1, 83.0], [63.2, 83.0], [63.3, 83.0], [63.4, 83.0], [63.5, 83.0], [63.6, 83.0], [63.7, 83.0], [63.8, 83.0], [63.9, 83.0], [64.0, 85.0], [64.1, 85.0], [64.2, 85.0], [64.3, 85.0], [64.4, 85.0], [64.5, 86.0], [64.6, 86.0], [64.7, 86.0], [64.8, 86.0], [64.9, 86.0], [65.0, 87.0], [65.1, 87.0], [65.2, 87.0], [65.3, 87.0], [65.4, 87.0], [65.5, 88.0], [65.6, 88.0], [65.7, 88.0], [65.8, 88.0], [65.9, 88.0], [66.0, 88.0], [66.1, 88.0], [66.2, 88.0], [66.3, 88.0], [66.4, 88.0], [66.5, 88.0], [66.6, 88.0], [66.7, 88.0], [66.8, 88.0], [66.9, 88.0], [67.0, 88.0], [67.1, 88.0], [67.2, 88.0], [67.3, 88.0], [67.4, 88.0], [67.5, 89.0], [67.6, 89.0], [67.7, 89.0], [67.8, 89.0], [67.9, 89.0], [68.0, 90.0], [68.1, 90.0], [68.2, 90.0], [68.3, 90.0], [68.4, 90.0], [68.5, 91.0], [68.6, 91.0], [68.7, 91.0], [68.8, 91.0], [68.9, 91.0], [69.0, 92.0], [69.1, 92.0], [69.2, 92.0], [69.3, 92.0], [69.4, 92.0], [69.5, 93.0], [69.6, 93.0], [69.7, 93.0], [69.8, 93.0], [69.9, 93.0], [70.0, 95.0], [70.1, 95.0], [70.2, 95.0], [70.3, 95.0], [70.4, 95.0], [70.5, 97.0], [70.6, 97.0], [70.7, 97.0], [70.8, 97.0], [70.9, 97.0], [71.0, 150.0], [71.1, 150.0], [71.2, 150.0], [71.3, 150.0], [71.4, 150.0], [71.5, 265.0], [71.6, 265.0], [71.7, 265.0], [71.8, 265.0], [71.9, 265.0], [72.0, 270.0], [72.1, 270.0], [72.2, 270.0], [72.3, 270.0], [72.4, 270.0], [72.5, 271.0], [72.6, 271.0], [72.7, 271.0], [72.8, 271.0], [72.9, 271.0], [73.0, 276.0], [73.1, 276.0], [73.2, 276.0], [73.3, 276.0], [73.4, 276.0], [73.5, 276.0], [73.6, 276.0], [73.7, 276.0], [73.8, 276.0], [73.9, 276.0], [74.0, 276.0], [74.1, 276.0], [74.2, 276.0], [74.3, 276.0], [74.4, 276.0], [74.5, 285.0], [74.6, 285.0], [74.7, 285.0], [74.8, 285.0], [74.9, 285.0], [75.0, 285.0], [75.1, 285.0], [75.2, 285.0], [75.3, 285.0], [75.4, 285.0], [75.5, 285.0], [75.6, 285.0], [75.7, 285.0], [75.8, 285.0], [75.9, 285.0], [76.0, 286.0], [76.1, 286.0], [76.2, 286.0], [76.3, 286.0], [76.4, 286.0], [76.5, 289.0], [76.6, 289.0], [76.7, 289.0], [76.8, 289.0], [76.9, 289.0], [77.0, 289.0], [77.1, 289.0], [77.2, 289.0], [77.3, 289.0], [77.4, 289.0], [77.5, 289.0], [77.6, 289.0], [77.7, 289.0], [77.8, 289.0], [77.9, 289.0], [78.0, 289.0], [78.1, 289.0], [78.2, 289.0], [78.3, 289.0], [78.4, 289.0], [78.5, 290.0], [78.6, 290.0], [78.7, 290.0], [78.8, 290.0], [78.9, 290.0], [79.0, 290.0], [79.1, 290.0], [79.2, 290.0], [79.3, 290.0], [79.4, 290.0], [79.5, 292.0], [79.6, 292.0], [79.7, 292.0], [79.8, 292.0], [79.9, 292.0], [80.0, 293.0], [80.1, 293.0], [80.2, 293.0], [80.3, 293.0], [80.4, 293.0], [80.5, 293.0], [80.6, 293.0], [80.7, 293.0], [80.8, 293.0], [80.9, 293.0], [81.0, 293.0], [81.1, 293.0], [81.2, 293.0], [81.3, 293.0], [81.4, 293.0], [81.5, 293.0], [81.6, 293.0], [81.7, 293.0], [81.8, 293.0], [81.9, 293.0], [82.0, 293.0], [82.1, 293.0], [82.2, 293.0], [82.3, 293.0], [82.4, 293.0], [82.5, 294.0], [82.6, 294.0], [82.7, 294.0], [82.8, 294.0], [82.9, 294.0], [83.0, 294.0], [83.1, 294.0], [83.2, 294.0], [83.3, 294.0], [83.4, 294.0], [83.5, 294.0], [83.6, 294.0], [83.7, 294.0], [83.8, 294.0], [83.9, 294.0], [84.0, 294.0], [84.1, 294.0], [84.2, 294.0], [84.3, 294.0], [84.4, 294.0], [84.5, 295.0], [84.6, 295.0], [84.7, 295.0], [84.8, 295.0], [84.9, 295.0], [85.0, 297.0], [85.1, 297.0], [85.2, 297.0], [85.3, 297.0], [85.4, 297.0], [85.5, 299.0], [85.6, 299.0], [85.7, 299.0], [85.8, 299.0], [85.9, 299.0], [86.0, 299.0], [86.1, 299.0], [86.2, 299.0], [86.3, 299.0], [86.4, 299.0], [86.5, 300.0], [86.6, 300.0], [86.7, 300.0], [86.8, 300.0], [86.9, 300.0], [87.0, 300.0], [87.1, 300.0], [87.2, 300.0], [87.3, 300.0], [87.4, 300.0], [87.5, 303.0], [87.6, 303.0], [87.7, 303.0], [87.8, 303.0], [87.9, 303.0], [88.0, 304.0], [88.1, 304.0], [88.2, 304.0], [88.3, 304.0], [88.4, 304.0], [88.5, 316.0], [88.6, 316.0], [88.7, 316.0], [88.8, 316.0], [88.9, 316.0], [89.0, 507.0], [89.1, 507.0], [89.2, 507.0], [89.3, 507.0], [89.4, 507.0], [89.5, 509.0], [89.6, 509.0], [89.7, 509.0], [89.8, 509.0], [89.9, 509.0], [90.0, 512.0], [90.1, 512.0], [90.2, 512.0], [90.3, 512.0], [90.4, 512.0], [90.5, 522.0], [90.6, 522.0], [90.7, 522.0], [90.8, 522.0], [90.9, 522.0], [91.0, 535.0], [91.1, 535.0], [91.2, 535.0], [91.3, 535.0], [91.4, 535.0], [91.5, 549.0], [91.6, 549.0], [91.7, 549.0], [91.8, 549.0], [91.9, 549.0], [92.0, 575.0], [92.1, 575.0], [92.2, 575.0], [92.3, 575.0], [92.4, 575.0], [92.5, 619.0], [92.6, 619.0], [92.7, 619.0], [92.8, 619.0], [92.9, 619.0], [93.0, 700.0], [93.1, 700.0], [93.2, 700.0], [93.3, 700.0], [93.4, 700.0], [93.5, 720.0], [93.6, 720.0], [93.7, 720.0], [93.8, 720.0], [93.9, 720.0], [94.0, 721.0], [94.1, 721.0], [94.2, 721.0], [94.3, 721.0], [94.4, 721.0], [94.5, 924.0], [94.6, 924.0], [94.7, 924.0], [94.8, 924.0], [94.9, 924.0], [95.0, 938.0], [95.1, 938.0], [95.2, 938.0], [95.3, 938.0], [95.4, 938.0], [95.5, 940.0], [95.6, 940.0], [95.7, 940.0], [95.8, 940.0], [95.9, 940.0], [96.0, 947.0], [96.1, 947.0], [96.2, 947.0], [96.3, 947.0], [96.4, 947.0], [96.5, 951.0], [96.6, 951.0], [96.7, 951.0], [96.8, 951.0], [96.9, 951.0], [97.0, 962.0], [97.1, 962.0], [97.2, 962.0], [97.3, 962.0], [97.4, 962.0], [97.5, 1500.0], [97.6, 1500.0], [97.7, 1500.0], [97.8, 1500.0], [97.9, 1500.0], [98.0, 1505.0], [98.1, 1505.0], [98.2, 1505.0], [98.3, 1505.0], [98.4, 1505.0], [98.5, 1548.0], [98.6, 1548.0], [98.7, 1548.0], [98.8, 1548.0], [98.9, 1548.0], [99.0, 1743.0], [99.1, 1743.0], [99.2, 1743.0], [99.3, 1743.0], [99.4, 1743.0], [99.5, 1778.0], [99.6, 1778.0], [99.7, 1778.0], [99.8, 1778.0], [99.9, 1778.0]], "isOverall": false, "label": "Get Single User", "isController": false}, {"data": [[0.0, 4923.0], [0.1, 4923.0], [0.2, 4923.0], [0.3, 4923.0], [0.4, 4923.0], [0.5, 4974.0], [0.6, 4974.0], [0.7, 4974.0], [0.8, 4974.0], [0.9, 4974.0], [1.0, 4975.0], [1.1, 4975.0], [1.2, 4975.0], [1.3, 4975.0], [1.4, 4975.0], [1.5, 5019.0], [1.6, 5019.0], [1.7, 5019.0], [1.8, 5019.0], [1.9, 5019.0], [2.0, 5045.0], [2.1, 5045.0], [2.2, 5045.0], [2.3, 5045.0], [2.4, 5045.0], [2.5, 5066.0], [2.6, 5066.0], [2.7, 5066.0], [2.8, 5066.0], [2.9, 5066.0], [3.0, 5067.0], [3.1, 5067.0], [3.2, 5067.0], [3.3, 5067.0], [3.4, 5067.0], [3.5, 5073.0], [3.6, 5073.0], [3.7, 5073.0], [3.8, 5073.0], [3.9, 5073.0], [4.0, 5076.0], [4.1, 5076.0], [4.2, 5076.0], [4.3, 5076.0], [4.4, 5076.0], [4.5, 5082.0], [4.6, 5082.0], [4.7, 5082.0], [4.8, 5082.0], [4.9, 5082.0], [5.0, 5083.0], [5.1, 5083.0], [5.2, 5083.0], [5.3, 5083.0], [5.4, 5083.0], [5.5, 5084.0], [5.6, 5084.0], [5.7, 5084.0], [5.8, 5084.0], [5.9, 5084.0], [6.0, 5090.0], [6.1, 5090.0], [6.2, 5090.0], [6.3, 5090.0], [6.4, 5090.0], [6.5, 5092.0], [6.6, 5092.0], [6.7, 5092.0], [6.8, 5092.0], [6.9, 5092.0], [7.0, 5106.0], [7.1, 5106.0], [7.2, 5106.0], [7.3, 5106.0], [7.4, 5106.0], [7.5, 5107.0], [7.6, 5107.0], [7.7, 5107.0], [7.8, 5107.0], [7.9, 5107.0], [8.0, 5123.0], [8.1, 5123.0], [8.2, 5123.0], [8.3, 5123.0], [8.4, 5123.0], [8.5, 5129.0], [8.6, 5129.0], [8.7, 5129.0], [8.8, 5129.0], [8.9, 5129.0], [9.0, 5131.0], [9.1, 5131.0], [9.2, 5131.0], [9.3, 5131.0], [9.4, 5131.0], [9.5, 5134.0], [9.6, 5134.0], [9.7, 5134.0], [9.8, 5134.0], [9.9, 5134.0], [10.0, 5145.0], [10.1, 5145.0], [10.2, 5145.0], [10.3, 5145.0], [10.4, 5145.0], [10.5, 5152.0], [10.6, 5152.0], [10.7, 5152.0], [10.8, 5152.0], [10.9, 5152.0], [11.0, 5161.0], [11.1, 5161.0], [11.2, 5161.0], [11.3, 5161.0], [11.4, 5161.0], [11.5, 5165.0], [11.6, 5165.0], [11.7, 5165.0], [11.8, 5165.0], [11.9, 5165.0], [12.0, 5166.0], [12.1, 5166.0], [12.2, 5166.0], [12.3, 5166.0], [12.4, 5166.0], [12.5, 5167.0], [12.6, 5167.0], [12.7, 5167.0], [12.8, 5167.0], [12.9, 5167.0], [13.0, 5167.0], [13.1, 5167.0], [13.2, 5167.0], [13.3, 5167.0], [13.4, 5167.0], [13.5, 5183.0], [13.6, 5183.0], [13.7, 5183.0], [13.8, 5183.0], [13.9, 5183.0], [14.0, 5188.0], [14.1, 5188.0], [14.2, 5188.0], [14.3, 5188.0], [14.4, 5188.0], [14.5, 5188.0], [14.6, 5188.0], [14.7, 5188.0], [14.8, 5188.0], [14.9, 5188.0], [15.0, 5210.0], [15.1, 5210.0], [15.2, 5210.0], [15.3, 5210.0], [15.4, 5210.0], [15.5, 5210.0], [15.6, 5210.0], [15.7, 5210.0], [15.8, 5210.0], [15.9, 5210.0], [16.0, 5217.0], [16.1, 5217.0], [16.2, 5217.0], [16.3, 5217.0], [16.4, 5217.0], [16.5, 5221.0], [16.6, 5221.0], [16.7, 5221.0], [16.8, 5221.0], [16.9, 5221.0], [17.0, 5228.0], [17.1, 5228.0], [17.2, 5228.0], [17.3, 5228.0], [17.4, 5228.0], [17.5, 5230.0], [17.6, 5230.0], [17.7, 5230.0], [17.8, 5230.0], [17.9, 5230.0], [18.0, 5231.0], [18.1, 5231.0], [18.2, 5231.0], [18.3, 5231.0], [18.4, 5231.0], [18.5, 5233.0], [18.6, 5233.0], [18.7, 5233.0], [18.8, 5233.0], [18.9, 5233.0], [19.0, 5239.0], [19.1, 5239.0], [19.2, 5239.0], [19.3, 5239.0], [19.4, 5239.0], [19.5, 5241.0], [19.6, 5241.0], [19.7, 5241.0], [19.8, 5241.0], [19.9, 5241.0], [20.0, 5242.0], [20.1, 5242.0], [20.2, 5242.0], [20.3, 5242.0], [20.4, 5242.0], [20.5, 5243.0], [20.6, 5243.0], [20.7, 5243.0], [20.8, 5243.0], [20.9, 5243.0], [21.0, 5244.0], [21.1, 5244.0], [21.2, 5244.0], [21.3, 5244.0], [21.4, 5244.0], [21.5, 5253.0], [21.6, 5253.0], [21.7, 5253.0], [21.8, 5253.0], [21.9, 5253.0], [22.0, 5257.0], [22.1, 5257.0], [22.2, 5257.0], [22.3, 5257.0], [22.4, 5257.0], [22.5, 5259.0], [22.6, 5259.0], [22.7, 5259.0], [22.8, 5259.0], [22.9, 5259.0], [23.0, 5264.0], [23.1, 5264.0], [23.2, 5264.0], [23.3, 5264.0], [23.4, 5264.0], [23.5, 5275.0], [23.6, 5275.0], [23.7, 5275.0], [23.8, 5275.0], [23.9, 5275.0], [24.0, 5287.0], [24.1, 5287.0], [24.2, 5287.0], [24.3, 5287.0], [24.4, 5287.0], [24.5, 5287.0], [24.6, 5287.0], [24.7, 5287.0], [24.8, 5287.0], [24.9, 5287.0], [25.0, 5295.0], [25.1, 5295.0], [25.2, 5295.0], [25.3, 5295.0], [25.4, 5295.0], [25.5, 5297.0], [25.6, 5297.0], [25.7, 5297.0], [25.8, 5297.0], [25.9, 5297.0], [26.0, 5305.0], [26.1, 5305.0], [26.2, 5305.0], [26.3, 5305.0], [26.4, 5305.0], [26.5, 5307.0], [26.6, 5307.0], [26.7, 5307.0], [26.8, 5307.0], [26.9, 5307.0], [27.0, 5308.0], [27.1, 5308.0], [27.2, 5308.0], [27.3, 5308.0], [27.4, 5308.0], [27.5, 5310.0], [27.6, 5310.0], [27.7, 5310.0], [27.8, 5310.0], [27.9, 5310.0], [28.0, 5311.0], [28.1, 5311.0], [28.2, 5311.0], [28.3, 5311.0], [28.4, 5311.0], [28.5, 5314.0], [28.6, 5314.0], [28.7, 5314.0], [28.8, 5314.0], [28.9, 5314.0], [29.0, 5321.0], [29.1, 5321.0], [29.2, 5321.0], [29.3, 5321.0], [29.4, 5321.0], [29.5, 5322.0], [29.6, 5322.0], [29.7, 5322.0], [29.8, 5322.0], [29.9, 5322.0], [30.0, 5322.0], [30.1, 5322.0], [30.2, 5322.0], [30.3, 5322.0], [30.4, 5322.0], [30.5, 5326.0], [30.6, 5326.0], [30.7, 5326.0], [30.8, 5326.0], [30.9, 5326.0], [31.0, 5337.0], [31.1, 5337.0], [31.2, 5337.0], [31.3, 5337.0], [31.4, 5337.0], [31.5, 5354.0], [31.6, 5354.0], [31.7, 5354.0], [31.8, 5354.0], [31.9, 5354.0], [32.0, 5355.0], [32.1, 5355.0], [32.2, 5355.0], [32.3, 5355.0], [32.4, 5355.0], [32.5, 5357.0], [32.6, 5357.0], [32.7, 5357.0], [32.8, 5357.0], [32.9, 5357.0], [33.0, 5360.0], [33.1, 5360.0], [33.2, 5360.0], [33.3, 5360.0], [33.4, 5360.0], [33.5, 5380.0], [33.6, 5380.0], [33.7, 5380.0], [33.8, 5380.0], [33.9, 5380.0], [34.0, 5391.0], [34.1, 5391.0], [34.2, 5391.0], [34.3, 5391.0], [34.4, 5391.0], [34.5, 5400.0], [34.6, 5400.0], [34.7, 5400.0], [34.8, 5400.0], [34.9, 5400.0], [35.0, 5401.0], [35.1, 5401.0], [35.2, 5401.0], [35.3, 5401.0], [35.4, 5401.0], [35.5, 5402.0], [35.6, 5402.0], [35.7, 5402.0], [35.8, 5402.0], [35.9, 5402.0], [36.0, 5404.0], [36.1, 5404.0], [36.2, 5404.0], [36.3, 5404.0], [36.4, 5404.0], [36.5, 5409.0], [36.6, 5409.0], [36.7, 5409.0], [36.8, 5409.0], [36.9, 5409.0], [37.0, 5425.0], [37.1, 5425.0], [37.2, 5425.0], [37.3, 5425.0], [37.4, 5425.0], [37.5, 5427.0], [37.6, 5427.0], [37.7, 5427.0], [37.8, 5427.0], [37.9, 5427.0], [38.0, 5430.0], [38.1, 5430.0], [38.2, 5430.0], [38.3, 5430.0], [38.4, 5430.0], [38.5, 5437.0], [38.6, 5437.0], [38.7, 5437.0], [38.8, 5437.0], [38.9, 5437.0], [39.0, 5442.0], [39.1, 5442.0], [39.2, 5442.0], [39.3, 5442.0], [39.4, 5442.0], [39.5, 5443.0], [39.6, 5443.0], [39.7, 5443.0], [39.8, 5443.0], [39.9, 5443.0], [40.0, 5446.0], [40.1, 5446.0], [40.2, 5446.0], [40.3, 5446.0], [40.4, 5446.0], [40.5, 5447.0], [40.6, 5447.0], [40.7, 5447.0], [40.8, 5447.0], [40.9, 5447.0], [41.0, 5449.0], [41.1, 5449.0], [41.2, 5449.0], [41.3, 5449.0], [41.4, 5449.0], [41.5, 5461.0], [41.6, 5461.0], [41.7, 5461.0], [41.8, 5461.0], [41.9, 5461.0], [42.0, 5477.0], [42.1, 5477.0], [42.2, 5477.0], [42.3, 5477.0], [42.4, 5477.0], [42.5, 5477.0], [42.6, 5477.0], [42.7, 5477.0], [42.8, 5477.0], [42.9, 5477.0], [43.0, 5480.0], [43.1, 5480.0], [43.2, 5480.0], [43.3, 5480.0], [43.4, 5480.0], [43.5, 5485.0], [43.6, 5485.0], [43.7, 5485.0], [43.8, 5485.0], [43.9, 5485.0], [44.0, 5488.0], [44.1, 5488.0], [44.2, 5488.0], [44.3, 5488.0], [44.4, 5488.0], [44.5, 5506.0], [44.6, 5506.0], [44.7, 5506.0], [44.8, 5506.0], [44.9, 5506.0], [45.0, 5514.0], [45.1, 5514.0], [45.2, 5514.0], [45.3, 5514.0], [45.4, 5514.0], [45.5, 5517.0], [45.6, 5517.0], [45.7, 5517.0], [45.8, 5517.0], [45.9, 5517.0], [46.0, 5517.0], [46.1, 5517.0], [46.2, 5517.0], [46.3, 5517.0], [46.4, 5517.0], [46.5, 5521.0], [46.6, 5521.0], [46.7, 5521.0], [46.8, 5521.0], [46.9, 5521.0], [47.0, 5528.0], [47.1, 5528.0], [47.2, 5528.0], [47.3, 5528.0], [47.4, 5528.0], [47.5, 5529.0], [47.6, 5529.0], [47.7, 5529.0], [47.8, 5529.0], [47.9, 5529.0], [48.0, 5533.0], [48.1, 5533.0], [48.2, 5533.0], [48.3, 5533.0], [48.4, 5533.0], [48.5, 5534.0], [48.6, 5534.0], [48.7, 5534.0], [48.8, 5534.0], [48.9, 5534.0], [49.0, 5539.0], [49.1, 5539.0], [49.2, 5539.0], [49.3, 5539.0], [49.4, 5539.0], [49.5, 5545.0], [49.6, 5545.0], [49.7, 5545.0], [49.8, 5545.0], [49.9, 5545.0], [50.0, 5549.0], [50.1, 5549.0], [50.2, 5549.0], [50.3, 5549.0], [50.4, 5549.0], [50.5, 5555.0], [50.6, 5555.0], [50.7, 5555.0], [50.8, 5555.0], [50.9, 5555.0], [51.0, 5560.0], [51.1, 5560.0], [51.2, 5560.0], [51.3, 5560.0], [51.4, 5560.0], [51.5, 5569.0], [51.6, 5569.0], [51.7, 5569.0], [51.8, 5569.0], [51.9, 5569.0], [52.0, 5571.0], [52.1, 5571.0], [52.2, 5571.0], [52.3, 5571.0], [52.4, 5571.0], [52.5, 5575.0], [52.6, 5575.0], [52.7, 5575.0], [52.8, 5575.0], [52.9, 5575.0], [53.0, 5576.0], [53.1, 5576.0], [53.2, 5576.0], [53.3, 5576.0], [53.4, 5576.0], [53.5, 5577.0], [53.6, 5577.0], [53.7, 5577.0], [53.8, 5577.0], [53.9, 5577.0], [54.0, 5587.0], [54.1, 5587.0], [54.2, 5587.0], [54.3, 5587.0], [54.4, 5587.0], [54.5, 5593.0], [54.6, 5593.0], [54.7, 5593.0], [54.8, 5593.0], [54.9, 5593.0], [55.0, 5597.0], [55.1, 5597.0], [55.2, 5597.0], [55.3, 5597.0], [55.4, 5597.0], [55.5, 5604.0], [55.6, 5604.0], [55.7, 5604.0], [55.8, 5604.0], [55.9, 5604.0], [56.0, 5606.0], [56.1, 5606.0], [56.2, 5606.0], [56.3, 5606.0], [56.4, 5606.0], [56.5, 5609.0], [56.6, 5609.0], [56.7, 5609.0], [56.8, 5609.0], [56.9, 5609.0], [57.0, 5610.0], [57.1, 5610.0], [57.2, 5610.0], [57.3, 5610.0], [57.4, 5610.0], [57.5, 5612.0], [57.6, 5612.0], [57.7, 5612.0], [57.8, 5612.0], [57.9, 5612.0], [58.0, 5617.0], [58.1, 5617.0], [58.2, 5617.0], [58.3, 5617.0], [58.4, 5617.0], [58.5, 5636.0], [58.6, 5636.0], [58.7, 5636.0], [58.8, 5636.0], [58.9, 5636.0], [59.0, 5640.0], [59.1, 5640.0], [59.2, 5640.0], [59.3, 5640.0], [59.4, 5640.0], [59.5, 5640.0], [59.6, 5640.0], [59.7, 5640.0], [59.8, 5640.0], [59.9, 5640.0], [60.0, 5640.0], [60.1, 5640.0], [60.2, 5640.0], [60.3, 5640.0], [60.4, 5640.0], [60.5, 5642.0], [60.6, 5642.0], [60.7, 5642.0], [60.8, 5642.0], [60.9, 5642.0], [61.0, 5642.0], [61.1, 5642.0], [61.2, 5642.0], [61.3, 5642.0], [61.4, 5642.0], [61.5, 5643.0], [61.6, 5643.0], [61.7, 5643.0], [61.8, 5643.0], [61.9, 5643.0], [62.0, 5644.0], [62.1, 5644.0], [62.2, 5644.0], [62.3, 5644.0], [62.4, 5644.0], [62.5, 5645.0], [62.6, 5645.0], [62.7, 5645.0], [62.8, 5645.0], [62.9, 5645.0], [63.0, 5645.0], [63.1, 5645.0], [63.2, 5645.0], [63.3, 5645.0], [63.4, 5645.0], [63.5, 5646.0], [63.6, 5646.0], [63.7, 5646.0], [63.8, 5646.0], [63.9, 5646.0], [64.0, 5648.0], [64.1, 5648.0], [64.2, 5648.0], [64.3, 5648.0], [64.4, 5648.0], [64.5, 5660.0], [64.6, 5660.0], [64.7, 5660.0], [64.8, 5660.0], [64.9, 5660.0], [65.0, 5666.0], [65.1, 5666.0], [65.2, 5666.0], [65.3, 5666.0], [65.4, 5666.0], [65.5, 5666.0], [65.6, 5666.0], [65.7, 5666.0], [65.8, 5666.0], [65.9, 5666.0], [66.0, 5669.0], [66.1, 5669.0], [66.2, 5669.0], [66.3, 5669.0], [66.4, 5669.0], [66.5, 5670.0], [66.6, 5670.0], [66.7, 5670.0], [66.8, 5670.0], [66.9, 5670.0], [67.0, 5676.0], [67.1, 5676.0], [67.2, 5676.0], [67.3, 5676.0], [67.4, 5676.0], [67.5, 5676.0], [67.6, 5676.0], [67.7, 5676.0], [67.8, 5676.0], [67.9, 5676.0], [68.0, 5685.0], [68.1, 5685.0], [68.2, 5685.0], [68.3, 5685.0], [68.4, 5685.0], [68.5, 5692.0], [68.6, 5692.0], [68.7, 5692.0], [68.8, 5692.0], [68.9, 5692.0], [69.0, 5694.0], [69.1, 5694.0], [69.2, 5694.0], [69.3, 5694.0], [69.4, 5694.0], [69.5, 5699.0], [69.6, 5699.0], [69.7, 5699.0], [69.8, 5699.0], [69.9, 5699.0], [70.0, 5703.0], [70.1, 5703.0], [70.2, 5703.0], [70.3, 5703.0], [70.4, 5703.0], [70.5, 5704.0], [70.6, 5704.0], [70.7, 5704.0], [70.8, 5704.0], [70.9, 5704.0], [71.0, 5704.0], [71.1, 5704.0], [71.2, 5704.0], [71.3, 5704.0], [71.4, 5704.0], [71.5, 5705.0], [71.6, 5705.0], [71.7, 5705.0], [71.8, 5705.0], [71.9, 5705.0], [72.0, 5707.0], [72.1, 5707.0], [72.2, 5707.0], [72.3, 5707.0], [72.4, 5707.0], [72.5, 5710.0], [72.6, 5710.0], [72.7, 5710.0], [72.8, 5710.0], [72.9, 5710.0], [73.0, 5712.0], [73.1, 5712.0], [73.2, 5712.0], [73.3, 5712.0], [73.4, 5712.0], [73.5, 5715.0], [73.6, 5715.0], [73.7, 5715.0], [73.8, 5715.0], [73.9, 5715.0], [74.0, 5719.0], [74.1, 5719.0], [74.2, 5719.0], [74.3, 5719.0], [74.4, 5719.0], [74.5, 5720.0], [74.6, 5720.0], [74.7, 5720.0], [74.8, 5720.0], [74.9, 5720.0], [75.0, 5720.0], [75.1, 5720.0], [75.2, 5720.0], [75.3, 5720.0], [75.4, 5720.0], [75.5, 5722.0], [75.6, 5722.0], [75.7, 5722.0], [75.8, 5722.0], [75.9, 5722.0], [76.0, 5723.0], [76.1, 5723.0], [76.2, 5723.0], [76.3, 5723.0], [76.4, 5723.0], [76.5, 5727.0], [76.6, 5727.0], [76.7, 5727.0], [76.8, 5727.0], [76.9, 5727.0], [77.0, 5729.0], [77.1, 5729.0], [77.2, 5729.0], [77.3, 5729.0], [77.4, 5729.0], [77.5, 5732.0], [77.6, 5732.0], [77.7, 5732.0], [77.8, 5732.0], [77.9, 5732.0], [78.0, 5733.0], [78.1, 5733.0], [78.2, 5733.0], [78.3, 5733.0], [78.4, 5733.0], [78.5, 5735.0], [78.6, 5735.0], [78.7, 5735.0], [78.8, 5735.0], [78.9, 5735.0], [79.0, 5740.0], [79.1, 5740.0], [79.2, 5740.0], [79.3, 5740.0], [79.4, 5740.0], [79.5, 5744.0], [79.6, 5744.0], [79.7, 5744.0], [79.8, 5744.0], [79.9, 5744.0], [80.0, 5749.0], [80.1, 5749.0], [80.2, 5749.0], [80.3, 5749.0], [80.4, 5749.0], [80.5, 5753.0], [80.6, 5753.0], [80.7, 5753.0], [80.8, 5753.0], [80.9, 5753.0], [81.0, 5767.0], [81.1, 5767.0], [81.2, 5767.0], [81.3, 5767.0], [81.4, 5767.0], [81.5, 5779.0], [81.6, 5779.0], [81.7, 5779.0], [81.8, 5779.0], [81.9, 5779.0], [82.0, 5785.0], [82.1, 5785.0], [82.2, 5785.0], [82.3, 5785.0], [82.4, 5785.0], [82.5, 5797.0], [82.6, 5797.0], [82.7, 5797.0], [82.8, 5797.0], [82.9, 5797.0], [83.0, 5810.0], [83.1, 5810.0], [83.2, 5810.0], [83.3, 5810.0], [83.4, 5810.0], [83.5, 5816.0], [83.6, 5816.0], [83.7, 5816.0], [83.8, 5816.0], [83.9, 5816.0], [84.0, 5865.0], [84.1, 5865.0], [84.2, 5865.0], [84.3, 5865.0], [84.4, 5865.0], [84.5, 5911.0], [84.6, 5911.0], [84.7, 5911.0], [84.8, 5911.0], [84.9, 5911.0], [85.0, 5912.0], [85.1, 5912.0], [85.2, 5912.0], [85.3, 5912.0], [85.4, 5912.0], [85.5, 5916.0], [85.6, 5916.0], [85.7, 5916.0], [85.8, 5916.0], [85.9, 5916.0], [86.0, 5916.0], [86.1, 5916.0], [86.2, 5916.0], [86.3, 5916.0], [86.4, 5916.0], [86.5, 5927.0], [86.6, 5927.0], [86.7, 5927.0], [86.8, 5927.0], [86.9, 5927.0], [87.0, 6013.0], [87.1, 6013.0], [87.2, 6013.0], [87.3, 6013.0], [87.4, 6013.0], [87.5, 6019.0], [87.6, 6019.0], [87.7, 6019.0], [87.8, 6019.0], [87.9, 6019.0], [88.0, 6034.0], [88.1, 6034.0], [88.2, 6034.0], [88.3, 6034.0], [88.4, 6034.0], [88.5, 6035.0], [88.6, 6035.0], [88.7, 6035.0], [88.8, 6035.0], [88.9, 6035.0], [89.0, 6057.0], [89.1, 6057.0], [89.2, 6057.0], [89.3, 6057.0], [89.4, 6057.0], [89.5, 6063.0], [89.6, 6063.0], [89.7, 6063.0], [89.8, 6063.0], [89.9, 6063.0], [90.0, 6070.0], [90.1, 6070.0], [90.2, 6070.0], [90.3, 6070.0], [90.4, 6070.0], [90.5, 6126.0], [90.6, 6126.0], [90.7, 6126.0], [90.8, 6126.0], [90.9, 6126.0], [91.0, 6134.0], [91.1, 6134.0], [91.2, 6134.0], [91.3, 6134.0], [91.4, 6134.0], [91.5, 6138.0], [91.6, 6138.0], [91.7, 6138.0], [91.8, 6138.0], [91.9, 6138.0], [92.0, 6173.0], [92.1, 6173.0], [92.2, 6173.0], [92.3, 6173.0], [92.4, 6173.0], [92.5, 6236.0], [92.6, 6236.0], [92.7, 6236.0], [92.8, 6236.0], [92.9, 6236.0], [93.0, 6245.0], [93.1, 6245.0], [93.2, 6245.0], [93.3, 6245.0], [93.4, 6245.0], [93.5, 6256.0], [93.6, 6256.0], [93.7, 6256.0], [93.8, 6256.0], [93.9, 6256.0], [94.0, 6278.0], [94.1, 6278.0], [94.2, 6278.0], [94.3, 6278.0], [94.4, 6278.0], [94.5, 6284.0], [94.6, 6284.0], [94.7, 6284.0], [94.8, 6284.0], [94.9, 6284.0], [95.0, 6288.0], [95.1, 6288.0], [95.2, 6288.0], [95.3, 6288.0], [95.4, 6288.0], [95.5, 6303.0], [95.6, 6303.0], [95.7, 6303.0], [95.8, 6303.0], [95.9, 6303.0], [96.0, 6353.0], [96.1, 6353.0], [96.2, 6353.0], [96.3, 6353.0], [96.4, 6353.0], [96.5, 6371.0], [96.6, 6371.0], [96.7, 6371.0], [96.8, 6371.0], [96.9, 6371.0], [97.0, 6451.0], [97.1, 6451.0], [97.2, 6451.0], [97.3, 6451.0], [97.4, 6451.0], [97.5, 6604.0], [97.6, 6604.0], [97.7, 6604.0], [97.8, 6604.0], [97.9, 6604.0], [98.0, 6649.0], [98.1, 6649.0], [98.2, 6649.0], [98.3, 6649.0], [98.4, 6649.0], [98.5, 7092.0], [98.6, 7092.0], [98.7, 7092.0], [98.8, 7092.0], [98.9, 7092.0], [99.0, 7484.0], [99.1, 7484.0], [99.2, 7484.0], [99.3, 7484.0], [99.4, 7484.0], [99.5, 7508.0], [99.6, 7508.0], [99.7, 7508.0], [99.8, 7508.0], [99.9, 7508.0]], "isOverall": false, "label": "Create User", "isController": false}, {"data": [[0.0, 392.0], [0.1, 392.0], [0.2, 392.0], [0.3, 392.0], [0.4, 392.0], [0.5, 394.0], [0.6, 394.0], [0.7, 394.0], [0.8, 394.0], [0.9, 394.0], [1.0, 394.0], [1.1, 394.0], [1.2, 394.0], [1.3, 394.0], [1.4, 394.0], [1.5, 395.0], [1.6, 395.0], [1.7, 395.0], [1.8, 395.0], [1.9, 395.0], [2.0, 397.0], [2.1, 397.0], [2.2, 397.0], [2.3, 397.0], [2.4, 397.0], [2.5, 398.0], [2.6, 398.0], [2.7, 398.0], [2.8, 398.0], [2.9, 398.0], [3.0, 399.0], [3.1, 399.0], [3.2, 399.0], [3.3, 399.0], [3.4, 399.0], [3.5, 399.0], [3.6, 399.0], [3.7, 399.0], [3.8, 399.0], [3.9, 399.0], [4.0, 400.0], [4.1, 400.0], [4.2, 400.0], [4.3, 400.0], [4.4, 400.0], [4.5, 400.0], [4.6, 400.0], [4.7, 400.0], [4.8, 400.0], [4.9, 400.0], [5.0, 402.0], [5.1, 402.0], [5.2, 402.0], [5.3, 402.0], [5.4, 402.0], [5.5, 404.0], [5.6, 404.0], [5.7, 404.0], [5.8, 404.0], [5.9, 404.0], [6.0, 413.0], [6.1, 413.0], [6.2, 413.0], [6.3, 413.0], [6.4, 413.0], [6.5, 415.0], [6.6, 415.0], [6.7, 415.0], [6.8, 415.0], [6.9, 415.0], [7.0, 418.0], [7.1, 418.0], [7.2, 418.0], [7.3, 418.0], [7.4, 418.0], [7.5, 418.0], [7.6, 418.0], [7.7, 418.0], [7.8, 418.0], [7.9, 418.0], [8.0, 420.0], [8.1, 420.0], [8.2, 420.0], [8.3, 420.0], [8.4, 420.0], [8.5, 420.0], [8.6, 420.0], [8.7, 420.0], [8.8, 420.0], [8.9, 420.0], [9.0, 423.0], [9.1, 423.0], [9.2, 423.0], [9.3, 423.0], [9.4, 423.0], [9.5, 424.0], [9.6, 424.0], [9.7, 424.0], [9.8, 424.0], [9.9, 424.0], [10.0, 428.0], [10.1, 428.0], [10.2, 428.0], [10.3, 428.0], [10.4, 428.0], [10.5, 429.0], [10.6, 429.0], [10.7, 429.0], [10.8, 429.0], [10.9, 429.0], [11.0, 430.0], [11.1, 430.0], [11.2, 430.0], [11.3, 430.0], [11.4, 430.0], [11.5, 430.0], [11.6, 430.0], [11.7, 430.0], [11.8, 430.0], [11.9, 430.0], [12.0, 431.0], [12.1, 431.0], [12.2, 431.0], [12.3, 431.0], [12.4, 431.0], [12.5, 431.0], [12.6, 431.0], [12.7, 431.0], [12.8, 431.0], [12.9, 431.0], [13.0, 431.0], [13.1, 431.0], [13.2, 431.0], [13.3, 431.0], [13.4, 431.0], [13.5, 432.0], [13.6, 432.0], [13.7, 432.0], [13.8, 432.0], [13.9, 432.0], [14.0, 432.0], [14.1, 432.0], [14.2, 432.0], [14.3, 432.0], [14.4, 432.0], [14.5, 432.0], [14.6, 432.0], [14.7, 432.0], [14.8, 432.0], [14.9, 432.0], [15.0, 434.0], [15.1, 434.0], [15.2, 434.0], [15.3, 434.0], [15.4, 434.0], [15.5, 435.0], [15.6, 435.0], [15.7, 435.0], [15.8, 435.0], [15.9, 435.0], [16.0, 437.0], [16.1, 437.0], [16.2, 437.0], [16.3, 437.0], [16.4, 437.0], [16.5, 438.0], [16.6, 438.0], [16.7, 438.0], [16.8, 438.0], [16.9, 438.0], [17.0, 440.0], [17.1, 440.0], [17.2, 440.0], [17.3, 440.0], [17.4, 440.0], [17.5, 440.0], [17.6, 440.0], [17.7, 440.0], [17.8, 440.0], [17.9, 440.0], [18.0, 441.0], [18.1, 441.0], [18.2, 441.0], [18.3, 441.0], [18.4, 441.0], [18.5, 441.0], [18.6, 441.0], [18.7, 441.0], [18.8, 441.0], [18.9, 441.0], [19.0, 441.0], [19.1, 441.0], [19.2, 441.0], [19.3, 441.0], [19.4, 441.0], [19.5, 443.0], [19.6, 443.0], [19.7, 443.0], [19.8, 443.0], [19.9, 443.0], [20.0, 444.0], [20.1, 444.0], [20.2, 444.0], [20.3, 444.0], [20.4, 444.0], [20.5, 447.0], [20.6, 447.0], [20.7, 447.0], [20.8, 447.0], [20.9, 447.0], [21.0, 447.0], [21.1, 447.0], [21.2, 447.0], [21.3, 447.0], [21.4, 447.0], [21.5, 447.0], [21.6, 447.0], [21.7, 447.0], [21.8, 447.0], [21.9, 447.0], [22.0, 448.0], [22.1, 448.0], [22.2, 448.0], [22.3, 448.0], [22.4, 448.0], [22.5, 448.0], [22.6, 448.0], [22.7, 448.0], [22.8, 448.0], [22.9, 448.0], [23.0, 454.0], [23.1, 454.0], [23.2, 454.0], [23.3, 454.0], [23.4, 454.0], [23.5, 455.0], [23.6, 455.0], [23.7, 455.0], [23.8, 455.0], [23.9, 455.0], [24.0, 458.0], [24.1, 458.0], [24.2, 458.0], [24.3, 458.0], [24.4, 458.0], [24.5, 458.0], [24.6, 458.0], [24.7, 458.0], [24.8, 458.0], [24.9, 458.0], [25.0, 459.0], [25.1, 459.0], [25.2, 459.0], [25.3, 459.0], [25.4, 459.0], [25.5, 459.0], [25.6, 459.0], [25.7, 459.0], [25.8, 459.0], [25.9, 459.0], [26.0, 460.0], [26.1, 460.0], [26.2, 460.0], [26.3, 460.0], [26.4, 460.0], [26.5, 461.0], [26.6, 461.0], [26.7, 461.0], [26.8, 461.0], [26.9, 461.0], [27.0, 461.0], [27.1, 461.0], [27.2, 461.0], [27.3, 461.0], [27.4, 461.0], [27.5, 461.0], [27.6, 461.0], [27.7, 461.0], [27.8, 461.0], [27.9, 461.0], [28.0, 462.0], [28.1, 462.0], [28.2, 462.0], [28.3, 462.0], [28.4, 462.0], [28.5, 462.0], [28.6, 462.0], [28.7, 462.0], [28.8, 462.0], [28.9, 462.0], [29.0, 463.0], [29.1, 463.0], [29.2, 463.0], [29.3, 463.0], [29.4, 463.0], [29.5, 463.0], [29.6, 463.0], [29.7, 463.0], [29.8, 463.0], [29.9, 463.0], [30.0, 463.0], [30.1, 463.0], [30.2, 463.0], [30.3, 463.0], [30.4, 463.0], [30.5, 464.0], [30.6, 464.0], [30.7, 464.0], [30.8, 464.0], [30.9, 464.0], [31.0, 465.0], [31.1, 465.0], [31.2, 465.0], [31.3, 465.0], [31.4, 465.0], [31.5, 466.0], [31.6, 466.0], [31.7, 466.0], [31.8, 466.0], [31.9, 466.0], [32.0, 466.0], [32.1, 466.0], [32.2, 466.0], [32.3, 466.0], [32.4, 466.0], [32.5, 467.0], [32.6, 467.0], [32.7, 467.0], [32.8, 467.0], [32.9, 467.0], [33.0, 468.0], [33.1, 468.0], [33.2, 468.0], [33.3, 468.0], [33.4, 468.0], [33.5, 468.0], [33.6, 468.0], [33.7, 468.0], [33.8, 468.0], [33.9, 468.0], [34.0, 468.0], [34.1, 468.0], [34.2, 468.0], [34.3, 468.0], [34.4, 468.0], [34.5, 468.0], [34.6, 468.0], [34.7, 468.0], [34.8, 468.0], [34.9, 468.0], [35.0, 468.0], [35.1, 468.0], [35.2, 468.0], [35.3, 468.0], [35.4, 468.0], [35.5, 469.0], [35.6, 469.0], [35.7, 469.0], [35.8, 469.0], [35.9, 469.0], [36.0, 471.0], [36.1, 471.0], [36.2, 471.0], [36.3, 471.0], [36.4, 471.0], [36.5, 472.0], [36.6, 472.0], [36.7, 472.0], [36.8, 472.0], [36.9, 472.0], [37.0, 472.0], [37.1, 472.0], [37.2, 472.0], [37.3, 472.0], [37.4, 472.0], [37.5, 476.0], [37.6, 476.0], [37.7, 476.0], [37.8, 476.0], [37.9, 476.0], [38.0, 476.0], [38.1, 476.0], [38.2, 476.0], [38.3, 476.0], [38.4, 476.0], [38.5, 477.0], [38.6, 477.0], [38.7, 477.0], [38.8, 477.0], [38.9, 477.0], [39.0, 480.0], [39.1, 480.0], [39.2, 480.0], [39.3, 480.0], [39.4, 480.0], [39.5, 480.0], [39.6, 480.0], [39.7, 480.0], [39.8, 480.0], [39.9, 480.0], [40.0, 480.0], [40.1, 480.0], [40.2, 480.0], [40.3, 480.0], [40.4, 480.0], [40.5, 481.0], [40.6, 481.0], [40.7, 481.0], [40.8, 481.0], [40.9, 481.0], [41.0, 482.0], [41.1, 482.0], [41.2, 482.0], [41.3, 482.0], [41.4, 482.0], [41.5, 482.0], [41.6, 482.0], [41.7, 482.0], [41.8, 482.0], [41.9, 482.0], [42.0, 483.0], [42.1, 483.0], [42.2, 483.0], [42.3, 483.0], [42.4, 483.0], [42.5, 483.0], [42.6, 483.0], [42.7, 483.0], [42.8, 483.0], [42.9, 483.0], [43.0, 484.0], [43.1, 484.0], [43.2, 484.0], [43.3, 484.0], [43.4, 484.0], [43.5, 484.0], [43.6, 484.0], [43.7, 484.0], [43.8, 484.0], [43.9, 484.0], [44.0, 485.0], [44.1, 485.0], [44.2, 485.0], [44.3, 485.0], [44.4, 485.0], [44.5, 485.0], [44.6, 485.0], [44.7, 485.0], [44.8, 485.0], [44.9, 485.0], [45.0, 485.0], [45.1, 485.0], [45.2, 485.0], [45.3, 485.0], [45.4, 485.0], [45.5, 485.0], [45.6, 485.0], [45.7, 485.0], [45.8, 485.0], [45.9, 485.0], [46.0, 485.0], [46.1, 485.0], [46.2, 485.0], [46.3, 485.0], [46.4, 485.0], [46.5, 486.0], [46.6, 486.0], [46.7, 486.0], [46.8, 486.0], [46.9, 486.0], [47.0, 486.0], [47.1, 486.0], [47.2, 486.0], [47.3, 486.0], [47.4, 486.0], [47.5, 486.0], [47.6, 486.0], [47.7, 486.0], [47.8, 486.0], [47.9, 486.0], [48.0, 487.0], [48.1, 487.0], [48.2, 487.0], [48.3, 487.0], [48.4, 487.0], [48.5, 487.0], [48.6, 487.0], [48.7, 487.0], [48.8, 487.0], [48.9, 487.0], [49.0, 487.0], [49.1, 487.0], [49.2, 487.0], [49.3, 487.0], [49.4, 487.0], [49.5, 487.0], [49.6, 487.0], [49.7, 487.0], [49.8, 487.0], [49.9, 487.0], [50.0, 487.0], [50.1, 487.0], [50.2, 487.0], [50.3, 487.0], [50.4, 487.0], [50.5, 487.0], [50.6, 487.0], [50.7, 487.0], [50.8, 487.0], [50.9, 487.0], [51.0, 488.0], [51.1, 488.0], [51.2, 488.0], [51.3, 488.0], [51.4, 488.0], [51.5, 489.0], [51.6, 489.0], [51.7, 489.0], [51.8, 489.0], [51.9, 489.0], [52.0, 490.0], [52.1, 490.0], [52.2, 490.0], [52.3, 490.0], [52.4, 490.0], [52.5, 490.0], [52.6, 490.0], [52.7, 490.0], [52.8, 490.0], [52.9, 490.0], [53.0, 490.0], [53.1, 490.0], [53.2, 490.0], [53.3, 490.0], [53.4, 490.0], [53.5, 491.0], [53.6, 491.0], [53.7, 491.0], [53.8, 491.0], [53.9, 491.0], [54.0, 491.0], [54.1, 491.0], [54.2, 491.0], [54.3, 491.0], [54.4, 491.0], [54.5, 492.0], [54.6, 492.0], [54.7, 492.0], [54.8, 492.0], [54.9, 492.0], [55.0, 492.0], [55.1, 492.0], [55.2, 492.0], [55.3, 492.0], [55.4, 492.0], [55.5, 493.0], [55.6, 493.0], [55.7, 493.0], [55.8, 493.0], [55.9, 493.0], [56.0, 493.0], [56.1, 493.0], [56.2, 493.0], [56.3, 493.0], [56.4, 493.0], [56.5, 493.0], [56.6, 493.0], [56.7, 493.0], [56.8, 493.0], [56.9, 493.0], [57.0, 493.0], [57.1, 493.0], [57.2, 493.0], [57.3, 493.0], [57.4, 493.0], [57.5, 493.0], [57.6, 493.0], [57.7, 493.0], [57.8, 493.0], [57.9, 493.0], [58.0, 493.0], [58.1, 493.0], [58.2, 493.0], [58.3, 493.0], [58.4, 493.0], [58.5, 494.0], [58.6, 494.0], [58.7, 494.0], [58.8, 494.0], [58.9, 494.0], [59.0, 494.0], [59.1, 494.0], [59.2, 494.0], [59.3, 494.0], [59.4, 494.0], [59.5, 495.0], [59.6, 495.0], [59.7, 495.0], [59.8, 495.0], [59.9, 495.0], [60.0, 495.0], [60.1, 495.0], [60.2, 495.0], [60.3, 495.0], [60.4, 495.0], [60.5, 496.0], [60.6, 496.0], [60.7, 496.0], [60.8, 496.0], [60.9, 496.0], [61.0, 496.0], [61.1, 496.0], [61.2, 496.0], [61.3, 496.0], [61.4, 496.0], [61.5, 497.0], [61.6, 497.0], [61.7, 497.0], [61.8, 497.0], [61.9, 497.0], [62.0, 497.0], [62.1, 497.0], [62.2, 497.0], [62.3, 497.0], [62.4, 497.0], [62.5, 497.0], [62.6, 497.0], [62.7, 497.0], [62.8, 497.0], [62.9, 497.0], [63.0, 497.0], [63.1, 497.0], [63.2, 497.0], [63.3, 497.0], [63.4, 497.0], [63.5, 498.0], [63.6, 498.0], [63.7, 498.0], [63.8, 498.0], [63.9, 498.0], [64.0, 498.0], [64.1, 498.0], [64.2, 498.0], [64.3, 498.0], [64.4, 498.0], [64.5, 499.0], [64.6, 499.0], [64.7, 499.0], [64.8, 499.0], [64.9, 499.0], [65.0, 499.0], [65.1, 499.0], [65.2, 499.0], [65.3, 499.0], [65.4, 499.0], [65.5, 500.0], [65.6, 500.0], [65.7, 500.0], [65.8, 500.0], [65.9, 500.0], [66.0, 501.0], [66.1, 501.0], [66.2, 501.0], [66.3, 501.0], [66.4, 501.0], [66.5, 501.0], [66.6, 501.0], [66.7, 501.0], [66.8, 501.0], [66.9, 501.0], [67.0, 501.0], [67.1, 501.0], [67.2, 501.0], [67.3, 501.0], [67.4, 501.0], [67.5, 501.0], [67.6, 501.0], [67.7, 501.0], [67.8, 501.0], [67.9, 501.0], [68.0, 502.0], [68.1, 502.0], [68.2, 502.0], [68.3, 502.0], [68.4, 502.0], [68.5, 502.0], [68.6, 502.0], [68.7, 502.0], [68.8, 502.0], [68.9, 502.0], [69.0, 502.0], [69.1, 502.0], [69.2, 502.0], [69.3, 502.0], [69.4, 502.0], [69.5, 503.0], [69.6, 503.0], [69.7, 503.0], [69.8, 503.0], [69.9, 503.0], [70.0, 503.0], [70.1, 503.0], [70.2, 503.0], [70.3, 503.0], [70.4, 503.0], [70.5, 504.0], [70.6, 504.0], [70.7, 504.0], [70.8, 504.0], [70.9, 504.0], [71.0, 504.0], [71.1, 504.0], [71.2, 504.0], [71.3, 504.0], [71.4, 504.0], [71.5, 505.0], [71.6, 505.0], [71.7, 505.0], [71.8, 505.0], [71.9, 505.0], [72.0, 505.0], [72.1, 505.0], [72.2, 505.0], [72.3, 505.0], [72.4, 505.0], [72.5, 506.0], [72.6, 506.0], [72.7, 506.0], [72.8, 506.0], [72.9, 506.0], [73.0, 508.0], [73.1, 508.0], [73.2, 508.0], [73.3, 508.0], [73.4, 508.0], [73.5, 509.0], [73.6, 509.0], [73.7, 509.0], [73.8, 509.0], [73.9, 509.0], [74.0, 510.0], [74.1, 510.0], [74.2, 510.0], [74.3, 510.0], [74.4, 510.0], [74.5, 512.0], [74.6, 512.0], [74.7, 512.0], [74.8, 512.0], [74.9, 512.0], [75.0, 512.0], [75.1, 512.0], [75.2, 512.0], [75.3, 512.0], [75.4, 512.0], [75.5, 516.0], [75.6, 516.0], [75.7, 516.0], [75.8, 516.0], [75.9, 516.0], [76.0, 517.0], [76.1, 517.0], [76.2, 517.0], [76.3, 517.0], [76.4, 517.0], [76.5, 525.0], [76.6, 525.0], [76.7, 525.0], [76.8, 525.0], [76.9, 525.0], [77.0, 531.0], [77.1, 531.0], [77.2, 531.0], [77.3, 531.0], [77.4, 531.0], [77.5, 539.0], [77.6, 539.0], [77.7, 539.0], [77.8, 539.0], [77.9, 539.0], [78.0, 694.0], [78.1, 694.0], [78.2, 694.0], [78.3, 694.0], [78.4, 694.0], [78.5, 694.0], [78.6, 694.0], [78.7, 694.0], [78.8, 694.0], [78.9, 694.0], [79.0, 694.0], [79.1, 694.0], [79.2, 694.0], [79.3, 694.0], [79.4, 694.0], [79.5, 696.0], [79.6, 696.0], [79.7, 696.0], [79.8, 696.0], [79.9, 696.0], [80.0, 697.0], [80.1, 697.0], [80.2, 697.0], [80.3, 697.0], [80.4, 697.0], [80.5, 699.0], [80.6, 699.0], [80.7, 699.0], [80.8, 699.0], [80.9, 699.0], [81.0, 700.0], [81.1, 700.0], [81.2, 700.0], [81.3, 700.0], [81.4, 700.0], [81.5, 701.0], [81.6, 701.0], [81.7, 701.0], [81.8, 701.0], [81.9, 701.0], [82.0, 702.0], [82.1, 702.0], [82.2, 702.0], [82.3, 702.0], [82.4, 702.0], [82.5, 702.0], [82.6, 702.0], [82.7, 702.0], [82.8, 702.0], [82.9, 702.0], [83.0, 703.0], [83.1, 703.0], [83.2, 703.0], [83.3, 703.0], [83.4, 703.0], [83.5, 706.0], [83.6, 706.0], [83.7, 706.0], [83.8, 706.0], [83.9, 706.0], [84.0, 711.0], [84.1, 711.0], [84.2, 711.0], [84.3, 711.0], [84.4, 711.0], [84.5, 712.0], [84.6, 712.0], [84.7, 712.0], [84.8, 712.0], [84.9, 712.0], [85.0, 715.0], [85.1, 715.0], [85.2, 715.0], [85.3, 715.0], [85.4, 715.0], [85.5, 717.0], [85.6, 717.0], [85.7, 717.0], [85.8, 717.0], [85.9, 717.0], [86.0, 717.0], [86.1, 717.0], [86.2, 717.0], [86.3, 717.0], [86.4, 717.0], [86.5, 719.0], [86.6, 719.0], [86.7, 719.0], [86.8, 719.0], [86.9, 719.0], [87.0, 722.0], [87.1, 722.0], [87.2, 722.0], [87.3, 722.0], [87.4, 722.0], [87.5, 722.0], [87.6, 722.0], [87.7, 722.0], [87.8, 722.0], [87.9, 722.0], [88.0, 727.0], [88.1, 727.0], [88.2, 727.0], [88.3, 727.0], [88.4, 727.0], [88.5, 747.0], [88.6, 747.0], [88.7, 747.0], [88.8, 747.0], [88.9, 747.0], [89.0, 749.0], [89.1, 749.0], [89.2, 749.0], [89.3, 749.0], [89.4, 749.0], [89.5, 754.0], [89.6, 754.0], [89.7, 754.0], [89.8, 754.0], [89.9, 754.0], [90.0, 755.0], [90.1, 755.0], [90.2, 755.0], [90.3, 755.0], [90.4, 755.0], [90.5, 758.0], [90.6, 758.0], [90.7, 758.0], [90.8, 758.0], [90.9, 758.0], [91.0, 885.0], [91.1, 885.0], [91.2, 885.0], [91.3, 885.0], [91.4, 885.0], [91.5, 925.0], [91.6, 925.0], [91.7, 925.0], [91.8, 925.0], [91.9, 925.0], [92.0, 925.0], [92.1, 925.0], [92.2, 925.0], [92.3, 925.0], [92.4, 925.0], [92.5, 935.0], [92.6, 935.0], [92.7, 935.0], [92.8, 935.0], [92.9, 935.0], [93.0, 937.0], [93.1, 937.0], [93.2, 937.0], [93.3, 937.0], [93.4, 937.0], [93.5, 938.0], [93.6, 938.0], [93.7, 938.0], [93.8, 938.0], [93.9, 938.0], [94.0, 945.0], [94.1, 945.0], [94.2, 945.0], [94.3, 945.0], [94.4, 945.0], [94.5, 970.0], [94.6, 970.0], [94.7, 970.0], [94.8, 970.0], [94.9, 970.0], [95.0, 971.0], [95.1, 971.0], [95.2, 971.0], [95.3, 971.0], [95.4, 971.0], [95.5, 972.0], [95.6, 972.0], [95.7, 972.0], [95.8, 972.0], [95.9, 972.0], [96.0, 973.0], [96.1, 973.0], [96.2, 973.0], [96.3, 973.0], [96.4, 973.0], [96.5, 977.0], [96.6, 977.0], [96.7, 977.0], [96.8, 977.0], [96.9, 977.0], [97.0, 1012.0], [97.1, 1012.0], [97.2, 1012.0], [97.3, 1012.0], [97.4, 1012.0], [97.5, 1012.0], [97.6, 1012.0], [97.7, 1012.0], [97.8, 1012.0], [97.9, 1012.0], [98.0, 1013.0], [98.1, 1013.0], [98.2, 1013.0], [98.3, 1013.0], [98.4, 1013.0], [98.5, 1027.0], [98.6, 1027.0], [98.7, 1027.0], [98.8, 1027.0], [98.9, 1027.0], [99.0, 1121.0], [99.1, 1121.0], [99.2, 1121.0], [99.3, 1121.0], [99.4, 1121.0], [99.5, 1309.0], [99.6, 1309.0], [99.7, 1309.0], [99.8, 1309.0], [99.9, 1309.0]], "isOverall": false, "label": "Update User", "isController": false}, {"data": [[0.0, 8.0], [0.1, 8.0], [0.2, 8.0], [0.3, 8.0], [0.4, 8.0], [0.5, 9.0], [0.6, 9.0], [0.7, 9.0], [0.8, 9.0], [0.9, 9.0], [1.0, 9.0], [1.1, 9.0], [1.2, 9.0], [1.3, 9.0], [1.4, 9.0], [1.5, 10.0], [1.6, 10.0], [1.7, 10.0], [1.8, 10.0], [1.9, 10.0], [2.0, 10.0], [2.1, 10.0], [2.2, 10.0], [2.3, 10.0], [2.4, 10.0], [2.5, 11.0], [2.6, 11.0], [2.7, 11.0], [2.8, 11.0], [2.9, 11.0], [3.0, 11.0], [3.1, 11.0], [3.2, 11.0], [3.3, 11.0], [3.4, 11.0], [3.5, 11.0], [3.6, 11.0], [3.7, 11.0], [3.8, 11.0], [3.9, 11.0], [4.0, 12.0], [4.1, 12.0], [4.2, 12.0], [4.3, 12.0], [4.4, 12.0], [4.5, 13.0], [4.6, 13.0], [4.7, 13.0], [4.8, 13.0], [4.9, 13.0], [5.0, 13.0], [5.1, 13.0], [5.2, 13.0], [5.3, 13.0], [5.4, 13.0], [5.5, 13.0], [5.6, 13.0], [5.7, 13.0], [5.8, 13.0], [5.9, 13.0], [6.0, 13.0], [6.1, 13.0], [6.2, 13.0], [6.3, 13.0], [6.4, 13.0], [6.5, 13.0], [6.6, 13.0], [6.7, 13.0], [6.8, 13.0], [6.9, 13.0], [7.0, 13.0], [7.1, 13.0], [7.2, 13.0], [7.3, 13.0], [7.4, 13.0], [7.5, 13.0], [7.6, 13.0], [7.7, 13.0], [7.8, 13.0], [7.9, 13.0], [8.0, 13.0], [8.1, 13.0], [8.2, 13.0], [8.3, 13.0], [8.4, 13.0], [8.5, 14.0], [8.6, 14.0], [8.7, 14.0], [8.8, 14.0], [8.9, 14.0], [9.0, 14.0], [9.1, 14.0], [9.2, 14.0], [9.3, 14.0], [9.4, 14.0], [9.5, 14.0], [9.6, 14.0], [9.7, 14.0], [9.8, 14.0], [9.9, 14.0], [10.0, 14.0], [10.1, 14.0], [10.2, 14.0], [10.3, 14.0], [10.4, 14.0], [10.5, 14.0], [10.6, 14.0], [10.7, 14.0], [10.8, 14.0], [10.9, 14.0], [11.0, 14.0], [11.1, 14.0], [11.2, 14.0], [11.3, 14.0], [11.4, 14.0], [11.5, 15.0], [11.6, 15.0], [11.7, 15.0], [11.8, 15.0], [11.9, 15.0], [12.0, 15.0], [12.1, 15.0], [12.2, 15.0], [12.3, 15.0], [12.4, 15.0], [12.5, 15.0], [12.6, 15.0], [12.7, 15.0], [12.8, 15.0], [12.9, 15.0], [13.0, 15.0], [13.1, 15.0], [13.2, 15.0], [13.3, 15.0], [13.4, 15.0], [13.5, 15.0], [13.6, 15.0], [13.7, 15.0], [13.8, 15.0], [13.9, 15.0], [14.0, 16.0], [14.1, 16.0], [14.2, 16.0], [14.3, 16.0], [14.4, 16.0], [14.5, 17.0], [14.6, 17.0], [14.7, 17.0], [14.8, 17.0], [14.9, 17.0], [15.0, 17.0], [15.1, 17.0], [15.2, 17.0], [15.3, 17.0], [15.4, 17.0], [15.5, 18.0], [15.6, 18.0], [15.7, 18.0], [15.8, 18.0], [15.9, 18.0], [16.0, 18.0], [16.1, 18.0], [16.2, 18.0], [16.3, 18.0], [16.4, 18.0], [16.5, 18.0], [16.6, 18.0], [16.7, 18.0], [16.8, 18.0], [16.9, 18.0], [17.0, 18.0], [17.1, 18.0], [17.2, 18.0], [17.3, 18.0], [17.4, 18.0], [17.5, 19.0], [17.6, 19.0], [17.7, 19.0], [17.8, 19.0], [17.9, 19.0], [18.0, 19.0], [18.1, 19.0], [18.2, 19.0], [18.3, 19.0], [18.4, 19.0], [18.5, 19.0], [18.6, 19.0], [18.7, 19.0], [18.8, 19.0], [18.9, 19.0], [19.0, 20.0], [19.1, 20.0], [19.2, 20.0], [19.3, 20.0], [19.4, 20.0], [19.5, 20.0], [19.6, 20.0], [19.7, 20.0], [19.8, 20.0], [19.9, 20.0], [20.0, 20.0], [20.1, 20.0], [20.2, 20.0], [20.3, 20.0], [20.4, 20.0], [20.5, 21.0], [20.6, 21.0], [20.7, 21.0], [20.8, 21.0], [20.9, 21.0], [21.0, 21.0], [21.1, 21.0], [21.2, 21.0], [21.3, 21.0], [21.4, 21.0], [21.5, 21.0], [21.6, 21.0], [21.7, 21.0], [21.8, 21.0], [21.9, 21.0], [22.0, 21.0], [22.1, 21.0], [22.2, 21.0], [22.3, 21.0], [22.4, 21.0], [22.5, 22.0], [22.6, 22.0], [22.7, 22.0], [22.8, 22.0], [22.9, 22.0], [23.0, 22.0], [23.1, 22.0], [23.2, 22.0], [23.3, 22.0], [23.4, 22.0], [23.5, 23.0], [23.6, 23.0], [23.7, 23.0], [23.8, 23.0], [23.9, 23.0], [24.0, 23.0], [24.1, 23.0], [24.2, 23.0], [24.3, 23.0], [24.4, 23.0], [24.5, 23.0], [24.6, 23.0], [24.7, 23.0], [24.8, 23.0], [24.9, 23.0], [25.0, 23.0], [25.1, 23.0], [25.2, 23.0], [25.3, 23.0], [25.4, 23.0], [25.5, 24.0], [25.6, 24.0], [25.7, 24.0], [25.8, 24.0], [25.9, 24.0], [26.0, 24.0], [26.1, 24.0], [26.2, 24.0], [26.3, 24.0], [26.4, 24.0], [26.5, 25.0], [26.6, 25.0], [26.7, 25.0], [26.8, 25.0], [26.9, 25.0], [27.0, 25.0], [27.1, 25.0], [27.2, 25.0], [27.3, 25.0], [27.4, 25.0], [27.5, 26.0], [27.6, 26.0], [27.7, 26.0], [27.8, 26.0], [27.9, 26.0], [28.0, 26.0], [28.1, 26.0], [28.2, 26.0], [28.3, 26.0], [28.4, 26.0], [28.5, 26.0], [28.6, 26.0], [28.7, 26.0], [28.8, 26.0], [28.9, 26.0], [29.0, 28.0], [29.1, 28.0], [29.2, 28.0], [29.3, 28.0], [29.4, 28.0], [29.5, 28.0], [29.6, 28.0], [29.7, 28.0], [29.8, 28.0], [29.9, 28.0], [30.0, 29.0], [30.1, 29.0], [30.2, 29.0], [30.3, 29.0], [30.4, 29.0], [30.5, 29.0], [30.6, 29.0], [30.7, 29.0], [30.8, 29.0], [30.9, 29.0], [31.0, 30.0], [31.1, 30.0], [31.2, 30.0], [31.3, 30.0], [31.4, 30.0], [31.5, 30.0], [31.6, 30.0], [31.7, 30.0], [31.8, 30.0], [31.9, 30.0], [32.0, 35.0], [32.1, 35.0], [32.2, 35.0], [32.3, 35.0], [32.4, 35.0], [32.5, 36.0], [32.6, 36.0], [32.7, 36.0], [32.8, 36.0], [32.9, 36.0], [33.0, 37.0], [33.1, 37.0], [33.2, 37.0], [33.3, 37.0], [33.4, 37.0], [33.5, 42.0], [33.6, 42.0], [33.7, 42.0], [33.8, 42.0], [33.9, 42.0], [34.0, 42.0], [34.1, 42.0], [34.2, 42.0], [34.3, 42.0], [34.4, 42.0], [34.5, 42.0], [34.6, 42.0], [34.7, 42.0], [34.8, 42.0], [34.9, 42.0], [35.0, 44.0], [35.1, 44.0], [35.2, 44.0], [35.3, 44.0], [35.4, 44.0], [35.5, 44.0], [35.6, 44.0], [35.7, 44.0], [35.8, 44.0], [35.9, 44.0], [36.0, 45.0], [36.1, 45.0], [36.2, 45.0], [36.3, 45.0], [36.4, 45.0], [36.5, 49.0], [36.6, 49.0], [36.7, 49.0], [36.8, 49.0], [36.9, 49.0], [37.0, 57.0], [37.1, 57.0], [37.2, 57.0], [37.3, 57.0], [37.4, 57.0], [37.5, 59.0], [37.6, 59.0], [37.7, 59.0], [37.8, 59.0], [37.9, 59.0], [38.0, 60.0], [38.1, 60.0], [38.2, 60.0], [38.3, 60.0], [38.4, 60.0], [38.5, 61.0], [38.6, 61.0], [38.7, 61.0], [38.8, 61.0], [38.9, 61.0], [39.0, 62.0], [39.1, 62.0], [39.2, 62.0], [39.3, 62.0], [39.4, 62.0], [39.5, 62.0], [39.6, 62.0], [39.7, 62.0], [39.8, 62.0], [39.9, 62.0], [40.0, 64.0], [40.1, 64.0], [40.2, 64.0], [40.3, 64.0], [40.4, 64.0], [40.5, 64.0], [40.6, 64.0], [40.7, 64.0], [40.8, 64.0], [40.9, 64.0], [41.0, 64.0], [41.1, 64.0], [41.2, 64.0], [41.3, 64.0], [41.4, 64.0], [41.5, 64.0], [41.6, 64.0], [41.7, 64.0], [41.8, 64.0], [41.9, 64.0], [42.0, 65.0], [42.1, 65.0], [42.2, 65.0], [42.3, 65.0], [42.4, 65.0], [42.5, 67.0], [42.6, 67.0], [42.7, 67.0], [42.8, 67.0], [42.9, 67.0], [43.0, 67.0], [43.1, 67.0], [43.2, 67.0], [43.3, 67.0], [43.4, 67.0], [43.5, 68.0], [43.6, 68.0], [43.7, 68.0], [43.8, 68.0], [43.9, 68.0], [44.0, 69.0], [44.1, 69.0], [44.2, 69.0], [44.3, 69.0], [44.4, 69.0], [44.5, 69.0], [44.6, 69.0], [44.7, 69.0], [44.8, 69.0], [44.9, 69.0], [45.0, 70.0], [45.1, 70.0], [45.2, 70.0], [45.3, 70.0], [45.4, 70.0], [45.5, 72.0], [45.6, 72.0], [45.7, 72.0], [45.8, 72.0], [45.9, 72.0], [46.0, 73.0], [46.1, 73.0], [46.2, 73.0], [46.3, 73.0], [46.4, 73.0], [46.5, 73.0], [46.6, 73.0], [46.7, 73.0], [46.8, 73.0], [46.9, 73.0], [47.0, 74.0], [47.1, 74.0], [47.2, 74.0], [47.3, 74.0], [47.4, 74.0], [47.5, 74.0], [47.6, 74.0], [47.7, 74.0], [47.8, 74.0], [47.9, 74.0], [48.0, 74.0], [48.1, 74.0], [48.2, 74.0], [48.3, 74.0], [48.4, 74.0], [48.5, 74.0], [48.6, 74.0], [48.7, 74.0], [48.8, 74.0], [48.9, 74.0], [49.0, 75.0], [49.1, 75.0], [49.2, 75.0], [49.3, 75.0], [49.4, 75.0], [49.5, 75.0], [49.6, 75.0], [49.7, 75.0], [49.8, 75.0], [49.9, 75.0], [50.0, 75.0], [50.1, 75.0], [50.2, 75.0], [50.3, 75.0], [50.4, 75.0], [50.5, 76.0], [50.6, 76.0], [50.7, 76.0], [50.8, 76.0], [50.9, 76.0], [51.0, 76.0], [51.1, 76.0], [51.2, 76.0], [51.3, 76.0], [51.4, 76.0], [51.5, 77.0], [51.6, 77.0], [51.7, 77.0], [51.8, 77.0], [51.9, 77.0], [52.0, 77.0], [52.1, 77.0], [52.2, 77.0], [52.3, 77.0], [52.4, 77.0], [52.5, 78.0], [52.6, 78.0], [52.7, 78.0], [52.8, 78.0], [52.9, 78.0], [53.0, 78.0], [53.1, 78.0], [53.2, 78.0], [53.3, 78.0], [53.4, 78.0], [53.5, 78.0], [53.6, 78.0], [53.7, 78.0], [53.8, 78.0], [53.9, 78.0], [54.0, 78.0], [54.1, 78.0], [54.2, 78.0], [54.3, 78.0], [54.4, 78.0], [54.5, 79.0], [54.6, 79.0], [54.7, 79.0], [54.8, 79.0], [54.9, 79.0], [55.0, 79.0], [55.1, 79.0], [55.2, 79.0], [55.3, 79.0], [55.4, 79.0], [55.5, 79.0], [55.6, 79.0], [55.7, 79.0], [55.8, 79.0], [55.9, 79.0], [56.0, 79.0], [56.1, 79.0], [56.2, 79.0], [56.3, 79.0], [56.4, 79.0], [56.5, 79.0], [56.6, 79.0], [56.7, 79.0], [56.8, 79.0], [56.9, 79.0], [57.0, 79.0], [57.1, 79.0], [57.2, 79.0], [57.3, 79.0], [57.4, 79.0], [57.5, 79.0], [57.6, 79.0], [57.7, 79.0], [57.8, 79.0], [57.9, 79.0], [58.0, 79.0], [58.1, 79.0], [58.2, 79.0], [58.3, 79.0], [58.4, 79.0], [58.5, 80.0], [58.6, 80.0], [58.7, 80.0], [58.8, 80.0], [58.9, 80.0], [59.0, 80.0], [59.1, 80.0], [59.2, 80.0], [59.3, 80.0], [59.4, 80.0], [59.5, 80.0], [59.6, 80.0], [59.7, 80.0], [59.8, 80.0], [59.9, 80.0], [60.0, 80.0], [60.1, 80.0], [60.2, 80.0], [60.3, 80.0], [60.4, 80.0], [60.5, 80.0], [60.6, 80.0], [60.7, 80.0], [60.8, 80.0], [60.9, 80.0], [61.0, 81.0], [61.1, 81.0], [61.2, 81.0], [61.3, 81.0], [61.4, 81.0], [61.5, 81.0], [61.6, 81.0], [61.7, 81.0], [61.8, 81.0], [61.9, 81.0], [62.0, 82.0], [62.1, 82.0], [62.2, 82.0], [62.3, 82.0], [62.4, 82.0], [62.5, 83.0], [62.6, 83.0], [62.7, 83.0], [62.8, 83.0], [62.9, 83.0], [63.0, 83.0], [63.1, 83.0], [63.2, 83.0], [63.3, 83.0], [63.4, 83.0], [63.5, 84.0], [63.6, 84.0], [63.7, 84.0], [63.8, 84.0], [63.9, 84.0], [64.0, 85.0], [64.1, 85.0], [64.2, 85.0], [64.3, 85.0], [64.4, 85.0], [64.5, 85.0], [64.6, 85.0], [64.7, 85.0], [64.8, 85.0], [64.9, 85.0], [65.0, 86.0], [65.1, 86.0], [65.2, 86.0], [65.3, 86.0], [65.4, 86.0], [65.5, 87.0], [65.6, 87.0], [65.7, 87.0], [65.8, 87.0], [65.9, 87.0], [66.0, 87.0], [66.1, 87.0], [66.2, 87.0], [66.3, 87.0], [66.4, 87.0], [66.5, 87.0], [66.6, 87.0], [66.7, 87.0], [66.8, 87.0], [66.9, 87.0], [67.0, 88.0], [67.1, 88.0], [67.2, 88.0], [67.3, 88.0], [67.4, 88.0], [67.5, 89.0], [67.6, 89.0], [67.7, 89.0], [67.8, 89.0], [67.9, 89.0], [68.0, 94.0], [68.1, 94.0], [68.2, 94.0], [68.3, 94.0], [68.4, 94.0], [68.5, 97.0], [68.6, 97.0], [68.7, 97.0], [68.8, 97.0], [68.9, 97.0], [69.0, 97.0], [69.1, 97.0], [69.2, 97.0], [69.3, 97.0], [69.4, 97.0], [69.5, 98.0], [69.6, 98.0], [69.7, 98.0], [69.8, 98.0], [69.9, 98.0], [70.0, 98.0], [70.1, 98.0], [70.2, 98.0], [70.3, 98.0], [70.4, 98.0], [70.5, 99.0], [70.6, 99.0], [70.7, 99.0], [70.8, 99.0], [70.9, 99.0], [71.0, 101.0], [71.1, 101.0], [71.2, 101.0], [71.3, 101.0], [71.4, 101.0], [71.5, 103.0], [71.6, 103.0], [71.7, 103.0], [71.8, 103.0], [71.9, 103.0], [72.0, 103.0], [72.1, 103.0], [72.2, 103.0], [72.3, 103.0], [72.4, 103.0], [72.5, 117.0], [72.6, 117.0], [72.7, 117.0], [72.8, 117.0], [72.9, 117.0], [73.0, 119.0], [73.1, 119.0], [73.2, 119.0], [73.3, 119.0], [73.4, 119.0], [73.5, 128.0], [73.6, 128.0], [73.7, 128.0], [73.8, 128.0], [73.9, 128.0], [74.0, 139.0], [74.1, 139.0], [74.2, 139.0], [74.3, 139.0], [74.4, 139.0], [74.5, 140.0], [74.6, 140.0], [74.7, 140.0], [74.8, 140.0], [74.9, 140.0], [75.0, 144.0], [75.1, 144.0], [75.2, 144.0], [75.3, 144.0], [75.4, 144.0], [75.5, 147.0], [75.6, 147.0], [75.7, 147.0], [75.8, 147.0], [75.9, 147.0], [76.0, 149.0], [76.1, 149.0], [76.2, 149.0], [76.3, 149.0], [76.4, 149.0], [76.5, 150.0], [76.6, 150.0], [76.7, 150.0], [76.8, 150.0], [76.9, 150.0], [77.0, 155.0], [77.1, 155.0], [77.2, 155.0], [77.3, 155.0], [77.4, 155.0], [77.5, 161.0], [77.6, 161.0], [77.7, 161.0], [77.8, 161.0], [77.9, 161.0], [78.0, 165.0], [78.1, 165.0], [78.2, 165.0], [78.3, 165.0], [78.4, 165.0], [78.5, 166.0], [78.6, 166.0], [78.7, 166.0], [78.8, 166.0], [78.9, 166.0], [79.0, 167.0], [79.1, 167.0], [79.2, 167.0], [79.3, 167.0], [79.4, 167.0], [79.5, 169.0], [79.6, 169.0], [79.7, 169.0], [79.8, 169.0], [79.9, 169.0], [80.0, 171.0], [80.1, 171.0], [80.2, 171.0], [80.3, 171.0], [80.4, 171.0], [80.5, 171.0], [80.6, 171.0], [80.7, 171.0], [80.8, 171.0], [80.9, 171.0], [81.0, 172.0], [81.1, 172.0], [81.2, 172.0], [81.3, 172.0], [81.4, 172.0], [81.5, 173.0], [81.6, 173.0], [81.7, 173.0], [81.8, 173.0], [81.9, 173.0], [82.0, 175.0], [82.1, 175.0], [82.2, 175.0], [82.3, 175.0], [82.4, 175.0], [82.5, 178.0], [82.6, 178.0], [82.7, 178.0], [82.8, 178.0], [82.9, 178.0], [83.0, 179.0], [83.1, 179.0], [83.2, 179.0], [83.3, 179.0], [83.4, 179.0], [83.5, 180.0], [83.6, 180.0], [83.7, 180.0], [83.8, 180.0], [83.9, 180.0], [84.0, 182.0], [84.1, 182.0], [84.2, 182.0], [84.3, 182.0], [84.4, 182.0], [84.5, 187.0], [84.6, 187.0], [84.7, 187.0], [84.8, 187.0], [84.9, 187.0], [85.0, 188.0], [85.1, 188.0], [85.2, 188.0], [85.3, 188.0], [85.4, 188.0], [85.5, 189.0], [85.6, 189.0], [85.7, 189.0], [85.8, 189.0], [85.9, 189.0], [86.0, 190.0], [86.1, 190.0], [86.2, 190.0], [86.3, 190.0], [86.4, 190.0], [86.5, 193.0], [86.6, 193.0], [86.7, 193.0], [86.8, 193.0], [86.9, 193.0], [87.0, 196.0], [87.1, 196.0], [87.2, 196.0], [87.3, 196.0], [87.4, 196.0], [87.5, 202.0], [87.6, 202.0], [87.7, 202.0], [87.8, 202.0], [87.9, 202.0], [88.0, 203.0], [88.1, 203.0], [88.2, 203.0], [88.3, 203.0], [88.4, 203.0], [88.5, 203.0], [88.6, 203.0], [88.7, 203.0], [88.8, 203.0], [88.9, 203.0], [89.0, 209.0], [89.1, 209.0], [89.2, 209.0], [89.3, 209.0], [89.4, 209.0], [89.5, 215.0], [89.6, 215.0], [89.7, 215.0], [89.8, 215.0], [89.9, 215.0], [90.0, 216.0], [90.1, 216.0], [90.2, 216.0], [90.3, 216.0], [90.4, 216.0], [90.5, 355.0], [90.6, 355.0], [90.7, 355.0], [90.8, 355.0], [90.9, 355.0], [91.0, 367.0], [91.1, 367.0], [91.2, 367.0], [91.3, 367.0], [91.4, 367.0], [91.5, 368.0], [91.6, 368.0], [91.7, 368.0], [91.8, 368.0], [91.9, 368.0], [92.0, 382.0], [92.1, 382.0], [92.2, 382.0], [92.3, 382.0], [92.4, 382.0], [92.5, 400.0], [92.6, 400.0], [92.7, 400.0], [92.8, 400.0], [92.9, 400.0], [93.0, 419.0], [93.1, 419.0], [93.2, 419.0], [93.3, 419.0], [93.4, 419.0], [93.5, 458.0], [93.6, 458.0], [93.7, 458.0], [93.8, 458.0], [93.9, 458.0], [94.0, 458.0], [94.1, 458.0], [94.2, 458.0], [94.3, 458.0], [94.4, 458.0], [94.5, 461.0], [94.6, 461.0], [94.7, 461.0], [94.8, 461.0], [94.9, 461.0], [95.0, 468.0], [95.1, 468.0], [95.2, 468.0], [95.3, 468.0], [95.4, 468.0], [95.5, 469.0], [95.6, 469.0], [95.7, 469.0], [95.8, 469.0], [95.9, 469.0], [96.0, 480.0], [96.1, 480.0], [96.2, 480.0], [96.3, 480.0], [96.4, 480.0], [96.5, 491.0], [96.6, 491.0], [96.7, 491.0], [96.8, 491.0], [96.9, 491.0], [97.0, 518.0], [97.1, 518.0], [97.2, 518.0], [97.3, 518.0], [97.4, 518.0], [97.5, 589.0], [97.6, 589.0], [97.7, 589.0], [97.8, 589.0], [97.9, 589.0], [98.0, 711.0], [98.1, 711.0], [98.2, 711.0], [98.3, 711.0], [98.4, 711.0], [98.5, 807.0], [98.6, 807.0], [98.7, 807.0], [98.8, 807.0], [98.9, 807.0], [99.0, 840.0], [99.1, 840.0], [99.2, 840.0], [99.3, 840.0], [99.4, 840.0], [99.5, 917.0], [99.6, 917.0], [99.7, 917.0], [99.8, 917.0], [99.9, 917.0]], "isOverall": false, "label": "Delayed Response", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 142.0, "series": [{"data": [[0.0, 119.0], [600.0, 3.0], [700.0, 1.0], [200.0, 3.0], [800.0, 5.0], [900.0, 6.0], [1000.0, 3.0], [1100.0, 3.0], [300.0, 3.0], [100.0, 28.0], [400.0, 13.0], [1600.0, 2.0], [1700.0, 3.0], [1800.0, 4.0], [500.0, 4.0]], "isOverall": false, "label": "Get List User", "isController": false}, {"data": [[0.0, 142.0], [300.0, 5.0], [600.0, 1.0], [700.0, 3.0], [1500.0, 3.0], [100.0, 1.0], [200.0, 30.0], [1700.0, 2.0], [900.0, 6.0], [500.0, 7.0]], "isOverall": false, "label": "Get Single User", "isController": false}, {"data": [[5100.0, 16.0], [5000.0, 11.0], [4900.0, 3.0], [5300.0, 17.0], [5200.0, 22.0], [5600.0, 29.0], [5500.0, 22.0], [5400.0, 20.0], [5700.0, 26.0], [5800.0, 3.0], [5900.0, 5.0], [6000.0, 7.0], [6100.0, 4.0], [6200.0, 6.0], [6300.0, 3.0], [6400.0, 1.0], [6600.0, 2.0], [7000.0, 1.0], [7400.0, 1.0], [7500.0, 1.0]], "isOverall": false, "label": "Create User", "isController": false}, {"data": [[1100.0, 1.0], [600.0, 6.0], [300.0, 8.0], [1300.0, 1.0], [700.0, 20.0], [400.0, 123.0], [800.0, 1.0], [900.0, 11.0], [500.0, 25.0], [1000.0, 4.0]], "isOverall": false, "label": "Update User", "isController": false}, {"data": [[0.0, 142.0], [300.0, 4.0], [700.0, 1.0], [100.0, 33.0], [400.0, 9.0], [200.0, 6.0], [800.0, 2.0], [900.0, 1.0], [500.0, 2.0]], "isOverall": false, "label": "Delayed Response", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 7500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 117.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 670.0, "series": [{"data": [[0.0, 670.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 117.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 213.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 151.93999999999966, "minX": 1.64786166E12, "maxY": 151.93999999999966, "series": [{"data": [[1.64786166E12, 151.93999999999966]], "isOverall": false, "label": "Reqres.in", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64786166E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 8.0, "minX": 4.0, "maxY": 7496.0, "series": [{"data": [[38.0, 585.0], [75.0, 71.0], [83.0, 965.0], [82.0, 45.0], [80.0, 40.0], [84.0, 33.5], [97.0, 1143.0], [96.0, 699.0], [106.0, 1083.0], [113.0, 70.0], [119.0, 1168.0], [118.0, 167.66666666666669], [117.0, 74.0], [116.0, 1067.0], [124.0, 614.0], [134.0, 924.0], [129.0, 67.0], [143.0, 916.0], [141.0, 773.0], [138.0, 814.0], [149.0, 472.0], [148.0, 456.33333333333337], [147.0, 73.0], [146.0, 592.0], [145.0, 905.0], [156.0, 189.0], [154.0, 824.0], [153.0, 838.0], [174.0, 117.33333333333333], [172.0, 109.5], [171.0, 301.3333333333333], [170.0, 465.0], [168.0, 318.0], [181.0, 53.0], [180.0, 62.333333333333336], [179.0, 409.0], [178.0, 76.0], [190.0, 76.0], [188.0, 551.5], [198.0, 427.0], [200.0, 98.25217391304344], [18.0, 1423.0], [19.0, 788.4285714285714], [27.0, 1652.0]], "isOverall": false, "label": "Get List User", "isController": false}, {"data": [[163.08999999999997, 277.43]], "isOverall": false, "label": "Get List User-Aggregated", "isController": false}, {"data": [[141.0, 936.3333333333334], [138.0, 951.0], [158.0, 290.0], [180.0, 65.0], [179.0, 73.0], [189.0, 95.0], [187.0, 430.6666666666667], [184.0, 48.5], [198.0, 557.0], [192.0, 522.0], [200.0, 90.00641025641028], [19.0, 910.7142857142857], [20.0, 1743.0], [91.0, 285.0], [90.0, 721.0], [93.0, 293.6666666666667], [125.0, 78.25], [124.0, 509.0]], "isOverall": false, "label": "Get Single User", "isController": false}, {"data": [[183.58500000000006, 185.955]], "isOverall": false, "label": "Get Single User-Aggregated", "isController": false}, {"data": [[143.0, 6451.0], [141.0, 6276.888888888888], [140.0, 6649.0], [19.0, 7496.0], [20.0, 7092.0], [198.0, 6155.5], [200.0, 5481.722222222223]], "isOverall": false, "label": "Create User", "isController": false}, {"data": [[193.99, 5576.595]], "isOverall": false, "label": "Create User-Aggregated", "isController": false}, {"data": [[16.0, 906.181818181818], [17.0, 911.0], [18.0, 392.0], [19.0, 448.0], [22.0, 415.0], [25.0, 428.4], [27.0, 417.0], [29.0, 424.5], [32.0, 431.0], [35.0, 440.0], [39.0, 430.0], [41.0, 413.0], [42.0, 415.5], [44.0, 422.0], [47.0, 396.5], [46.0, 398.0], [48.0, 408.6666666666667], [50.0, 431.5], [52.0, 870.5], [57.0, 420.5], [61.0, 418.0], [60.0, 418.3333333333333], [73.0, 477.0], [72.0, 452.625], [87.0, 758.0], [91.0, 487.5], [90.0, 501.0], [89.0, 977.0], [88.0, 461.0], [93.0, 553.5], [97.0, 636.6666666666666], [96.0, 486.6666666666667], [103.0, 722.0], [104.0, 918.0], [109.0, 495.0], [114.0, 492.0], [119.0, 487.0], [118.0, 448.0], [117.0, 474.75], [123.0, 702.0], [120.0, 461.0], [124.0, 469.0], [143.0, 625.6666666666666], [141.0, 526.4], [138.0, 474.5], [137.0, 592.75], [136.0, 487.0], [150.0, 493.0], [149.0, 485.6666666666667], [148.0, 483.6666666666667], [147.0, 483.5], [146.0, 703.3333333333334], [145.0, 483.0], [156.0, 485.0], [153.0, 593.0], [174.0, 504.0], [173.0, 509.0], [172.0, 545.0909090909089], [171.0, 536.2], [169.0, 597.0], [168.0, 590.3846153846155], [180.0, 454.0], [178.0, 496.0], [177.0, 498.0], [176.0, 471.75], [189.0, 505.0], [187.0, 429.0], [198.0, 516.6666666666666], [195.0, 476.0], [194.0, 505.0], [192.0, 497.0], [200.0, 484.125]], "isOverall": false, "label": "Update User", "isController": false}, {"data": [[117.96499999999993, 547.5400000000001]], "isOverall": false, "label": "Update User-Aggregated", "isController": false}, {"data": [[4.0, 26.0], [5.0, 25.0], [7.0, 23.333333333333332], [9.0, 22.0], [10.0, 22.0], [12.0, 20.0], [14.0, 18.5], [16.0, 15.5], [17.0, 711.0], [18.0, 15.0], [19.0, 13.0], [20.0, 36.0], [22.0, 22.5], [25.0, 13.0], [27.0, 12.5], [28.0, 11.0], [29.0, 13.0], [31.0, 11.5], [33.0, 23.0], [32.0, 807.0], [35.0, 21.0], [37.0, 20.5], [41.0, 29.0], [42.0, 840.0], [44.0, 19.0], [47.0, 9.5], [46.0, 9.0], [49.0, 15.0], [48.0, 14.0], [51.0, 15.0], [50.0, 8.0], [53.0, 21.0], [52.0, 25.0], [54.0, 13.0], [57.0, 13.0], [61.0, 23.0], [60.0, 270.66666666666663], [63.0, 18.0], [62.0, 19.0], [67.0, 14.0], [64.0, 17.0], [71.0, 14.0], [70.0, 331.0], [73.0, 62.0], [72.0, 589.0], [79.0, 61.0], [76.0, 72.66666666666667], [83.0, 42.0], [82.0, 40.5], [80.0, 44.0], [87.0, 42.0], [85.0, 30.0], [84.0, 45.0], [91.0, 70.0], [90.0, 74.0], [89.0, 59.0], [88.0, 35.0], [95.0, 121.0], [93.0, 468.5], [99.0, 458.0], [98.0, 87.0], [96.0, 98.0], [103.0, 78.0], [102.0, 212.33333333333331], [100.0, 458.0], [106.0, 80.0], [105.0, 80.0], [104.0, 400.0], [109.0, 169.0], [108.0, 172.0], [115.0, 189.0], [113.0, 74.0], [112.0, 184.33333333333334], [119.0, 193.0], [118.0, 355.0], [117.0, 75.0], [116.0, 368.0], [123.0, 172.0], [122.0, 192.5], [120.0, 196.0], [125.0, 79.0], [124.0, 179.0], [135.0, 60.0], [134.0, 100.0], [132.0, 79.5], [129.0, 89.5], [143.0, 83.5], [141.0, 518.0], [140.0, 215.0], [139.0, 216.0], [138.0, 203.0], [137.0, 69.0], [136.0, 209.0], [150.0, 79.0], [149.0, 139.0], [148.0, 480.0], [147.0, 166.0], [146.0, 87.0], [145.0, 333.0], [158.0, 77.0], [157.0, 85.0], [156.0, 81.0], [155.0, 103.0], [154.0, 73.0], [153.0, 151.33333333333334], [167.0, 64.0], [164.0, 69.0], [163.0, 75.5], [162.0, 74.0], [161.0, 76.0], [175.0, 149.0], [174.0, 118.0], [172.0, 98.0], [171.0, 80.0], [170.0, 81.0], [168.0, 62.5], [182.0, 144.0], [181.0, 147.0], [180.0, 65.0], [179.0, 67.0], [178.0, 78.0], [177.0, 76.0], [176.0, 150.0], [191.0, 73.0], [190.0, 74.0], [189.0, 94.0], [188.0, 99.0], [187.0, 143.0], [184.0, 105.0], [198.0, 101.0], [197.0, 94.0], [195.0, 87.0], [194.0, 133.5], [200.0, 78.5]], "isOverall": false, "label": "Delayed Response", "isController": false}, {"data": [[101.07000000000004, 116.42000000000004]], "isOverall": false, "label": "Delayed Response-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2996.6666666666665, "minX": 1.64786166E12, "maxY": 22095.283333333333, "series": [{"data": [[1.64786166E12, 22095.283333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.64786166E12, 2996.6666666666665]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64786166E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 116.42000000000004, "minX": 1.64786166E12, "maxY": 5576.595, "series": [{"data": [[1.64786166E12, 277.43]], "isOverall": false, "label": "Get List User", "isController": false}, {"data": [[1.64786166E12, 185.955]], "isOverall": false, "label": "Get Single User", "isController": false}, {"data": [[1.64786166E12, 5576.595]], "isOverall": false, "label": "Create User", "isController": false}, {"data": [[1.64786166E12, 547.5400000000001]], "isOverall": false, "label": "Update User", "isController": false}, {"data": [[1.64786166E12, 116.42000000000004]], "isOverall": false, "label": "Delayed Response", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64786166E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 102.84000000000002, "minX": 1.64786166E12, "maxY": 5576.040000000001, "series": [{"data": [[1.64786166E12, 189.82499999999993]], "isOverall": false, "label": "Get List User", "isController": false}, {"data": [[1.64786166E12, 185.905]], "isOverall": false, "label": "Get Single User", "isController": false}, {"data": [[1.64786166E12, 5576.040000000001]], "isOverall": false, "label": "Create User", "isController": false}, {"data": [[1.64786166E12, 547.5100000000001]], "isOverall": false, "label": "Update User", "isController": false}, {"data": [[1.64786166E12, 102.84000000000002]], "isOverall": false, "label": "Delayed Response", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64786166E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.64786166E12, "maxY": 4932.445000000001, "series": [{"data": [[1.64786166E12, 0.0]], "isOverall": false, "label": "Get List User", "isController": false}, {"data": [[1.64786166E12, 0.0]], "isOverall": false, "label": "Get Single User", "isController": false}, {"data": [[1.64786166E12, 4932.445000000001]], "isOverall": false, "label": "Create User", "isController": false}, {"data": [[1.64786166E12, 0.0]], "isOverall": false, "label": "Update User", "isController": false}, {"data": [[1.64786166E12, 0.0]], "isOverall": false, "label": "Delayed Response", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64786166E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 8.0, "minX": 1.64786166E12, "maxY": 7508.0, "series": [{"data": [[1.64786166E12, 7508.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.64786166E12, 5548.6]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.64786166E12, 6287.96]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.64786166E12, 5720.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.64786166E12, 8.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.64786166E12, 294.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64786166E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 292.5, "minX": 34.0, "maxY": 5045.0, "series": [{"data": [[283.0, 5045.0], [34.0, 570.5], [456.0, 292.5], [227.0, 355.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 456.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 267.0, "minX": 34.0, "maxY": 5019.0, "series": [{"data": [[283.0, 5019.0], [34.0, 570.5], [456.0, 280.5], [227.0, 267.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 456.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 3.3333333333333335, "minX": 1.6478616E12, "maxY": 13.333333333333334, "series": [{"data": [[1.64786166E12, 13.333333333333334], [1.6478616E12, 3.3333333333333335]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64786166E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 3.3333333333333335, "minX": 1.64786166E12, "maxY": 13.333333333333334, "series": [{"data": [[1.64786166E12, 13.333333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.64786166E12, 3.3333333333333335]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64786166E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 3.3333333333333335, "minX": 1.64786166E12, "maxY": 3.3333333333333335, "series": [{"data": [[1.64786166E12, 3.3333333333333335]], "isOverall": false, "label": "Update User-success", "isController": false}, {"data": [[1.64786166E12, 3.3333333333333335]], "isOverall": false, "label": "Get List User-success", "isController": false}, {"data": [[1.64786166E12, 3.3333333333333335]], "isOverall": false, "label": "Get Single User-success", "isController": false}, {"data": [[1.64786166E12, 3.3333333333333335]], "isOverall": false, "label": "Delayed Response-success", "isController": false}, {"data": [[1.64786166E12, 3.3333333333333335]], "isOverall": false, "label": "Create User-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64786166E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.64786166E12, "maxY": 16.666666666666668, "series": [{"data": [[1.64786166E12, 16.666666666666668]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64786166E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

